<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
  <title>紅楓吟 - Linux</title>
    <subtitle>风落花语风落天，花落风雨花落田.</subtitle>
  <link href="https://honmaple.me/categories/linux/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://honmaple.me"/>
  <generator uri="https://github.com/honmaple/snow">Snow</generator>
    <updated>Sun, 26 Feb 2023 01:28:12 +0000</updated>
  <id>https://honmaple.me</id>
    <entry xml:lang="zh">
      <title>Emacs笔记之修复yaml-mode的格式化问题</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 21 Feb 2023 17:18:40 +0000</published>
      <updated>Sun, 26 Feb 2023 01:28:12 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/02/Emacs笔记之修复yaml-mode的格式化问题.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/02/Emacs笔记之修复yaml-mode的格式化问题.html</id>
      <summary type="html">
&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;更新时间&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2023-02-26&lt;/td&gt;
&lt;td&gt;增加更多判断逻辑, 比如上一行是列表，当前行也是列表，则按正常缩进计算&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;
一直以来 &lt;b&gt;yaml-mode&lt;/b&gt; 都有一个问题，在使用 &lt;code&gt;(indent-region (point-min) (point-max))&lt;/code&gt; 时已经格式好的内容总是会得到错误的缩进，比如一个简单的配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
在调用 &lt;code&gt;indent-regin&lt;/code&gt; 后就会变成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">
&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;更新时间&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2023-02-26&lt;/td&gt;
&lt;td&gt;增加更多判断逻辑, 比如上一行是列表，当前行也是列表，则按正常缩进计算&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;
一直以来 &lt;b&gt;yaml-mode&lt;/b&gt; 都有一个问题，在使用 &lt;code&gt;(indent-region (point-min) (point-max))&lt;/code&gt; 时已经格式好的内容总是会得到错误的缩进，比如一个简单的配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
在调用 &lt;code&gt;indent-regin&lt;/code&gt; 后就会变成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
而我又总是手痒，写好的配置文件总是会忍不住 &lt;code&gt;indent-region&lt;/code&gt; 一番，结果本来正确的格式立马变得各种乱七八糟，当初为了解决这个问题，还专门为 &lt;b&gt;yaml-mode&lt;/b&gt; 激活了 &lt;b&gt;lsp-mode&lt;/b&gt;, 并且使用 &lt;code&gt;lsp-format-buffer&lt;/code&gt; 来进行处理。
&lt;/p&gt;

&lt;p&gt;
本来一切都还正常，但最近发现了另外一个问题，如果在 &lt;b&gt;org-mode&lt;/b&gt; 中插入 &lt;b&gt;yaml&lt;/b&gt; 的代码片段，调用 &lt;code&gt;indent-region&lt;/code&gt; 还是还有之前的问题, &lt;b&gt;org-mode&lt;/b&gt; 中又无法直接调用 &lt;code&gt;lsp-format-buffer&lt;/code&gt;, 所以专门研究了一下 &lt;b&gt;yaml-mode&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
发现 &lt;b&gt;yaml-mode&lt;/b&gt; 只是定义了 &lt;code&gt;indent-line-function&lt;/code&gt; 变量，没有定义 &lt;code&gt;indent-region-function&lt;/code&gt;, 导致调用 &lt;code&gt;indent-region&lt;/code&gt; 时其实是逐行调用 &lt;code&gt;yaml-indent-line&lt;/code&gt;, 这里面有一个计算当前缩进的 &lt;code&gt;yaml-compute-indentation&lt;/code&gt; 函数，计算方式有些简单粗暴，如果上一行是一个 &lt;b&gt;hash key&lt;/b&gt;, 当前行的缩进就是上一行的缩进加 &lt;code&gt;yaml-indent-offset&lt;/code&gt; 的值, 这里并没有判断当前行是新建行还是已经有相关内容，如果是新建行那么缩进就是对的，如果是已有的内容就是错的，所以我修改了这一部分逻辑，如果是 &lt;b&gt;已有内容并且当前行的缩进小于上一行&lt;/b&gt; 则不进行处理, 比如:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
test3:&lt;/pre&gt;
&lt;p&gt;
虽然增加的判断逻辑很简单，但至少在使用 &lt;code&gt;indent-region&lt;/code&gt; 时已经格式好的内容就不会出现混乱的情况了, 也不用专门为 &lt;b&gt;yaml&lt;/b&gt; 文件激活一个 &lt;b&gt;lsp&lt;/b&gt; 进程。
&lt;/p&gt;

&lt;p&gt;
目前处理的方式还是采用 advice + letf 形式，否则需要修改很多内容，有兴趣的同道可以参考一下
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/yaml-compute-indentation()
  (let ((ci (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-indentation&lt;/span&gt;))
        (cm (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-hash-key-re))
        (cl (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;^&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;+.*$&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
    (save-excursion
      (&lt;span style=&quot;color:#a6e22e&quot;&gt;beginning-of-line&lt;/span&gt;)
      (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-document-delimiter-re) &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;-1&lt;/span&gt;)
        (while (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-blank-line-re)
                    (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;gt;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;point&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;point-min&lt;/span&gt;)))
          (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;-1&lt;/span&gt;))
        (let ((li (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-indentation&lt;/span&gt;))
              (ll (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;^&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;+.*$&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进大于当前行, 上一行是列表，当前行也是是列表 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进大于当前行, 上一行和当前行有一个不是列表 - 原有缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进等于当前行, 上一行是字典，当前行是列表 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进等于当前行, 上一行是字典，当前行是不是列表 - 原有缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进小于当前行, 上一行是字典 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进小于当前行, 上一行是列表，当前行也是列表 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进小于当前行, 上一行是列表，当前行是字典 - 错误/正常缩进&lt;/span&gt;
          (if (or (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;gt;&lt;/span&gt; li ci) (or (not cl) (not ll))) (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;=&lt;/span&gt; li ci) cm (not ll))) ci
            (&lt;span style=&quot;color:#a6e22e&quot;&gt;+&lt;/span&gt; li
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-nested-map-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-nested-sequence-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-block-literal-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;))))))))

(defun maple/yaml-indent-region(func &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;rest&lt;/span&gt; args)
  (if (derived-mode-p &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;yaml-mode&lt;/span&gt;)
      (letf (((&lt;span style=&quot;color:#a6e22e&quot;&gt;symbol-function&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;yaml-compute-indentation&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple/yaml-compute-indentation&lt;/span&gt;))
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; func args))
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; func args)))

(advice-add &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;indent-region&lt;/span&gt; :around &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple/yaml-indent-region&lt;/span&gt;)&lt;/pre&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>静态博客中的shortcode实现</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 07 Feb 2023 15:57:51 +0000</published>
      <updated>Sun, 26 Feb 2023 01:12:18 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/02/静态博客中的shortcode实现.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/02/静态博客中的shortcode实现.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;b&gt;shortcode&lt;/b&gt;,直译过来就是 &lt;b&gt;短代码&lt;/b&gt;。 熟悉 &lt;b&gt;hugo&lt;/b&gt; 的人对此也一定有所了解，&lt;b&gt;shortcode&lt;/b&gt; 允许用户使用部分关键参数就可以在文章内部插入设置好的HTML模版内容，而不用写大段的HTML代码，比如插入指定视频或者音乐,使用 &lt;b&gt;shortcode&lt;/b&gt; 之前需要使用 &lt;b&gt;iframe&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;frameborder&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;marginwidth&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;marginheight&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;330&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;86&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;//music.163.com...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;实现方式&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;Markdown渲染&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;查找HTML标签&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;替换HTML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;结尾&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;b&gt;shortcode&lt;/b&gt;,直译过来就是 &lt;b&gt;短代码&lt;/b&gt;。 熟悉 &lt;b&gt;hugo&lt;/b&gt; 的人对此也一定有所了解，&lt;b&gt;shortcode&lt;/b&gt; 允许用户使用部分关键参数就可以在文章内部插入设置好的HTML模版内容，而不用写大段的HTML代码，比如插入指定视频或者音乐,使用 &lt;b&gt;shortcode&lt;/b&gt; 之前需要使用 &lt;b&gt;iframe&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;frameborder&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;marginwidth&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;marginheight&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;330&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;86&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=xxx&amp;amp;auto=0&amp;amp;height=66&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;p&gt;
   而使用 &lt;b&gt;shortcode&lt;/b&gt; 后就可以只用指定关键的 &lt;b&gt;id&lt;/b&gt; 参数
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;163music&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;xxx&lt;/span&gt;&amp;gt;}}&lt;/pre&gt;
&lt;p&gt;
   当网易云音乐的分享代码更新后，可以直接更新 &lt;b&gt;shortcode&lt;/b&gt; 代码, 而不是搜索替换每一篇包括该iframe代码的文章, 同时 &lt;b&gt;shortcode&lt;/b&gt; 也可以扩展 &lt;b&gt;Markdown&lt;/b&gt; 的功能，比如文本的居中，居左，居右
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;align&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;left&lt;/span&gt;&amp;gt;}}
  文本内容
  {{&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;align&lt;/span&gt;&amp;gt;}}&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;实现方式&lt;/h2&gt;
&lt;p&gt;
   而想要在静态博客中实现 &lt;b&gt;shortcode&lt;/b&gt; 功能, 目前有两种方式
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 方式一: 修改 &lt;b&gt;Markdown&lt;/b&gt; 解析器, 在静态生成器解析文章内容时就可以对 &lt;b&gt;shortcode&lt;/b&gt; 进行解析，并将 &lt;b&gt;shortcode&lt;/b&gt; 替换成写好的模版，至少，我看到 &lt;b&gt;hugo&lt;/b&gt; 就是这么实现的
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 方式二: 如果不想修改 &lt;b&gt;Markdown&lt;/b&gt; 解析器，还可以直接修改生成好的 &lt;b&gt;HTML&lt;/b&gt; 内容，这种方式实现原理很简单，&lt;b&gt;Markdown允许插入HTML代码&lt;/b&gt;, 那么我们就可以直接在文章中写一个
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;163music&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/pre&gt;
&lt;p&gt;
     然后在现有的 &lt;b&gt;Markdown&lt;/b&gt; 解析库解析文章并生成 &lt;b&gt;HTML&lt;/b&gt; 后再次对HTML内容进行解析，目前主流语言都有现成的库很方便地解析HTML内容, 下面以 &lt;b&gt;Go&lt;/b&gt; 为例
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;Markdown渲染&lt;/h3&gt;
&lt;p&gt;
    比如有一篇文章，我想要添加网易云音乐的某首歌到文章内部，当使用现有的Markdown库对内容进行渲染
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;github.com/russross/blackfriday/v2&amp;#34;&lt;/span&gt;
)

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;() {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Hello World
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;lt;shortcode _name=&amp;#34;163music&amp;#34; id=&amp;#34;xxx&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;This is one of my favorite **music**.
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;d&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;blackfriday&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Run&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;fmt&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Println&lt;/span&gt;(string(&lt;span style=&quot;color:#a6e22e&quot;&gt;d&lt;/span&gt;))
}&lt;/pre&gt;

&lt;p&gt;
    输出结果
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;Hello World&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;163music&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt; /&amp;gt;
  This is one of my favorite &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;music&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;查找HTML标签&lt;/h3&gt;
&lt;p&gt;
    可以使用 &lt;code&gt;golang.org/x/net/html&lt;/code&gt; 对HTML内容进行解析, 并查找到 &lt;b&gt;shortcode&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;bytes&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;github.com/russross/blackfriday/v2&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;golang.org/x/net/html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;text/template&amp;#34;&lt;/span&gt;
)

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;() {
    &lt;span style=&quot;color:#75715e&quot;&gt;// ...
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;var&lt;/span&gt; (
        &lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Buffer&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;z&lt;/span&gt; = &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;NewTokenizer&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;NewReader&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;d&lt;/span&gt;))
    )
    &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;next&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;z&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Next&lt;/span&gt;()
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;next&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;ErrorToken&lt;/span&gt; {
            &lt;span style=&quot;color:#66d9ef&quot;&gt;break&lt;/span&gt;
        }

        &lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;z&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Token&lt;/span&gt;()
        &lt;span style=&quot;color:#66d9ef&quot;&gt;switch&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;next&lt;/span&gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;StartTagToken&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;SelfClosingTagToken&lt;/span&gt;:
            &lt;span style=&quot;color:#75715e&quot;&gt;// 找到shortcode标签
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;            &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Data&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;shortcode&amp;#34;&lt;/span&gt; {

            }
        }
        &lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;WriteString&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;String&lt;/span&gt;())
    }
    &lt;span style=&quot;color:#a6e22e&quot;&gt;fmt&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Println&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;String&lt;/span&gt;())
}&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.3&quot;&gt;替换HTML&lt;/h3&gt;
&lt;p&gt;
    首先把需要替换的 &lt;b&gt;iframe&lt;/b&gt; 转换成模版
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;replace&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;lt;iframe
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;frameborder=&amp;#34;no&amp;#34; border=&amp;#34;0&amp;#34;
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;marginwidth=&amp;#34;0&amp;#34; marginheight=&amp;#34;0&amp;#34;
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;width=330 height=86
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;src=&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;{{&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;.id&lt;/span&gt; &lt;span style=&quot;color:#75715e&quot;&gt;}}&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;amp;auto=0&amp;amp;height=66&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;

&lt;span style=&quot;color:#a6e22e&quot;&gt;tmpl&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;template&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;New&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;).&lt;span style=&quot;color:#a6e22e&quot;&gt;Parse&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;replace&lt;/span&gt;)
&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; {
    panic(&lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt;)
}&lt;/pre&gt;

&lt;p&gt;
    然后根据标签参数替换原来的HTML
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// 获取该标签的参数
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; make(&lt;span style=&quot;color:#66d9ef&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;)
&lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;attr&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;range&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Attr&lt;/span&gt; {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt;[&lt;span style=&quot;color:#a6e22e&quot;&gt;attr&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Key&lt;/span&gt;] = &lt;span style=&quot;color:#a6e22e&quot;&gt;attr&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Val&lt;/span&gt;
}
&lt;span style=&quot;color:#75715e&quot;&gt;// 确认是163music
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt;[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;_name&amp;#34;&lt;/span&gt;] &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;163music&amp;#34;&lt;/span&gt; {
    &lt;span style=&quot;color:#75715e&quot;&gt;// 获取替换的内容
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;buf&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Buffer&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;tmpl&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Execute&lt;/span&gt;(&lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;buf&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt;)
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; {
        panic(&lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt;)
    }
    &lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;WriteString&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;buf&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;String&lt;/span&gt;())
    &lt;span style=&quot;color:#66d9ef&quot;&gt;continue&lt;/span&gt;
}&lt;/pre&gt;

&lt;p&gt;
    最后的输出结果
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;Hello World&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;frameborder&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;marginwidth&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;marginheight&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;330&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;86&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=xxx&amp;amp;auto=0&amp;amp;height=66&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt;&amp;gt;
  This is one of my favorite &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;music&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;结尾&lt;/h2&gt;
&lt;p&gt;
   目前&lt;a href=&quot;https://github.com/honmaple/snow&quot;&gt;snow&lt;/a&gt;的 &lt;b&gt;shortcode&lt;/b&gt; 功能就是根据第二种方式实现的，具体可以参考 &lt;a href=&quot;https://github.com/honmaple/snow/blob/master/builder/hook/shortcode/shortcode.go&quot;&gt;hooks/shortcode/shortcode.go&lt;/a&gt;, 利用此特性甚至还可以实现类似 &lt;b&gt;Hugo&lt;/b&gt; 中的 &lt;b&gt;Markdown Render Hook&lt;/b&gt; 功能,用于自定义 &lt;code&gt;img&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt; 等标签
&lt;/p&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Snow静态博客生成器</title>
      <link href="" rel="alternate"></link>
      <published>Sun, 16 Oct 2022 18:44:46 +0000</published>
      <updated>Sun, 26 Feb 2023 02:56:40 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2022/10/Snow静态博客生成器.html" type="text/html"/>
      <id>https://honmaple.me/articles/2022/10/Snow静态博客生成器.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
一个&lt;b&gt;简单却可配置&lt;/b&gt;的静态博客生成器。
很早之前(三年前)就想写一个静态博客生成器，但苦于一直没有时间，最近把之前写的重构了一下，让其可以支持更多的定制化配置。
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;至于为什么要重新写一个&lt;/b&gt;:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 大概是因为想要把之前未完成的轮子补充完整
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我目前使用的博客系统使用的是 &lt;b&gt;pelican&lt;/b&gt;，一个基于 &lt;b&gt;Python&lt;/b&gt; 的静态博客生成器，目前里面包括了很多我自己写的插件，比如 &lt;code&gt;Emacs org mode&lt;/code&gt; 的支持、文章加密、模版定制等，因为需要大量遍历所有文章，导致生成速度越来越慢，还有一点就是因为使用的是 &lt;b&gt;Python&lt;/b&gt;，每次本地预览时都需要切换到虚拟环境
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我习惯使用 &lt;b&gt;Emacs + Org&lt;/b&gt;，除了前期的几篇文章，后面都是使用 &lt;b&gt;org mode&lt;/b&gt; 书写，之前是因为 &lt;b&gt;Python&lt;/b&gt; 没有一个好用的 &lt;b&gt;org mode&lt;/b&gt; 解析库，所以专门写了一个 &lt;code&gt;org-python&lt;/code&gt; 用来解析 &lt;b&gt;org...&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;快速开始&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;创建新的站点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;编译和预览&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;内容&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;Section&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.1&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.2&quot;&gt;路径变量(&lt;b&gt;sections.xxx.path&lt;/b&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.3&quot;&gt;模版变量(&lt;b&gt;sections.xxx.template&lt;/b&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;Page&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2.1&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2.2&quot;&gt;路径变量(&lt;b&gt;sections.xxx.page_path&lt;/b&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2.3&quot;&gt;模版变量(&lt;b&gt;sections.xxx.page_template&lt;/b&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;Draft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4&quot;&gt;Taxonomy&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4.1&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4.2&quot;&gt;路径变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4.3&quot;&gt;模版变量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.5&quot;&gt;Archive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.6&quot;&gt;Pagination&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.6.1&quot;&gt;路径变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.6.2&quot;&gt;模版变量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.7&quot;&gt;Static&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.8&quot;&gt;Formats&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.8.1&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.8.2&quot;&gt;模版变量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.9&quot;&gt;theme&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.9.1&quot;&gt;主题目录结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.9.2&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.9.3&quot;&gt;&lt;span class=&quot;todo&quot;&gt;TODO&lt;/span&gt;默认配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10&quot;&gt;hook&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10.1&quot;&gt;i18n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10.2&quot;&gt;encrypt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10.3&quot;&gt;shortcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10.4&quot;&gt;assets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.11&quot;&gt;本地测试和正式发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
一个&lt;b&gt;简单却可配置&lt;/b&gt;的静态博客生成器。
很早之前(三年前)就想写一个静态博客生成器，但苦于一直没有时间，最近把之前写的重构了一下，让其可以支持更多的定制化配置。
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;至于为什么要重新写一个&lt;/b&gt;:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 大概是因为想要把之前未完成的轮子补充完整
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我目前使用的博客系统使用的是 &lt;b&gt;pelican&lt;/b&gt;，一个基于 &lt;b&gt;Python&lt;/b&gt; 的静态博客生成器，目前里面包括了很多我自己写的插件，比如 &lt;code&gt;Emacs org mode&lt;/code&gt; 的支持、文章加密、模版定制等，因为需要大量遍历所有文章，导致生成速度越来越慢，还有一点就是因为使用的是 &lt;b&gt;Python&lt;/b&gt;，每次本地预览时都需要切换到虚拟环境
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我习惯使用 &lt;b&gt;Emacs + Org&lt;/b&gt;，除了前期的几篇文章，后面都是使用 &lt;b&gt;org mode&lt;/b&gt; 书写，之前是因为 &lt;b&gt;Python&lt;/b&gt; 没有一个好用的 &lt;b&gt;org mode&lt;/b&gt; 解析库，所以专门写了一个 &lt;code&gt;org-python&lt;/code&gt; 用来解析 &lt;b&gt;org mode&lt;/b&gt;；最近我也是完善了另一个我很早之前就写的 &lt;code&gt;org-golang&lt;/code&gt; 解析库(轮子+1)，准备趁次机会利用一下这个库
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 至于为什么不用最近几年流行的 &lt;b&gt;Hugo&lt;/b&gt;, 因为我想要保持和我使用 &lt;b&gt;Pelican&lt;/b&gt; 时一样的功能，比如文章加密，而 &lt;b&gt;hugo&lt;/b&gt; 并不支持插件，想要自定义插件必须复制大段大段的启动函数, 甚至需要修改源代码。同样我想要定制一个相同的模版，而对于使用过其它模版系统如Django，jinja2, 再来使用 &lt;b&gt;Go内置模版&lt;/b&gt; 的人来说, &lt;b&gt;hugo&lt;/b&gt; 的内置模版除了难用就是难用，这也是我此次选用 &lt;b&gt;pongo2&lt;/b&gt; 的原因
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我的设想是提供插件的接口，并提供一个足够简单的启动函数, 在有用户需要自定义插件时只需要自己创建一个包, 使用三两行代码就能注册自定义插件并重新编译自己的snow
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;快速开始&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ ./snow --help
NAME:
   snow - snow is a static site generator.

USAGE:
   snow [global options] command [command options] [arguments...]

VERSION:
   0.1.0

COMMANDS:
   init     init a new site
   build    build and output
   server   server local files
   help, h  Shows a list of commands or help for one command

GLOBAL OPTIONS:
   --conf FILE, -c FILE  load configuration from FILE (default: &amp;#34;config.yaml&amp;#34;)
   --help, -h            show help (default: false)
   --version, -v         print the version (default: false)&lt;/pre&gt;
&lt;h3 id=&quot;heading-1.1&quot;&gt;创建新的站点&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;──╼ ./snow init
Welcome to snow 0.1.0.
&amp;gt; Where do you want to create your new web site? [.] mysnow
&amp;gt; What will be the title of this web site? [snow]
&amp;gt; Who will be the author of this web site?
The input is required
&amp;gt; Who will be the author of this web site? honmaple
&amp;gt; What is your URL prefix? (no trailing slash) [http://127.0.0.1:8000]
&amp;gt; Do you want to create first page? [Y/n]&lt;/pre&gt;

&lt;h3 id=&quot;heading-1.2&quot;&gt;编译和预览&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ cd mysnow
└──╼ ../snow server -D
DEBU Copying @theme/static/css/main.css to output/static/css/main.css
INFO Done: Static Processed 1 static files in 588.705µs
DEBU Writing output/categories/index.html
DEBU Writing output/authors/index.html
DEBU Writing output/tags/index.html
DEBU Writing output/posts/index.html
DEBU Writing output/authors/snow/index.html
DEBU Writing output/tags/snow/index.html
DEBU Writing output/categories/linux/index.html
DEBU Writing output/tags/linux/index.html
DEBU Writing output/tags/emacs/index.html
DEBU Writing output/categories/linux/emacs/index.html
INFO Done: Page Processed 1 normal pages, 0 hidden pages, 0 section pages in 10.087804ms
INFO Done: Section Processed 1 posts in 10.1831ms
INFO Done: Taxonomy Processed 1 authors, 3 tags, 1 categories in 10.18788ms&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;内容&lt;/h2&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;Section&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;content/
├── drafts            // &amp;lt;- http://127.0.0.1:8000/drafts/index.html
│   └── draft1.org    // &amp;lt;- http://127.0.0.1:8000/drafts/index.html
├── pages             // no url, because sections.pages.path is &amp;#34;&amp;#34;
│   └── 404.org       // &amp;lt;- http://127.0.0.1:8000/404.html
└── posts             // &amp;lt;- http://127.0.0.1:8000/posts/index.html
    ├── post1.org     // &amp;lt;- http://127.0.0.1:8000/posts/2022/02/post1.html
    └── subposts      // &amp;lt;- http://127.0.0.1:8000/posts/subposts/index.html
        └── post2.org // &amp;lt;- http://127.0.0.1:8000/posts/2023/02/post2.html&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.1.1&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;sections&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;_default&lt;/span&gt;:
    &lt;span style=&quot;color:#75715e&quot;&gt;# 页面中文章的默认排序, 多字段使用逗号分隔&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;orderby&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;date desc&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章筛选，主要用于分页前&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;filter&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 页面中文章默认分页, path必须使用{number}变量, 0表示不分页&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;paginate&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;10&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 分页路径&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;paginate_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{name}{number}{extension}&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 分页前筛选pages&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;paginate_filter&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 生成路径, 为空表示禁止生成相关页面&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{section}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 使用的模版&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;section.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 当前section下所有文章生成路径&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;page_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{section}/{slug}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章使用的模版&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;page_template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;post.html&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;posts&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;page_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;posts/{date:%Y}/{date:%m}/{slug}.html&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;pages&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;pages/about&lt;/span&gt;:
    &lt;span style=&quot;color:#75715e&quot;&gt;# 自定义pages/about下的文章生成路径，同时继承pages.path不会生成所有页面&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;page_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{slug}/index.html&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
     &lt;b&gt;filter&lt;/b&gt; 格式(下同):
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;#39;emacs&amp;#39; in tags and not draft or weight &amp;gt; 1&lt;/pre&gt;
&lt;p&gt;
     其中 &lt;b&gt;tags&lt;/b&gt;, &lt;b&gt;draft&lt;/b&gt; 等都是page元数据
&lt;/p&gt;

&lt;h4 id=&quot;heading-2.1.2&quot;&gt;路径变量(&lt;b&gt;sections.xxx.path&lt;/b&gt;)&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{section}&lt;/td&gt;
&lt;td&gt;section名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{section:slug}&lt;/td&gt;
&lt;td&gt;section slug, 中国 -&amp;gt; zhong-guo&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h4 id=&quot;heading-2.1.3&quot;&gt;模版变量(&lt;b&gt;sections.xxx.template&lt;/b&gt;)&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;section&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Title&lt;/td&gt;
&lt;td&gt;section标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Path&lt;/td&gt;
&lt;td&gt;section相对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Permalink&lt;/td&gt;
&lt;td&gt;section绝对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Content&lt;/td&gt;
&lt;td&gt;section内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Pages&lt;/td&gt;
&lt;td&gt;当前section下的文章列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Children&lt;/td&gt;
&lt;td&gt;子section&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Parent&lt;/td&gt;
&lt;td&gt;父section&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;Page&lt;/h3&gt;
&lt;h4 id=&quot;heading-2.2.1&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# 文章目录所在, 其中该目录下应该包括一系列子目录，这些子目录的名称对应为 *文章的类型*, 比如 *content/drafts/* 目录下的文章类型为 *drafts*, 当然也可以直接在文章文件头添加 =type: drafts=&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;content_dir&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.2.2&quot;&gt;路径变量(&lt;b&gt;sections.xxx.page_path&lt;/b&gt;)&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{date:%Y}&lt;/td&gt;
&lt;td&gt;创建文章的年份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{date:%m}&lt;/td&gt;
&lt;td&gt;创建文章的月份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{date:%d}&lt;/td&gt;
&lt;td&gt;创建文章的日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{date:%H}&lt;/td&gt;
&lt;td&gt;创建文章的小时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{lang}&lt;/td&gt;
&lt;td&gt;文章语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{slug}&lt;/td&gt;
&lt;td&gt;文章标题或自定义slug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{filename}&lt;/td&gt;
&lt;td&gt;文件名称(不带后缀名)&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h4 id=&quot;heading-2.2.3&quot;&gt;模版变量(&lt;b&gt;sections.xxx.page_template&lt;/b&gt;)&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;page&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Title&lt;/td&gt;
&lt;td&gt;页面标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Lang&lt;/td&gt;
&lt;td&gt;页面语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Date&lt;/td&gt;
&lt;td&gt;页面创建时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Modified&lt;/td&gt;
&lt;td&gt;页面修改时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Aliases&lt;/td&gt;
&lt;td&gt;页面其它链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Path&lt;/td&gt;
&lt;td&gt;页面相对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Permalink&lt;/td&gt;
&lt;td&gt;页面绝对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Summary&lt;/td&gt;
&lt;td&gt;页面简介&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Content&lt;/td&gt;
&lt;td&gt;页面内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Meta.xxx&lt;/td&gt;
&lt;td&gt;自定义的元数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Prev&lt;/td&gt;
&lt;td&gt;上一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Next&lt;/td&gt;
&lt;td&gt;下一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.HasPrev()&lt;/td&gt;
&lt;td&gt;是否有上一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.HasNext()&lt;/td&gt;
&lt;td&gt;是否有下一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.PrevInType&lt;/td&gt;
&lt;td&gt;同一类型上一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.NextInType&lt;/td&gt;
&lt;td&gt;同一类型下一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.HasPrevInType()&lt;/td&gt;
&lt;td&gt;是否有同一类型上一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.HasNextInType()&lt;/td&gt;
&lt;td&gt;是否有同一类型下一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;heading-2.3&quot;&gt;Draft&lt;/h3&gt;
&lt;p&gt;
    默认草稿标志为 &lt;code&gt;draft: true&lt;/code&gt;, 也可以将所有草稿放入同一个 &lt;b&gt;drafts&lt;/b&gt; 目录, 然后就可以在构建时增加筛选条件
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 排除草稿
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;snow build -F &amp;#39;not draft&amp;#39;&lt;/pre&gt;
&lt;p&gt;
      或者
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;snow build --filter &amp;#39;type != &amp;#34;drafts&amp;#34;&amp;#39;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 包括草稿
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;snow build -F &amp;#39;not draft or draft = true&amp;#39;&lt;/pre&gt;
&lt;p&gt;
      默认筛选条件可以写入配置 &lt;code&gt;build_filter&lt;/code&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.4&quot;&gt;Taxonomy&lt;/h3&gt;
&lt;h4 id=&quot;heading-2.4.1&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;taxonomies&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;_default&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{taxonomy}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# terms排序, 可选name,count&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;orderby&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{taxonomy}/list.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{taxonomy}/{term:slug}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{taxonomy}/single.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章列表筛选&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_filter&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章列表排序&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_orderby&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;date desc&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章列表分页&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_paginate&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_paginate_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_paginate_filter&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;categories&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;authors&lt;/span&gt;:
  tags:&lt;/pre&gt;

&lt;h4 id=&quot;heading-2.4.2&quot;&gt;路径变量&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;taxonomies.xxx.path&lt;/b&gt;
&lt;/p&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{taxonomy}&lt;/td&gt;
&lt;td&gt;分类系统名称&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;taxonomies.xxx.term_path&lt;/b&gt;
&lt;/p&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{taxonomy}&lt;/td&gt;
&lt;td&gt;分类系统名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{term}&lt;/td&gt;
&lt;td&gt;分类具体名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{term:slug}&lt;/td&gt;
&lt;td&gt;分类slug&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;heading-2.4.3&quot;&gt;模版变量&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;taxonomies.xxx.template&lt;/b&gt;
&lt;/p&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;taxonomy&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;taxonomy.Name&lt;/td&gt;
&lt;td&gt;分类系统名称, 如:categories,tags,authors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;taxonomy.Terms&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;taxonomies.xxx.term_template&lt;/b&gt;
&lt;/p&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;term&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.Name&lt;/td&gt;
&lt;td&gt;分类名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.Path&lt;/td&gt;
&lt;td&gt;相对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.Permalink&lt;/td&gt;
&lt;td&gt;绝对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.List&lt;/td&gt;
&lt;td&gt;文章列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.Children&lt;/td&gt;
&lt;td&gt;子分类&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.5&quot;&gt;Archive&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;taxonomies&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;date:2006/01&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;archives/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;archives.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;archives/{term}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;period_archives.html&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
    归档页面类似分类系统，其它 &lt;b&gt;date:2006/01&lt;/b&gt; 表示按年月归档, 并生成链接 &lt;b&gt;/archives/2022/10/index.html&lt;/b&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.6&quot;&gt;Pagination&lt;/h3&gt;
&lt;h4 id=&quot;heading-2.6.1&quot;&gt;路径变量&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{name}&lt;/td&gt;
&lt;td&gt;路径名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{extension}&lt;/td&gt;
&lt;td&gt;路径扩展&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{number}&lt;/td&gt;
&lt;td&gt;页码, 第一页为空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{number:one}&lt;/td&gt;
&lt;td&gt;页码, 第一页为&amp;#34;1&amp;#34;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 示例一:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;section/index.html&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;paginate_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{name}{number}{extension}&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 第一页: &lt;code&gt;section/index.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第二页: &lt;code&gt;section/index2.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第三页: &lt;code&gt;section/index3.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 示例二:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;section/index.html&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;paginate_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;page/{number:one}{extension}&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 第一页: &lt;code&gt;section/page/1.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第二页: &lt;code&gt;section/page/2.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第三页: &lt;code&gt;section/page/3.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;heading-2.6.2&quot;&gt;模版变量&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;paginator&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.URL&lt;/td&gt;
&lt;td&gt;分页链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.PageNum&lt;/td&gt;
&lt;td&gt;当前页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Total&lt;/td&gt;
&lt;td&gt;总页数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.HasPrev()&lt;/td&gt;
&lt;td&gt;是否有上一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Prev&lt;/td&gt;
&lt;td&gt;上一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Prev.URL&lt;/td&gt;
&lt;td&gt;上一页链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.HasNext()&lt;/td&gt;
&lt;td&gt;是否有下一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Next&lt;/td&gt;
&lt;td&gt;下一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Next.URL&lt;/td&gt;
&lt;td&gt;下一页链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.All&lt;/td&gt;
&lt;td&gt;所有页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.List&lt;/td&gt;
&lt;td&gt;当前页文章列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;heading-2.7&quot;&gt;Static&lt;/h3&gt;
&lt;p&gt;
    静态文件配置:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# 静态文件目录, 该目录区分主题的静态文件static&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;static_dirs&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 静态文件扩展，不配置将会使用静态文件目录下的所有文件&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;static_exts&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;.js&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;.css&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 静态文件路径，用于指定静态文件或静态目录的保存目录, 当有多条路径时，长度优先.&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;static_paths&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;static/CNAME&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;static/css/main.css&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/css/&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#75715e&quot;&gt;# 以@theme开头代表主题中的静态文件，即{theme.name}/static&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;#34;@theme/static&amp;#34;: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.8&quot;&gt;Formats&lt;/h3&gt;
&lt;p&gt;
    可以生成 &lt;b&gt;rss&lt;/b&gt;，&lt;b&gt;atom&lt;/b&gt; 或者其它任意格式(需要自定义模版)
&lt;/p&gt;
&lt;h4 id=&quot;heading-2.8.1&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# 设置rss格式的默认值&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;formats.rss&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;_internal/rss.xml&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;formats.atom&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;_internal/atom.xml&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;sections&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;_default&lt;/span&gt;:
    &lt;span style=&quot;color:#75715e&quot;&gt;# rss生成路径, 模版将会使用默认模版&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;formats.rss.path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{section:slug}/index.xml&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 为空时禁止生成&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;formats.atom.path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;taxonomies&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;tags&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;formats.atom&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;tags/{term:slug}/index.xml&amp;#34;&lt;/span&gt;
      &lt;span style=&quot;color:#75715e&quot;&gt;# 自定义模版&lt;/span&gt;
      &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;custom.atom.xml&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.8.2&quot;&gt;模版变量&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;section&lt;/td&gt;
&lt;td&gt;仅生成section 有效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term&lt;/td&gt;
&lt;td&gt;仅生成taxonomy term 有效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pages&lt;/td&gt;
&lt;td&gt;文章列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;heading-2.9&quot;&gt;theme&lt;/h3&gt;
&lt;h4 id=&quot;heading-2.9.1&quot;&gt;主题目录结构&lt;/h4&gt;
&lt;p&gt;
     其中 &lt;b&gt;templates&lt;/b&gt; 和 &lt;b&gt;static&lt;/b&gt; 名称不可修改
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;simple/
├── templates
│   ├── post.html
│   ├── index.html
│   ├── archives.html
├── static
│   ├── main.css&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.9.2&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;theme&lt;/span&gt;:
  &lt;span style=&quot;color:#75715e&quot;&gt;# 主题名称, 未设置将使用默认主题&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;test-theme&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#75715e&quot;&gt;# 主题模版覆盖, 增加同名的文件到 *override* 配置的目录, snow将会优先使用该文件&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;override&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;layouts&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;h4 id=&quot;heading-2.9.3&quot;&gt;&lt;span class=&quot;todo&quot;&gt;TODO&lt;/span&gt;默认配置&lt;/h4&gt;

&lt;h3 id=&quot;heading-2.10&quot;&gt;hook&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;hooks&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;i18n&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;assets&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;encrypt&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;shortcode&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.10.1&quot;&gt;i18n&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 模版
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{% i18n &amp;#34;tags&amp;#34; %}
{% T &amp;#34;tags %d&amp;#34; 12 %}
{{ i18n(&amp;#34;authors&amp;#34;) }}
{{ T(&amp;#34;authors&amp;#34;) }}
{{ _(&amp;#34;authors %f&amp;#34;, 3.14) }}&lt;/pre&gt;
&lt;p&gt;
       甚至可以直接使用变量
       {{ _(term.Name) }}
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 翻译文件
       默认会加载主题下 &lt;b&gt;i18n&lt;/b&gt; 目录下的文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;i18n
├── en.yaml
└── zh.yaml&lt;/pre&gt;
&lt;p&gt;
       文件内容
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;---
- &lt;span style=&quot;color:#66d9ef&quot;&gt;id&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;authors&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;tr&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;作者&amp;#34;&lt;/span&gt;
- &lt;span style=&quot;color:#66d9ef&quot;&gt;id&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;tr&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;标签&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;
       也可以自定义文件位置或翻译内容覆盖主题原有的翻译
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;languages.en&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;translations&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;i18n/en.yaml&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;languages.zh&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;translations&lt;/span&gt;:
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;id&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;authors&amp;#34;&lt;/span&gt;
      &lt;span style=&quot;color:#66d9ef&quot;&gt;tr&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;作者&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;heading-2.10.2&quot;&gt;encrypt&lt;/h4&gt;
&lt;p&gt;
     内容加密, 需要一个密码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{ page.Content | encrypt:&amp;#34;123456&amp;#34; }}&lt;/pre&gt;

&lt;h4 id=&quot;heading-2.10.3&quot;&gt;shortcode&lt;/h4&gt;
&lt;p&gt;
     用于快速插入已有模版, 示例:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;shortcode _name=&amp;#34;encrypt&amp;#34; password=&amp;#34;1234567&amp;#34;&amp;gt;
hello *markdown*
&amp;lt;/shortcode&amp;gt;

&amp;lt;shortcode _name=&amp;#34;gist&amp;#34; author=&amp;#34;spf13&amp;#34; id=&amp;#34;7896402&amp;#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;
     可以自定义 &lt;b&gt;shortcode&lt;/b&gt; 到主题的 &lt;code&gt;templates/shortcodes&lt;/code&gt; 目录下, 目前内置 &lt;b&gt;gist&lt;/b&gt;, &lt;b&gt;encrypt&lt;/b&gt;
&lt;/p&gt;
&lt;h4 id=&quot;heading-2.10.4&quot;&gt;assets&lt;/h4&gt;
&lt;p&gt;
     静态文件处理
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;params&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;assets&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;css&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;files&lt;/span&gt;:
        - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/main.scss&amp;#34;&lt;/span&gt;
        - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/entry.scss&amp;#34;&lt;/span&gt;
      &lt;span style=&quot;color:#66d9ef&quot;&gt;filters&lt;/span&gt;:
        - &lt;span style=&quot;color:#66d9ef&quot;&gt;libscss&lt;/span&gt;:
            &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: [&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/&amp;#34;&lt;/span&gt;]
        - &lt;span style=&quot;color:#66d9ef&quot;&gt;cssmin&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;output&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/lib.min.css&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;
     模版文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{% assets files=&amp;#34;css/style.scss&amp;#34; filters=&amp;#34;libsass,cssmin&amp;#34; output=&amp;#34;css/style.min.css&amp;#34; %}
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;link&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;rel&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ config.site.url }}/{{ asset_url }}&amp;#34;&lt;/span&gt;&amp;gt;
{% endassets %}

{% assets css %}
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;link&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;rel&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ config.site.url }}/{{ asset_url }}&amp;#34;&lt;/span&gt;&amp;gt;
{% endassets %}&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.11&quot;&gt;本地测试和正式发布&lt;/h3&gt;
&lt;p&gt;
    snow 提供了 &lt;b&gt;mode&lt;/b&gt; 配置用于区分本地测试和正式发布
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;site&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;url&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;http://127.0.0.1:8000&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;output_dir&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;output&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;mode.publish&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;site&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;url&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;output_dir&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;mode.develop&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;include&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;develop.yaml&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
    只要在构建时使用 &lt;code&gt;snow build --mode publish&lt;/code&gt; 即可覆盖本地默认配置
&lt;/p&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs笔记之minibuffer默认输入</title>
      <link href="" rel="alternate"></link>
      <published>Thu, 25 Nov 2021 22:14:00 +0000</published>
      <updated>Fri, 24 Feb 2023 08:12:33 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/11/Emacs笔记之minibuffer默认输入.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/11/Emacs笔记之minibuffer默认输入.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
在使用 &lt;b&gt;evil-ex&lt;/b&gt;，也就是冒号+命令时，有一个非常有趣的功能，输入冒号后，&lt;b&gt;minibuffer&lt;/b&gt; 会显示上一次执行的命令，比如 &lt;code&gt;:wq&lt;/code&gt;, 确认可以直接执行这个命令，但是输入任意字符，就会把原先的 &lt;code&gt;wq&lt;/code&gt; 直接覆盖，接收新的命令输入
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
我觉得这是一个非常有趣且有用的功能，像 &lt;code&gt;read-string&lt;/code&gt; 函数，如果我想要一个默认的输入，可以直接使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;
&lt;p&gt;
但我想覆盖这个默认, 则需要先把 &lt;code&gt;默认内容&lt;/code&gt; 删除，再输入我想要的字符, 如果不想先删除默认再输入，还可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">
&lt;blockquote&gt;
&lt;p&gt;
在使用 &lt;b&gt;evil-ex&lt;/b&gt;，也就是冒号+命令时，有一个非常有趣的功能，输入冒号后，&lt;b&gt;minibuffer&lt;/b&gt; 会显示上一次执行的命令，比如 &lt;code&gt;:wq&lt;/code&gt;, 确认可以直接执行这个命令，但是输入任意字符，就会把原先的 &lt;code&gt;wq&lt;/code&gt; 直接覆盖，接收新的命令输入
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
我觉得这是一个非常有趣且有用的功能，像 &lt;code&gt;read-string&lt;/code&gt; 函数，如果我想要一个默认的输入，可以直接使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;
&lt;p&gt;
但我想覆盖这个默认, 则需要先把 &lt;code&gt;默认内容&lt;/code&gt; 删除，再输入我想要的字符, 如果不想先删除默认再输入，还可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;
&lt;p&gt;
但是这样的话我无法看到默认的内容，当然，也许可以把默认内容追加到 &lt;code&gt;prompt&lt;/code&gt; 里，我认为这样不太好看，不是吗
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let* ((default &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
       (input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt (default %s): &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; default) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; default)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;

&lt;p&gt;
&lt;code&gt;evil-ex&lt;/code&gt; 提示我一个新的解决方式, 通过查看 &lt;code&gt;evil-ex&lt;/code&gt; 源码，可以发现它是使用 &lt;code&gt;minibuffer-with-setup-hook&lt;/code&gt; 和 &lt;code&gt;after-change-functions&lt;/code&gt; 在&lt;b&gt;minibuffer&lt;/b&gt;里插入新内容时先清理默认内容, 再插入新内容, 我简化了相关代码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (minibuffer-with-setup-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-input-setup&lt;/span&gt;
               (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;propertize&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;shadow&lt;/span&gt;)))))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))

(defun maple-input-setup()
  (add-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;after-change-functions&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-input-update&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;))

(defun maple-input-update(&lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; beg end len &lt;span style=&quot;color:#a6e22e&quot;&gt;string&lt;/span&gt;)
  (let ((&lt;span style=&quot;color:#a6e22e&quot;&gt;string&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-substring-no-properties&lt;/span&gt; beg end)))
    (delete-minibuffer-contents)
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;insert&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;string&lt;/span&gt;)
    (remove-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;after-change-functions&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-input-update&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)))&lt;/pre&gt;

&lt;p&gt;
OK, 就这样
&lt;/p&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs自动插入更新文件头——maple-header</title>
      <link href="" rel="alternate"></link>
      <published>Wed, 06 Oct 2021 14:57:51 +0000</published>
      <updated>Fri, 24 Feb 2023 08:12:43 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/10/Emacs自动插入更新文件头——maple-header.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/10/Emacs自动插入更新文件头——maple-header.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
一个简单的插件，可以在文件创建时自动插入文件头，或者文件更新时自动更新文件头信息，虽然已经用了好几年，这次把相关代码提取并精简一下做成了插件 &lt;a href=&quot;https://github.com/honmaple/emacs-maple-header&quot;&gt;maple-header&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;安装&lt;/h1&gt;
&lt;h2 id=&quot;heading-1.1&quot;&gt;使用quelpa&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple-header
  :quelpa (:fetcher github :repo &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;honmaple/emacs-maple-header&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
  :hook (after-init &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header-mode))&lt;/pre&gt;
&lt;h2 id=&quot;heading-1.2&quot;&gt;克隆到本地&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;git clone https://github.com/honmaple/emacs-maple-header --depth=1 ~/.emacs/site-lisp/maple-header&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;安装&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;使用quelpa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;克隆到本地&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;配置&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;基础配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;自定义模版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;自定义更新&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;相关文章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
一个简单的插件，可以在文件创建时自动插入文件头，或者文件更新时自动更新文件头信息，虽然已经用了好几年，这次把相关代码提取并精简一下做成了插件 &lt;a href=&quot;https://github.com/honmaple/emacs-maple-header&quot;&gt;maple-header&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;安装&lt;/h1&gt;
&lt;h2 id=&quot;heading-1.1&quot;&gt;使用quelpa&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple-header
  :quelpa (:fetcher github :repo &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;honmaple/emacs-maple-header&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
  :hook (after-init &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header-mode))&lt;/pre&gt;
&lt;h2 id=&quot;heading-1.2&quot;&gt;克隆到本地&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;git clone https://github.com/honmaple/emacs-maple-header --depth=1 ~/.emacs/site-lisp/maple-header&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple-header
  :ensure &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
  :hook (after-init &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header-mode))&lt;/pre&gt;

&lt;h1 id=&quot;heading-2&quot;&gt;配置&lt;/h1&gt;
&lt;h2 id=&quot;heading-2.1&quot;&gt;基础配置&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;;; 更新文件头时搜索的文件函数, 9代表只会搜索前9行&lt;/span&gt;
(setq maple-header:lines &lt;span style=&quot;color:#ae81ff&quot;&gt;9&lt;/span&gt;)
&lt;span style=&quot;color:#75715e&quot;&gt;;; 创建新文件时是否自动插入文件头信息&lt;/span&gt;
(setq maple-header:auto-insert &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)
&lt;span style=&quot;color:#75715e&quot;&gt;;; 更新文件时是否自动更新文件头信息&lt;/span&gt;
(setq maple-header:auto-update &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)&lt;/pre&gt;
&lt;h2 id=&quot;heading-2.2&quot;&gt;自定义模版&lt;/h2&gt;
&lt;p&gt;
   比如我要自定义&lt;b&gt;Python&lt;/b&gt;文件的文件头
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(add-to-list &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-header:auto-insert-alist&lt;/span&gt;
             &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;((python-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Python program&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
               &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;h2 id=&quot;heading-2.3&quot;&gt;自定义更新&lt;/h2&gt;
&lt;p&gt;
   目前内置了 &lt;b&gt;filename, email, modify&lt;/b&gt; 三个字段, 可以通过调用 &lt;b&gt;maple-header:update-xxx&lt;/b&gt; 手动更新指定的字段, 如果需要增加新的或者覆盖原字段,可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(add-to-list &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-header:auto-update-alist&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(author &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; custom-update-author))

(defun custom-update-author(&lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; current-line)
  (interactive)
  (maple-header:update-action
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(Author:&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt; current-line))&lt;/pre&gt;
&lt;p&gt;
   使用 &lt;b&gt;maple-header:update&lt;/b&gt; 会更新所有字段(包括：&lt;b&gt;filename，email，modify，author&lt;/b&gt;), 如果只需要更新部分，需要修改为
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq maple-header:auto-update-alist
      &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;((filename &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header:update-filename)
        (modify &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header:update-modify)))&lt;/pre&gt;

&lt;h1 id=&quot;heading-3&quot;&gt;相关文章&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://honmaple.me/articles/2018/01/emacs自动添加文件头.html&quot;&gt;emacs自动添加文件头&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://honmaple.me/articles/2018/01/emacs自动更新文件头.html&quot;&gt;emacs自动更新文件头&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Docker笔记之registry清理</title>
      <link href="" rel="alternate"></link>
      <published>Mon, 23 Aug 2021 17:14:46 +0000</published>
      <updated>Thu, 02 Sep 2021 00:58:43 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/08/Docker笔记之registry清理.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/08/Docker笔记之registry清理.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
尝试了几种方式, 算是找到了一个比较方便的清理docker registry的方式
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;
  两年前分给了 &lt;b&gt;docker registry&lt;/b&gt; 1T的磁盘，虽然有预感磁盘空间会被用完, 没想过能够坚持这么久。
  而且期间一直想把 &lt;b&gt;registry&lt;/b&gt; 迁移到 &lt;b&gt;harbor&lt;/b&gt;，也能对不同账户的权限进行分配和限制，但几百G的磁盘占用也不好迁移，所以一直被耽搁(迁移方式都准备好了 &lt;a href=&quot;https://blog.k8s.li/docker-registry-to-harbor.html&quot;&gt;https://blog.k8s.li/docker-registry-to-harbor.html&lt;/a&gt;)
&lt;/p&gt;

&lt;h1 id=&quot;heading-2&quot;&gt;清理&lt;/h1&gt;
&lt;h2 id=&quot;heading-2.1&quot;&gt;列出所有镜像&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;registry garbage-collect --dry-run /etc/docker/registry/config.yml &amp;gt;&amp;gt; res.txt&lt;/pre&gt;

&lt;h2 id=&quot;heading-2.2&quot;&gt;找出分层(push次数)最多的几个镜像&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;cat res.txt...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;清理&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;列出所有镜像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;找出分层(push次数)最多的几个镜像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;删除某个镜像的untagged的数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
尝试了几种方式, 算是找到了一个比较方便的清理docker registry的方式
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;
  两年前分给了 &lt;b&gt;docker registry&lt;/b&gt; 1T的磁盘，虽然有预感磁盘空间会被用完, 没想过能够坚持这么久。
  而且期间一直想把 &lt;b&gt;registry&lt;/b&gt; 迁移到 &lt;b&gt;harbor&lt;/b&gt;，也能对不同账户的权限进行分配和限制，但几百G的磁盘占用也不好迁移，所以一直被耽搁(迁移方式都准备好了 &lt;a href=&quot;https://blog.k8s.li/docker-registry-to-harbor.html&quot;&gt;https://blog.k8s.li/docker-registry-to-harbor.html&lt;/a&gt;)
&lt;/p&gt;

&lt;h1 id=&quot;heading-2&quot;&gt;清理&lt;/h1&gt;
&lt;h2 id=&quot;heading-2.1&quot;&gt;列出所有镜像&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;registry garbage-collect --dry-run /etc/docker/registry/config.yml &amp;gt;&amp;gt; res.txt&lt;/pre&gt;

&lt;h2 id=&quot;heading-2.2&quot;&gt;找出分层(push次数)最多的几个镜像&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;cat res.txt | awk -F : &amp;#39;{print $1}&amp;#39; | sort | uniq -c | sort -rn -k1 | head -10
  25871 image1
  25649 image2
  16815 image3
  ...&lt;/pre&gt;

&lt;h2 id=&quot;heading-2.3&quot;&gt;删除某个镜像的untagged的数据&lt;/h2&gt;
&lt;p&gt;
   注意 &lt;code&gt;-u&lt;/code&gt; 参数, 仅删除 &lt;b&gt;untagger&lt;/b&gt; 的数据
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 dry-run
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;REGISTRY_DATA_DIR=/var/lib/registry/docker/registry/v2 python delete_docker_registry_image.py --image image1 -u --dry-run&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 实际删除(&lt;b&gt;需要先暂停registry&lt;/b&gt;)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;REGISTRY_DATA_DIR=/var/lib/registry/docker/registry/v2 python delete_docker_registry_image.py --image image1 -u&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 查看磁盘占用(&lt;b&gt;恢复registry&lt;/b&gt;)
&lt;/p&gt;

&lt;p&gt;
      发现磁盘占用的大头还是这些 &lt;b&gt;untagged&lt;/b&gt; 的数据， 仅仅处理了几个分层数量最多的镜像，一下子多了几百G的空间
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;heading-3&quot;&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/48009377&quot;&gt;https://zhuanlan.zhihu.com/p/48009377&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://github.com/burnettk/delete-docker-registry-image&quot;&gt;https://github.com/burnettk/delete-docker-registry-image&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>K8S笔记之ingress增加验证</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 13 Jul 2021 14:13:38 +0000</published>
      <updated>Thu, 02 Sep 2021 00:59:05 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/07/K8S笔记之ingress增加验证.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/07/K8S笔记之ingress增加验证.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;创建账户密码&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 生成密码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;PASSWORD&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;$(&lt;/span&gt;base64 &amp;lt; /dev/urandom | head -c8&lt;span style=&quot;color:#66d9ef&quot;&gt;)&lt;/span&gt;; echo &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;$PASSWORD&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 生成hash值
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker run --rm --entrypoint htpasswd httpd:2 -Bbn username password &amp;gt;&amp;gt; auth&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;修改ingress&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;nginx.ingress.kubernetes.io/auth-realm=&amp;#39;Authentication Required &amp;#39;
nginx.ingress.kubernetes.io/auth-type=basic
nginx.ingress...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;创建账户密码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;修改ingress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;Authorization请求头传递到后端server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;创建账户密码&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 生成密码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;PASSWORD&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;$(&lt;/span&gt;base64 &amp;lt; /dev/urandom | head -c8&lt;span style=&quot;color:#66d9ef&quot;&gt;)&lt;/span&gt;; echo &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;$PASSWORD&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 生成hash值
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker run --rm --entrypoint htpasswd httpd:2 -Bbn username password &amp;gt;&amp;gt; auth&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;修改ingress&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;nginx.ingress.kubernetes.io/auth-realm=&amp;#39;Authentication Required &amp;#39;
nginx.ingress.kubernetes.io/auth-type=basic
nginx.ingress.kubernetes.io/auth-secret=basic-auth
nginx.ingress.kubernetes.io/auth-secret-type=auth-map&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;Authorization请求头传递到后端server&lt;/h2&gt;
&lt;p&gt;
   现有一个 &lt;b&gt;django server&lt;/b&gt; 需要根据不同用户名配置不同的权限, &lt;b&gt;django&lt;/b&gt; 可以通过 &lt;code&gt;request.META.get(&amp;#34;HTTP_AUTHORIZATION&amp;#34;)&lt;/code&gt; 获取&lt;b&gt;basic auth&lt;/b&gt; 时的用户信息, 但默认 &lt;b&gt;Authorization&lt;/b&gt; 请求头无法直接传递到后端, 所以需要配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;nginx.ingress.kubernetes.io/configuration-snippet: |
    proxy_set_header Authorization $http_authorization;
    proxy_pass_header Authorization;&lt;/pre&gt;
&lt;p&gt;
   参考资料:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;serverfault.com/questions/977426/how-to-keep-authentication-header-with-redirect-using-nginx-ingress-annotations&quot;&gt;serverfault.com/questions/977426/how-to-keep-authentication-header-with-redirect-using-nginx-ingress-annotations&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;github.com/kubernetes/dashboard/issues/5105&quot;&gt;github.com/kubernetes/dashboard/issues/5105&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://kubernetes.github.io/ingress-nginx/examples/auth/external-auth/&quot;&gt;https://kubernetes.github.io/ingress-nginx/examples/auth/external-auth/&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#authentication&quot;&gt;https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#authentication&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>flutter笔记之初体验</title>
      <link href="" rel="alternate"></link>
      <published>Sat, 05 Jun 2021 22:58:01 +0000</published>
      <updated>Mon, 10 Oct 2022 14:52:03 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/06/flutter笔记之初体验.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/06/flutter笔记之初体验.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;h3 id=&quot;heading-1.1&quot;&gt;安装flutter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 首先下载flutter包, 解压到 &lt;code&gt;~/repo&lt;/code&gt; 目录,并配置 &lt;code&gt;~/.bashrc&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$PATH:$HOME/repo/flutter/bin&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;source ~/.bashrc&lt;/code&gt;使其生效
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
      注意：首次运行flutter，macos可能会提示无法打开dart，需要到 &lt;code&gt;系统偏好 -&amp;gt; 安全性与隐私&lt;/code&gt; 点击允许
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter --version
Flutter 2.2.1 • channel stable • https://github.com/flutter/flutter.git
Framework • revision 02c026b03c (9...&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;安装&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;安装flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;安装java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.3&quot;&gt;安装android sdk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;初体验&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;创建一个新的项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;配置android模拟器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;启动flutter项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;升级Flutter版本&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.1&quot;&gt;升级步骤&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.2&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;FAQ&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4.1&quot;&gt;启动项目报 &lt;code&gt;Operation timed out&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4.2&quot;&gt;Unable to locate Android SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;h3 id=&quot;heading-1.1&quot;&gt;安装flutter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 首先下载flutter包, 解压到 &lt;code&gt;~/repo&lt;/code&gt; 目录,并配置 &lt;code&gt;~/.bashrc&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$PATH:$HOME/repo/flutter/bin&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;source ~/.bashrc&lt;/code&gt;使其生效
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
      注意：首次运行flutter，macos可能会提示无法打开dart，需要到 &lt;code&gt;系统偏好 -&amp;gt; 安全性与隐私&lt;/code&gt; 点击允许
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter --version
Flutter 2.2.1 • channel stable • https://github.com/flutter/flutter.git
Framework • revision 02c026b03c (9 天前) • 2021-05-27 12:24:44 -0700
Engine • revision 0fdb562ac8
Tools • Dart 2.13.1&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第一步，禁用 &lt;b&gt;google analytics&lt;/b&gt;
      #+begin_example
        └──╼ flutter config --no-analytics
&lt;/p&gt;

&lt;p&gt;
          ╔════════════════════════════════════════════════════════════════════════════╗
          ║                 Welcome to Flutter! - &lt;a href=&quot;flutter.dev&quot;&gt;flutter.dev&lt;/a&gt;║
          ......
          ║ See Google&amp;#39;s privacy policy:                                               ║
          ║ &lt;a href=&quot;policies.google.com/privacy&quot;&gt;policies.google.com/privacy&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
        Analytics reporting disabled.
&lt;/p&gt;

&lt;p&gt;
        You may need to restart any open editors for them to read new settings.
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    #+end_example
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 第二步, 执行 &lt;code&gt;flutter doctor&lt;/code&gt; 检查依赖环境
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter doctor
Running &amp;#34;flutter pub get&amp;#34; in flutter_tools...                      10.6s
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 2.2.1, on macOS 11.3.1 20E241 darwin-x64, locale zh-Hans-CN)
[✗] Android toolchain - develop for Android devices
    ✗ Unable to locate Android SDK.
      Install Android Studio from: https://developer.android.com/studio/index.html
      On first launch it will assist you in installing the Android SDK components.
      (or visit https://flutter.dev/docs/get-started/install/macos#android-setup for detailed instructions).
      If the Android SDK has been installed to a custom location, please use
      `flutter config --android-sdk` to update to that location.

[✗] Xcode - develop for iOS and macOS
    ✗ Xcode installation is incomplete; a full installation is necessary for iOS development.
      Download at: https://developer.apple.com/xcode/download/
      Or install Xcode via the App Store.
      Once installed, run:
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
        sudo xcodebuild -runFirstLaunch
    ✗ CocoaPods not installed.
        CocoaPods is used to retrieve the iOS and macOS platform side&amp;#39;s plugin code that responds to your plugin usage on the Dart side.
        Without CocoaPods, plugins will not work on iOS or macOS.
        For more info, see https://flutter.dev/platform-plugins
      To install see https://guides.cocoapods.org/using/getting-started.html#installation for instructions.
[✓] Chrome - develop for the web
[!] Android Studio (not installed)
[✓] VS Code (version 1.56.2)
[✓] Connected device (1 available)

! Doctor found issues in 3 categories.&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-1.2&quot;&gt;安装java&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install openjdk@8&lt;/pre&gt;
&lt;p&gt;
      刚开始我安装的是 &lt;b&gt;openjdk@11&lt;/b&gt;, 但在启动 &lt;b&gt;sdkmanager&lt;/b&gt; 时会报
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ /usr/local/share/android-sdk/tools/bin/sdkmanager
Exception in thread &amp;#34;main&amp;#34; java.lang.NoClassDefFoundError: javax/xml/bind/annotation/XmlSchema
    at com.android.repository.api.SchemaModule$SchemaModuleVersion.&amp;lt;init&amp;gt;(SchemaModule.java:156)
    at com.android.repository.api.SchemaModule.&amp;lt;init&amp;gt;(SchemaModule.java:75)
    at com.android.sdklib.repository.AndroidSdkHandler.&amp;lt;clinit&amp;gt;(AndroidSdkHandler.java:81)
    at com.android.sdklib.tool.sdkmanager.SdkManagerCli.main(SdkManagerCli.java:73)
    at com.android.sdklib.tool.sdkmanager.SdkManagerCli.main(SdkManagerCli.java:48)
Caused by: java.lang.ClassNotFoundException: javax.xml.bind.annotation.XmlSchema
    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)&lt;/pre&gt;
&lt;p&gt;
      查找网上的资料，即使设置了 &lt;code&gt;JAVA_OPTS&lt;/code&gt;, 但还是有问题，所以我安装 &lt;code&gt;openjdk@8&lt;/code&gt; 而不是 &lt;code&gt;openjdk@11&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ export JAVA_OPTS=&amp;#39;-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee&amp;#39;
└──╼ /usr/local/share/android-sdk/tools/bin/sdkmanager
Error occurred during initialization of boot layer
java.lang.module.FindException: Module java.se.ee not found&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置环境变量
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export JAVA_HOME&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;/usr/local/opt/openjdk@8
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$JAVA_HOME/bin:$PATH&lt;/pre&gt;
&lt;p&gt;
      如果未设置 &lt;code&gt;JAVA_HOME&lt;/code&gt; 环境变量，后续执行 &lt;code&gt;flutter doctor&lt;/code&gt; 可能会报
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;The operation couldn’t be completed. Unable to locate a Java Runtime.
Please visit http://www.java.com for information on installing Java.&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-1.3&quot;&gt;安装android sdk&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装sdk
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install android-sdk&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 安装sdk组件
      首先执行 &lt;code&gt;sdkmanager --list&lt;/code&gt; 找到组件最新版本或者选择合适版本
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ sdkmanager platform-tools
└──╼ sdkmanager &amp;#39;platforms;android-29&amp;#39;
└──╼ sdkmanager &amp;#39;build-tools;31.0.0-rc4&amp;#39;
└──╼ sdkmanager --licenses&lt;/pre&gt;
&lt;p&gt;
      如果未执行 &lt;code&gt;sdkmanager --licenses&lt;/code&gt; 并同意相关协议，在执行 &lt;code&gt;flutter doctor&lt;/code&gt; 后可能会提示
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[!] Android toolchain - develop for Android devices (Android SDK version 31.0.0-rc4)
    ! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licenses&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置环境变量
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export ANDROID_SDK_ROOT&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;/usr/local/share/android-sdk
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools:$PATH&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;初体验&lt;/h2&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;创建一个新的项目&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter create myapp
└──╼ cd myapp&lt;/pre&gt;
&lt;p&gt;
    注意不要在 &lt;b&gt;flutter sdk&lt;/b&gt; 目录里创建项目
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Cannot create a project within the Flutter SDK. Target directory &amp;#39;$HOME/repo/flutter/src/myapp&amp;#39; is within the Flutter SDK at
&amp;#39;$HOME/repo/flutter&amp;#39;.&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;配置android模拟器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装模拟器
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ sdkmanager emulator
└──╼ sdkmanager &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;system-images;android-29;google_apis;x86_64&amp;#39;&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 创建新的android模拟器
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ avdmanager -s create avd -n testAndroid -k &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;system-images;android-29;google_apis;x86_64&amp;#34;&lt;/span&gt;
└──╼ avdmanager list avd&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.3&quot;&gt;启动flutter项目&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 启动模拟器
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter emulators
&lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt; available emulator:

testAndroid • testAndroid •  • android

To run an emulator, run &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;flutter emulators --launch &amp;lt;emulator id&amp;gt;&amp;#39;&lt;/span&gt;.
To create a new emulator, run &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;flutter emulators --create [--name xyz]&amp;#39;&lt;/span&gt;.

You can find more information on managing emulators at the links below:
https://developer.android.com/studio/run/managing-avds
https://developer.android.com/studio/command-line/avdmanager
└──╼ flutter emulators --launch testAndroid&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 查看可用驱动
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter devices
&lt;span style=&quot;color:#ae81ff&quot;&gt;2&lt;/span&gt; connected devices:

Android SDK built &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; x86 &lt;span style=&quot;color:#ae81ff&quot;&gt;64&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;mobile&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; • emulator-5554 • android-x64    • Android &lt;span style=&quot;color:#ae81ff&quot;&gt;10&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;API 29&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;emulator&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;
Chrome &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;web&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;                          • chrome        • web-javascript • Google Chrome 90.0.4430.212&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 启动项目
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter run -d emulator-5554&lt;/pre&gt;
&lt;p&gt;
      
&lt;a href=&quot;https://s.libforest.com/images/2021/06/first-flutter.png?show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2021/06/first-flutter.png?thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
      至此，我的第一个flutter应用体验完成。
      很久没学习新的技术，感觉自己都快落伍了，脑子也快生锈了，很早之前就打算自己写一个私人使用的 &lt;code&gt;app&lt;/code&gt;，但总抱着一招鲜吃遍天的想法，坚持着熟悉的 &lt;code&gt;vue web app&lt;/code&gt;, 而且还道听途说对 &lt;code&gt;flutter&lt;/code&gt; 有所怀疑，一直没实际体验过。虽然 &lt;code&gt;vue&lt;/code&gt; 足够简单，搭配 &lt;code&gt;cordova&lt;/code&gt; 也很方便，但毕竟属于 &lt;code&gt;web app&lt;/code&gt;，每种语言或者工具应该都有自己最擅长的领域，比如 &lt;code&gt;vue&lt;/code&gt; 之于 web，&lt;code&gt;flutter&lt;/code&gt; 至于 移动端app，最重要的是，现在技术更新迭代太快，你不学总有人学，学而不思则罔，思而不学则殆，不思不学只会被淘汰
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;升级Flutter版本&lt;/h2&gt;
&lt;h3 id=&quot;heading-3.1&quot;&gt;升级步骤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
  查看当前使用的版本
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter channel

Flutter channels:
master
dev
beta
* stable&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 选择版本(可选)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter channel stable&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 升级
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter upgrade&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-3.2&quot;&gt;FAQ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 Flutter目录有修改
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[   +8 ms] Your flutter checkout has local changes that would be erased by upgrading. If you want to keep these changes, it is recommended that you stash them via &amp;#34;git stash&amp;#34; or else commit the changes
to a local
           branch. If it is okay to remove local changes, then re-run this command with &amp;#34;--force&amp;#34;.
....&lt;/pre&gt;
&lt;p&gt;
       进入Flutter目录，使用 &lt;code&gt;git diff&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;──╼ git diff
diff --git a/packages/flutter_tools/gradle/flutter.gradle b/packages/flutter_tools/gradle/flutter.gradle
index 3db040b967..69db8a4873 100644
--- a/packages/flutter_tools/gradle/flutter.gradle
+++ b/packages/flutter_tools/gradle/flutter.gradle
@@ -24,8 +24,17 @@ import org.gradle.util.VersionNumber

 buildscript {
     repositories {
-        google()
-        jcenter()
+        // google()
+        // jcenter()
+        maven {
+            url &amp;#39;https://maven.aliyun.com/repository/jcenter&amp;#39;
+        }
+        maven {
+            url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public&amp;#39;
+        }
+        maven {
+            url &amp;#39;https://maven.aliyun.com/repository/google&amp;#39;
+        }
     }
     dependencies {
         classpath &amp;#39;com.android.tools.build:gradle:4.1.0&amp;#39;&lt;/pre&gt;

&lt;p&gt;
       使用&lt;code&gt;git reset --hard&lt;/code&gt; 重置修改，或者使用 &lt;code&gt;flutter upgrade --force&lt;/code&gt; 强制更新
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;FAQ&lt;/h2&gt;
&lt;h3 id=&quot;heading-4.1&quot;&gt;启动项目报 &lt;code&gt;Operation timed out&lt;/code&gt;&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Using hardware rendering with device Android SDK built for x86 64. If you notice graphics artifacts, consider enabling software rendering with
&amp;#34;--enable-software-rendering&amp;#34;.
Launching lib/main.dart on Android SDK built for x86 64 in debug mode...
Exception in thread &amp;#34;main&amp;#34; java.net.ConnectException: Operation timed out (Connection timed out)
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        ......
        at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:128)
        at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)
Running Gradle task &amp;#39;assembleDebug&amp;#39;...
Running Gradle task &amp;#39;assembleDebug&amp;#39;... Done                        76.2s
Exception: Gradle task assembleDebug failed with exit code 1&lt;/pre&gt;

&lt;p&gt;
    这是因为无法下载 &lt;code&gt;gradle&lt;/code&gt; 的包和依赖，需要科学上网或者修改为国内源
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 修改项目目录下的 &lt;code&gt;android/gradle/wrapper/gradle-wrapper.properties&lt;/code&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;- distributionUrl=https\://services.gradle.org/distributions/gradle-6.7-all.zip
+ distributionUrl=https\://mirrors.cloud.tencent.com/gradle/gradle-6.7-all.zip&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改项目目录下 &lt;code&gt;android/build.gradle&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;- google()
- jcenter()
+ maven { url &amp;#39;https://maven.aliyun.com/repository/google&amp;#39; }
+ maven { url &amp;#39;https://maven.aliyun.com/repository/jcenter&amp;#39; }
+ maven { url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public&amp;#39; }&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改 &lt;b&gt;flutter sdk&lt;/b&gt; 目录下 &lt;code&gt;packages/flutter_tools/gradle/flutter.gradle&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;buildscript {
     repositories {
!        // google()
!        // jcenter()
!        maven {
!            url &amp;#39;https://maven.aliyun.com/repository/jcenter&amp;#39;
!        }
!        maven {
!            url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public&amp;#39;
!        }
!        maven {
!            url &amp;#39;https://maven.aliyun.com/repository/google&amp;#39;
!        }
     }
     dependencies {
         classpath &amp;#39;com.android.tools.build:gradle:4.1.0&amp;#39;
     }
 }&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;heading-4.2&quot;&gt;Unable to locate Android SDK&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter doctor
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 3.3.4, on macOS 12.5 21G72 darwin-x64, locale zh-Hans-CN)
[✗] Android toolchain - develop for Android devices
    ✗ Unable to locate Android SDK.
      Install Android Studio from: https://developer.android.com/studio/index.html
      On first launch it will assist you in installing the Android SDK components.
      (or visit https://flutter.dev/docs/get-started/install/macos#android-setup for detailed instructions).
      If the Android SDK has been installed to a custom location, please use
      `flutter config --android-sdk` to update to that location.&lt;/pre&gt;
&lt;p&gt;
    解决:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter config --android-sdk /usr/local/share/android-sdk
Setting &amp;#34;android-sdk&amp;#34; value to &amp;#34;/usr/local/share/android-sdk&amp;#34;.

You may need to restart any open editors for them to read new settings.&lt;/pre&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;参考文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;flutter.cn/docs/get-started/install/macos&quot;&gt;flutter.cn/docs/get-started/install/macos&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;blog.csdn.net/xiuxiuxiubiubiubiu/article/details/104918561&quot;&gt;blog.csdn.net/xiuxiuxiubiubiubiu/article/details/104918561&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;www.cnblogs.com/bluestorm/p/14761482.html&quot;&gt;www.cnblogs.com/bluestorm/p/14761482.html&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>GNS3笔记</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 11 May 2021 14:48:06 +0000</published>
      <updated>Wed, 24 Nov 2021 17:05:14 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/05/GNS3笔记.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/05/GNS3笔记.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;GNS3 VM导入&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;virt-install  --name gns3  --memory &lt;span style=&quot;color:#ae81ff&quot;&gt;8192&lt;/span&gt;  --vcpus &lt;span style=&quot;color:#ae81ff&quot;&gt;4&lt;/span&gt;  --disk /home/kvm/GNS3/GNS3VM-disk001.qcow2  --disk /home/kvm/GNS3/GNS3VM-disk002.qcow2  --import --virt-type kvm --os-type linux --os-variant ubuntu18.04 --network default --graphics vnc,listen&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;0.0.0.0,password&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;foobar,port...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;GNS3 VM导入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;禁用广告与数据采集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;启用basic auth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;GNS3 VM导入&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;virt-install  --name gns3  --memory &lt;span style=&quot;color:#ae81ff&quot;&gt;8192&lt;/span&gt;  --vcpus &lt;span style=&quot;color:#ae81ff&quot;&gt;4&lt;/span&gt;  --disk /home/kvm/GNS3/GNS3VM-disk001.qcow2  --disk /home/kvm/GNS3/GNS3VM-disk002.qcow2  --import --virt-type kvm --os-type linux --os-variant ubuntu18.04 --network default --graphics vnc,listen&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;0.0.0.0,password&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;foobar,port&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;5910&lt;/span&gt; --noautoconsole --hvm&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;禁用广告与数据采集&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 禁用错误报告
&lt;/p&gt;

&lt;p&gt;
     找到 &lt;code&gt;~/.config/GNS3/2.2/gns3_server.conf&lt;/code&gt;, 在 &lt;code&gt;[Server]&lt;/code&gt; 块中添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[Server]
...
report_errors = False&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 禁用google分析
&lt;/p&gt;

&lt;p&gt;
     找到 &lt;code&gt;/usr/local/lib/python3.8/dist-packages/gns3server/static/web-ui/index.html&lt;/code&gt; , 注释google分析相关代码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt; &amp;lt;script async=&amp;#34;&amp;#34; src=&amp;#34;https://www.googletagmanager.com/gtag/js?id=G&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;5D6FZL9923&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;--&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;script&lt;/span&gt;&amp;gt;
  window.&lt;span style=&quot;color:#a6e22e&quot;&gt;dataLayer&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; window.&lt;span style=&quot;color:#a6e22e&quot;&gt;dataLayer&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;||&lt;/span&gt; [];
  &lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;gtag&lt;/span&gt;() {
  &lt;span style=&quot;color:#a6e22e&quot;&gt;dataLayer&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;push&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;arguments&lt;/span&gt;);
  }
  &lt;span style=&quot;color:#a6e22e&quot;&gt;gtag&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;js&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;new&lt;/span&gt; Date());

  &lt;span style=&quot;color:#75715e&quot;&gt;// gtag(&amp;#39;config&amp;#39;, &amp;#39;G-5D6FZL9923&amp;#39;);
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 禁用错误跟踪
&lt;/p&gt;

&lt;p&gt;
     找到 &lt;code&gt;/usr/local/lib/python3.8/dist-packages/gns3server/static/web-ui&lt;/code&gt; 目录下的 &lt;code&gt;main.xxxx.js&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;sudo sed -i &amp;#39;s%https://d8be3a98530f49eb90968ff396db326c@o19455.ingest.sentry.io/842726%%g&amp;#39; main.2f0314a517dded67879c.js&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 禁用广告
&lt;/p&gt;

&lt;p&gt;
     同样找到 &lt;code&gt;/usr/local/lib/python3.8/dist-packages/gns3server/static/web-ui&lt;/code&gt; 目录下的 &lt;code&gt;main.xxxx.js&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;sudo sed -i &amp;#39;s%https://servedbyadbutler.com/adserve/;ID=165803;size=0x0;setID=371476;type=json;%%g&amp;#39; main.2f0314a517dded67879c.js&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   &lt;b&gt;然后重启服务即可 &lt;code&gt;sudo systemctl restart gns3&lt;/code&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;启用basic auth&lt;/h2&gt;
&lt;p&gt;
     找到 &lt;code&gt;~/.config/GNS3/2.2/gns3_server.conf&lt;/code&gt;, 在 &lt;code&gt;[Server]&lt;/code&gt; 块中添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[Server]
...
auth = True
user = gns3
password = gns3&lt;/pre&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>pyenv笔记</title>
      <link href="" rel="alternate"></link>
      <published>Thu, 18 Mar 2021 15:29:39 +0000</published>
      <updated>Thu, 18 Mar 2021 15:35:51 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/03/pyenv笔记.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/03/pyenv笔记.html</id>
      <summary type="html">
&lt;h1 id=&quot;heading-1&quot;&gt;常见问题&lt;/h1&gt;

&lt;h2 id=&quot;heading-1.1&quot;&gt;pyenv install 3.6.7 失败&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 环境: macOs big Sur 11.2.2
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 pyenv: 1.2.23
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;heading-1.1.1&quot;&gt;相关日志&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;┌─[jianglin]─[~/repo/golang/src/alarm](master)
└──╼ pyenv install 3.6.7
python-build: use openssl@1.1 from homebrew
python-build: use readline from homebrew
Installing...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;常见问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;pyenv install 3.6.7 失败&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1.1&quot;&gt;相关日志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1.2&quot;&gt;解决方式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1.3&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;常见问题&lt;/h1&gt;

&lt;h2 id=&quot;heading-1.1&quot;&gt;pyenv install 3.6.7 失败&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 环境: macOs big Sur 11.2.2
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 pyenv: 1.2.23
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;heading-1.1.1&quot;&gt;相关日志&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;┌─[jianglin]─[~/repo/golang/src/alarm](master)
└──╼ pyenv install 3.6.7
python-build: use openssl@1.1 from homebrew
python-build: use readline from homebrew
Installing Python-3.6.7...
python-build: use readline from homebrew
python-build: use zlib from xcode sdk

BUILD FAILED (OS X 11.2.2 using python-build 20180424)

Inspect or clean up the working tree at /var/folders/44/hnrgfyfn0fsb8lqwk_0h2jvm0000gn/T/python-build.20210318151243.78376
Results logged to /var/folders/44/hnrgfyfn0fsb8lqwk_0h2jvm0000gn/T/python-build.20210318151243.78376.log

Last 10 log lines:
        ret = sendfile(in, out, offset, &amp;amp;sbytes, &amp;amp;sf, flags);
              ^
./Modules/posixmodule.c:10433:5: warning: code will never be executed [-Wunreachable-code]
    Py_FatalError(&amp;#34;abort() called from Python code didn&amp;#39;t abort!&amp;#34;);
    ^~~~~~~~~~~~~
clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include   -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include   -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes   -I. -I./Include -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/usr/local/opt/openssl@1.1/include -I/Users/jianglin/repo/python/pyenv/versions/3.6.7/include  -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/usr/local/opt/openssl@1.1/include -I/Users/jianglin/repo/python/pyenv/versions/3.6.7/include   -DPy_BUILD_CORE  -c ./Modules/pwdmodule.c -o Modules/pwdmodule.o
1 warning and 1 error generated.
make: *** [Modules/posixmodule.o] Error 1
make: *** Waiting for unfinished jobs....
1 warning generated.
┌─[jianglin]─[~/repo/golang/src/alarm](master)
└──╼  pyenv install --patch 3.6.7 &amp;lt; &amp;lt;(curl -sSL https://github.com/python/cpython/commit/8ea6353.patch\?full_index\=1)
python-build: use openssl@1.1 from homebrew
python-build: use readline from homebrew
Installing Python-3.6.7...
curl: (28) Operation timed out after 300188 milliseconds with 0 out of 0 bytes received
python-build: use readline from homebrew
python-build: use zlib from xcode sdk

BUILD FAILED (OS X 11.2.2 using python-build 20180424)

Inspect or clean up the working tree at /var/folders/44/hnrgfyfn0fsb8lqwk_0h2jvm0000gn/T/python-build.20210318151644.86904
Results logged to /var/folders/44/hnrgfyfn0fsb8lqwk_0h2jvm0000gn/T/python-build.20210318151644.86904.log

Last 10 log lines:
./Modules/posixmodule.c:8211:15: error: implicit declaration of function &amp;#39;sendfile&amp;#39; is invalid in C99 [-Werror,-Wimplicit-function-declaration]
        ret = sendfile(in, out, offset, &amp;amp;sbytes, &amp;amp;sf, flags);
              ^
./Modules/posixmodule.c:10433:5: warning: code will never be executed [-Wunreachable-code]
    Py_FatalError(&amp;#34;abort() called from Python code didn&amp;#39;t abort!&amp;#34;);
    ^~~~~~~~~~~~~
1 warning and 1 error generated.
make: *** [Modules/posixmodule.o] Error 1
make: *** Waiting for unfinished jobs....
1 warning generated.&lt;/pre&gt;

&lt;h3 id=&quot;heading-1.1.2&quot;&gt;解决方式&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;┌─&lt;span style=&quot;color:#f92672&quot;&gt;[&lt;/span&gt;jianglin&lt;span style=&quot;color:#f92672&quot;&gt;]&lt;/span&gt;─&lt;span style=&quot;color:#f92672&quot;&gt;[&lt;/span&gt;~/repo/golang/src/alarm&lt;span style=&quot;color:#f92672&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;master&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;
└──╼ CFLAGS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;-Wno-implicit-function-declaration  pyenv install --patch 3.6.7 &amp;lt; &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;curl -sSL https://github.com/python/cpython/commit/8ea6353.patch&lt;span style=&quot;color:#ae81ff&quot;&gt;\?&lt;/span&gt;full_index&lt;span style=&quot;color:#ae81ff&quot;&gt;\=&lt;/span&gt;1&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;
python-build: use openssl@1.1 from homebrew
python-build: use readline from homebrew
Installing Python-3.6.7...
curl: &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;7&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; Failed to connect to github.com port 443: Operation timed out
python-build: use readline from homebrew
python-build: use zlib from xcode sdk
Installed Python-3.6.7 to /Users/jianglin/repo/python/pyenv/versions/3.6.7&lt;/pre&gt;

&lt;h3 id=&quot;heading-1.1.3&quot;&gt;参考文档&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;github.com/pyenv/pyenv/issues/1737&quot;&gt;github.com/pyenv/pyenv/issues/1737&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;github.com/pyenv/pyenv/issues/1643&quot;&gt;github.com/pyenv/pyenv/issues/1643&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Linux"></category>
    </entry>
</feed>