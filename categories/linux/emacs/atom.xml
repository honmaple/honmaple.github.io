<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
  <title>紅楓吟 - Emacs</title>
    <subtitle>风落花语风落天，花落风雨花落田.</subtitle>
  <link href="https://honmaple.me/categories/linux/emacs/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://honmaple.me"/>
  <generator uri="https://github.com/honmaple/snow">Snow</generator>
    <updated>Fri, 24 Feb 2023 08:12:37 +0800</updated>
  <id>https://honmaple.me</id>
    <entry xml:lang="zh">
      <title>Emacs笔记之修复yaml-mode的格式化问题</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 21 Feb 2023 17:18:40 +0800</published>
      <updated>Fri, 24 Feb 2023 08:12:37 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/02/Emacs笔记之修复yaml-mode的格式化问题.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/02/Emacs笔记之修复yaml-mode的格式化问题.html</id>
      <summary type="html">
&lt;p&gt;
一直以来 &lt;b&gt;yaml-mode&lt;/b&gt; 都有一个问题，在使用 &lt;code&gt;(indent-region (point-min) (point-max))&lt;/code&gt; 时已经格式好的内容总是会得到错误的缩进，比如一个简单的配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
在调用 &lt;code&gt;indent-regin&lt;/code&gt; 后就会变成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">
&lt;p&gt;
一直以来 &lt;b&gt;yaml-mode&lt;/b&gt; 都有一个问题，在使用 &lt;code&gt;(indent-region (point-min) (point-max))&lt;/code&gt; 时已经格式好的内容总是会得到错误的缩进，比如一个简单的配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
在调用 &lt;code&gt;indent-regin&lt;/code&gt; 后就会变成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
而我又总是手痒，写好的配置文件总是会忍不住 &lt;code&gt;indent-region&lt;/code&gt; 一番，结果本来正确的格式立马变得各种乱七八糟，当初为了解决这个问题，还专门为 &lt;b&gt;yaml-mode&lt;/b&gt; 激活了 &lt;b&gt;lsp-mode&lt;/b&gt;, 并且使用 &lt;code&gt;lsp-format-buffer&lt;/code&gt; 来进行处理。
&lt;/p&gt;

&lt;p&gt;
本来一切都还正常，但最近发现了另外一个问题，如果在 &lt;b&gt;org-mode&lt;/b&gt; 中插入 &lt;b&gt;yaml&lt;/b&gt; 的代码片段，调用 &lt;code&gt;indent-region&lt;/code&gt; 还是还有之前的问题, &lt;b&gt;org-mode&lt;/b&gt; 中又无法直接调用 &lt;code&gt;lsp-format-buffer&lt;/code&gt;, 所以专门研究了一下 &lt;b&gt;yaml-mode&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
发现 &lt;b&gt;yaml-mode&lt;/b&gt; 只是定义了 &lt;code&gt;indent-line-function&lt;/code&gt; 变量，没有定义 &lt;code&gt;indent-region-function&lt;/code&gt;, 导致调用 &lt;code&gt;indent-region&lt;/code&gt; 时其实是逐行调用 &lt;code&gt;yaml-indent-line&lt;/code&gt;, 这里面有一个计算当前缩进的 &lt;code&gt;yaml-compute-indentation&lt;/code&gt; 函数，计算方式有些简单粗暴，如果上一行是一个 &lt;b&gt;hash key&lt;/b&gt;, 当前行的缩进就是上一行的缩进加 &lt;code&gt;yaml-indent-offset&lt;/code&gt; 的值, 这里并没有判断当前行是新建行还是已经有相关内容，如果是新建行那么缩进就是对的，如果是已有的内容就是错的，所以我修改了这一部分逻辑，如果是 &lt;b&gt;已有内容并且当前行的缩进小于上一行&lt;/b&gt; 则不进行处理, 比如:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
test3:&lt;/pre&gt;
&lt;p&gt;
虽然增加的判断逻辑很简单，但至少在使用 &lt;code&gt;indent-region&lt;/code&gt; 时已经格式好的内容就不会出现混乱的情况了, 也不用专门为 &lt;b&gt;yaml&lt;/b&gt; 文件激活一个 &lt;b&gt;lsp&lt;/b&gt; 进程。
&lt;/p&gt;

&lt;p&gt;
目前处理的方式还是采用 advice + letf 形式，否则需要修改很多内容，有兴趣的同道可以参考一下
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/yaml-compute-indentation()
  (let ((ci (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-indentation&lt;/span&gt;))
        (im (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-hash-key-re)))
    (save-excursion
      (&lt;span style=&quot;color:#a6e22e&quot;&gt;beginning-of-line&lt;/span&gt;)
      (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-document-delimiter-re) &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;-1&lt;/span&gt;)
        (while (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-blank-line-re)
                    (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;gt;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;point&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;point-min&lt;/span&gt;)))
          (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;-1&lt;/span&gt;))
        (let ((li (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-indentation&lt;/span&gt;)))
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行是hash key, 当前行不是, 或者当前行的缩进大于上一行&lt;/span&gt;
          (if (or (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;gt;&lt;/span&gt; li ci) (and im (&lt;span style=&quot;color:#a6e22e&quot;&gt;=&lt;/span&gt; li ci))) ci
            (&lt;span style=&quot;color:#a6e22e&quot;&gt;+&lt;/span&gt; li
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-nested-map-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-nested-sequence-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-block-literal-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;))))))))

(defun maple/yaml-indent-region(func &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;rest&lt;/span&gt; args)
  (if (derived-mode-p &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;yaml-mode&lt;/span&gt;)
      (letf (((&lt;span style=&quot;color:#a6e22e&quot;&gt;symbol-function&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;yaml-compute-indentation&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple/yaml-compute-indentation&lt;/span&gt;))
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; func args))
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; func args)))

(advice-add &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;indent-region&lt;/span&gt; :around &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple/yaml-indent-region&lt;/span&gt;)&lt;/pre&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs笔记之minibuffer默认输入</title>
      <link href="" rel="alternate"></link>
      <published>Thu, 25 Nov 2021 22:14:00 +0800</published>
      <updated>Fri, 24 Feb 2023 08:12:33 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/11/Emacs笔记之minibuffer默认输入.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/11/Emacs笔记之minibuffer默认输入.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
在使用 &lt;b&gt;evil-ex&lt;/b&gt;，也就是冒号+命令时，有一个非常有趣的功能，输入冒号后，&lt;b&gt;minibuffer&lt;/b&gt; 会显示上一次执行的命令，比如 &lt;code&gt;:wq&lt;/code&gt;, 确认可以直接执行这个命令，但是输入任意字符，就会把原先的 &lt;code&gt;wq&lt;/code&gt; 直接覆盖，接收新的命令输入
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
我觉得这是一个非常有趣且有用的功能，像 &lt;code&gt;read-string&lt;/code&gt; 函数，如果我想要一个默认的输入，可以直接使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;
&lt;p&gt;
但我想覆盖这个默认, 则需要先把 &lt;code&gt;默认内容&lt;/code&gt; 删除，再输入我想要的字符, 如果不想先删除默认再输入，还可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">
&lt;blockquote&gt;
&lt;p&gt;
在使用 &lt;b&gt;evil-ex&lt;/b&gt;，也就是冒号+命令时，有一个非常有趣的功能，输入冒号后，&lt;b&gt;minibuffer&lt;/b&gt; 会显示上一次执行的命令，比如 &lt;code&gt;:wq&lt;/code&gt;, 确认可以直接执行这个命令，但是输入任意字符，就会把原先的 &lt;code&gt;wq&lt;/code&gt; 直接覆盖，接收新的命令输入
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
我觉得这是一个非常有趣且有用的功能，像 &lt;code&gt;read-string&lt;/code&gt; 函数，如果我想要一个默认的输入，可以直接使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;
&lt;p&gt;
但我想覆盖这个默认, 则需要先把 &lt;code&gt;默认内容&lt;/code&gt; 删除，再输入我想要的字符, 如果不想先删除默认再输入，还可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;
&lt;p&gt;
但是这样的话我无法看到默认的内容，当然，也许可以把默认内容追加到 &lt;code&gt;prompt&lt;/code&gt; 里，我认为这样不太好看，不是吗
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let* ((default &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
       (input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt (default %s): &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; default) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; default)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;

&lt;p&gt;
&lt;code&gt;evil-ex&lt;/code&gt; 提示我一个新的解决方式, 通过查看 &lt;code&gt;evil-ex&lt;/code&gt; 源码，可以发现它是使用 &lt;code&gt;minibuffer-with-setup-hook&lt;/code&gt; 和 &lt;code&gt;after-change-functions&lt;/code&gt; 在&lt;b&gt;minibuffer&lt;/b&gt;里插入新内容时先清理默认内容, 再插入新内容, 我简化了相关代码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (minibuffer-with-setup-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-input-setup&lt;/span&gt;
               (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;propertize&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;shadow&lt;/span&gt;)))))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))

(defun maple-input-setup()
  (add-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;after-change-functions&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-input-update&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;))

(defun maple-input-update(&lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; beg end len &lt;span style=&quot;color:#a6e22e&quot;&gt;string&lt;/span&gt;)
  (let ((&lt;span style=&quot;color:#a6e22e&quot;&gt;string&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-substring-no-properties&lt;/span&gt; beg end)))
    (delete-minibuffer-contents)
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;insert&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;string&lt;/span&gt;)
    (remove-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;after-change-functions&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-input-update&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)))&lt;/pre&gt;

&lt;p&gt;
OK, 就这样
&lt;/p&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs自动插入更新文件头——maple-header</title>
      <link href="" rel="alternate"></link>
      <published>Wed, 06 Oct 2021 14:57:51 +0800</published>
      <updated>Fri, 24 Feb 2023 08:12:43 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/10/Emacs自动插入更新文件头——maple-header.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/10/Emacs自动插入更新文件头——maple-header.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
一个简单的插件，可以在文件创建时自动插入文件头，或者文件更新时自动更新文件头信息，虽然已经用了好几年，这次把相关代码提取并精简一下做成了插件 &lt;a href=&quot;https://github.com/honmaple/emacs-maple-header&quot;&gt;maple-header&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;安装&lt;/h1&gt;
&lt;h2 id=&quot;heading-1.1&quot;&gt;使用quelpa&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple-header
  :quelpa (:fetcher github :repo &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;honmaple/emacs-maple-header&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
  :hook (after-init &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header-mode))&lt;/pre&gt;
&lt;h2 id=&quot;heading-1.2&quot;&gt;克隆到本地&lt;/h2&gt;
&lt;pre class=&quot;src src-example&quot;&gt;git clone https://github.com/honmaple/emacs-maple-header --depth=1 ~/.emacs/site-lisp/maple-header&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;安装&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;使用quelpa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;克隆到本地&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;配置&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;基础配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;自定义模版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;自定义更新&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;相关文章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
一个简单的插件，可以在文件创建时自动插入文件头，或者文件更新时自动更新文件头信息，虽然已经用了好几年，这次把相关代码提取并精简一下做成了插件 &lt;a href=&quot;https://github.com/honmaple/emacs-maple-header&quot;&gt;maple-header&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;安装&lt;/h1&gt;
&lt;h2 id=&quot;heading-1.1&quot;&gt;使用quelpa&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple-header
  :quelpa (:fetcher github :repo &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;honmaple/emacs-maple-header&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
  :hook (after-init &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header-mode))&lt;/pre&gt;
&lt;h2 id=&quot;heading-1.2&quot;&gt;克隆到本地&lt;/h2&gt;
&lt;pre class=&quot;src src-example&quot;&gt;git clone https://github.com/honmaple/emacs-maple-header --depth=1 ~/.emacs/site-lisp/maple-header&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple-header
  :ensure &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
  :hook (after-init &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header-mode))&lt;/pre&gt;

&lt;h1 id=&quot;heading-2&quot;&gt;配置&lt;/h1&gt;
&lt;h2 id=&quot;heading-2.1&quot;&gt;基础配置&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;;; 更新文件头时搜索的文件函数, 9代表只会搜索前9行&lt;/span&gt;
(setq maple-header:lines &lt;span style=&quot;color:#ae81ff&quot;&gt;9&lt;/span&gt;)
&lt;span style=&quot;color:#75715e&quot;&gt;;; 创建新文件时是否自动插入文件头信息&lt;/span&gt;
(setq maple-header:auto-insert &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)
&lt;span style=&quot;color:#75715e&quot;&gt;;; 更新文件时是否自动更新文件头信息&lt;/span&gt;
(setq maple-header:auto-update &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)&lt;/pre&gt;
&lt;h2 id=&quot;heading-2.2&quot;&gt;自定义模版&lt;/h2&gt;
&lt;p&gt;
   比如我要自定义&lt;b&gt;Python&lt;/b&gt;文件的文件头
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(add-to-list &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-header:auto-insert-alist&lt;/span&gt;
             &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;((python-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Python program&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
               &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;h2 id=&quot;heading-2.3&quot;&gt;自定义更新&lt;/h2&gt;
&lt;p&gt;
   目前内置了 &lt;b&gt;filename, email, modify&lt;/b&gt; 三个字段, 可以通过调用 &lt;b&gt;maple-header:update-xxx&lt;/b&gt; 手动更新指定的字段, 如果需要增加新的或者覆盖原字段,可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(add-to-list &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-header:auto-update-alist&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(author &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; custom-update-author))

(defun custom-update-author(&lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; current-line)
  (interactive)
  (maple-header:update-action
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(Author:&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt; current-line))&lt;/pre&gt;
&lt;p&gt;
   使用 &lt;b&gt;maple-header:update&lt;/b&gt; 会更新所有字段(包括：&lt;b&gt;filename，email，modify，author&lt;/b&gt;), 如果只需要更新部分，需要修改为
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq maple-header:auto-update-alist
      &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;((filename &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header:update-filename)
        (modify &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-header:update-modify)))&lt;/pre&gt;

&lt;h1 id=&quot;heading-3&quot;&gt;相关文章&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://honmaple.me/articles/2018/01/emacs自动添加文件头.html&quot;&gt;emacs自动添加文件头&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://honmaple.me/articles/2018/01/emacs自动更新文件头.html&quot;&gt;emacs自动更新文件头&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs快速创建侧边栏——maple-explorer</title>
      <link href="" rel="alternate"></link>
      <published>Sat, 09 Nov 2019 23:02:12 +0800</published>
      <updated>Fri, 24 Feb 2023 08:12:19 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2019/11/Emacs快速创建侧边栏——maple-explorer.html" type="text/html"/>
      <id>https://honmaple.me/articles/2019/11/Emacs快速创建侧边栏——maple-explorer.html</id>
      <summary type="html">
&lt;p&gt;
闲着没事又造了一个轮子，:smile:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;maple-explorer&lt;/b&gt; 是一个用于快速创建类似neotree文件浏览，或者类似maple-imenu的变量函数浏览的侧边栏的插件，让每个人都能写一个属于自己的侧边栏
&lt;/p&gt;

&lt;p&gt;
&lt;a href=&quot;https://github.com/honmaple/emacs-maple-explorer&quot;&gt;emacs-maple-explorer&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 快速创建一个侧边栏: 只需要定义一个&lt;code&gt;maple-explorer-NAME-list&lt;/code&gt;的函数，并且返回一个列表
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;
 :name name
 :value value
 :face face
 :click click
 :status &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;close&lt;/span&gt; &lt;span style=&quot;color:#75715e&quot;&gt;;; or &amp;#39;open&lt;/span&gt;
 :children &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;((child1 child2 &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;))&lt;/pre&gt;
&lt;p&gt;
  其中child1，child2格式与父列表格式一致，child1中也可以嵌套下一组children，比如我定义一个名为aaa的list的函数:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple-explorer-aaa-list(&lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional...&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">
&lt;p&gt;
闲着没事又造了一个轮子，:smile:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;maple-explorer&lt;/b&gt; 是一个用于快速创建类似neotree文件浏览，或者类似maple-imenu的变量函数浏览的侧边栏的插件，让每个人都能写一个属于自己的侧边栏
&lt;/p&gt;

&lt;p&gt;
&lt;a href=&quot;https://github.com/honmaple/emacs-maple-explorer&quot;&gt;emacs-maple-explorer&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 快速创建一个侧边栏: 只需要定义一个&lt;code&gt;maple-explorer-NAME-list&lt;/code&gt;的函数，并且返回一个列表
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;
 :name name
 :value value
 :face face
 :click click
 :status &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;close&lt;/span&gt; &lt;span style=&quot;color:#75715e&quot;&gt;;; or &amp;#39;open&lt;/span&gt;
 :children &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;((child1 child2 &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;))&lt;/pre&gt;
&lt;p&gt;
  其中child1，child2格式与父列表格式一致，child1中也可以嵌套下一组children，比如我定义一个名为aaa的list的函数:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple-explorer-aaa-list(&lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; isroot)
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Get recentf file list ISROOT mean first call.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;
   :name &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;aaa&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   :value &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;aaa&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   :face &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;font-lock-constant-face&lt;/span&gt;
   :click &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-explorer-fold&lt;/span&gt;
   :status &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;open&lt;/span&gt;
   :children
   (&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt; :name &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;aaa_child1&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
          :face &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;font-lock-keyword-face&lt;/span&gt;
          :click (lambda() (interactive) (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;bbb&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt; :name &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;aaa_child2&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
          :face &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;font-lock-comment-face&lt;/span&gt;
          :click (lambda() (interactive) (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;aaaa&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))))))&lt;/pre&gt;
&lt;p&gt;
  定义好后只要使用 &lt;code&gt;(maple-explorer-define aaa)&lt;/code&gt; 就能快速创建一个&lt;code&gt;maple-explorer-aaa&lt;/code&gt;的函数，使用它就能打开一个侧边栏，效果是这样的
&lt;/p&gt;

&lt;p&gt;
  
&lt;a href=&quot;https://s.libforest.com/images/2019/11/emacs-maple-explorer-01.png?show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2019/11/emacs-maple-explorer-01.png?thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 自定义内容显示: maple-explorer提供了一个&lt;code&gt;maple-explorer-NAME-name-function&lt;/code&gt;的变量，可用于自定义内容的显示，比如对于一个文件列表，我可以增加自定义图标
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple-explorer-icon (str icon)
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;The ICON of maple-explorer STR.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;%s %s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;propertize&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\t&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;display&lt;/span&gt; icon) str))

(defun maple-explorer-icon-file-name(info)
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Custom maple-explorer-file INFO icon name.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  (let ((name  (&lt;span style=&quot;color:#a6e22e&quot;&gt;plist-get&lt;/span&gt; info :name))
        (value (&lt;span style=&quot;color:#a6e22e&quot;&gt;plist-get&lt;/span&gt; info :value)))
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;plist-put&lt;/span&gt; info :indent &lt;span style=&quot;color:#ae81ff&quot;&gt;5&lt;/span&gt;)
    (cond ((or (string= name &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) (string= name &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;..&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))
           (maple-explorer-icon name (all-the-icons-faicon &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;folder&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
          ((&lt;span style=&quot;color:#a6e22e&quot;&gt;file-directory-p&lt;/span&gt; value)
           (maple-explorer-icon
            name
            (if (maple-explorer--is-open info)
                (all-the-icons-faicon &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;folder-open&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
              (all-the-icons-faicon &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;folder&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))))
          (&lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt; (maple-explorer-icon name (all-the-icons-icon-for-file value))))))

(setq maple-explorer-file-name-function &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-explorer-icon-file-name&lt;/span&gt;)&lt;/pre&gt;
&lt;p&gt;
  自定义之前是这样的
&lt;/p&gt;

&lt;p&gt;
  
&lt;a href=&quot;https://s.libforest.com/images/2019/11/emacs-maple-explorer-02.png?show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2019/11/emacs-maple-explorer-02.png?thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
  自定义之后是这样的
&lt;/p&gt;

&lt;p&gt;
  
&lt;a href=&quot;https://s.libforest.com/images/2019/11/emacs-maple-explorer-03.png?show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2019/11/emacs-maple-explorer-03.png?thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 更多信息
  &lt;b&gt;maple-explorer&lt;/b&gt;目前已实现了
&lt;/p&gt;
&lt;pre class=&quot;src src-example&quot;&gt;maple-explorer-file      ;; 文件浏览
maple-explorer-imenu     ;; 函数变量名浏览
maple-explorer-buffer    ;; 已打开buffer浏览
maple-explorer-recentf   ;; 最近文件浏览
maple-explorer-project   ;; 已打开的项目浏览&lt;/pre&gt;
&lt;p&gt;
  欢迎各位emacs同道测试
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs下一键执行代码(可输入)——maple-run</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 17 Sep 2019 04:31:25 +0800</published>
      <updated>Fri, 24 Feb 2023 08:12:11 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2019/09/Emacs下一键执行代码(可输入)——maple-run.html" type="text/html"/>
      <id>https://honmaple.me/articles/2019/09/Emacs下一键执行代码(可输入)——maple-run.html</id>
      <summary type="html">
&lt;p&gt;
之前一直使用&lt;b&gt;quickrun&lt;/b&gt;来执行一些代码片段，但&lt;b&gt;quickrun&lt;/b&gt;有一个问题就是无法输入，比如python代码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;a &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; input(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;aaaaa: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
&lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;(a)&lt;/pre&gt;
&lt;p&gt;
需要建立一个&lt;b&gt;qrinput&lt;/b&gt;的文件，太过麻烦，所以我平时测试一些需要输入的python代码时会使用
&lt;/p&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/run-python ()
  (interactive)
  (or (python-shell-get-process) (&lt;span style=&quot;color:#a6e22e&quot;&gt;call-interactively&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;run-python&lt;/span&gt;))
  (if (use-region-p)
      (python-shell-send-region (&lt;span style=&quot;color:#a6e22e&quot;&gt;region-beginning&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;region-end&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)
    (python...&lt;/pre&gt;</summary>
      <content type="html">
&lt;p&gt;
之前一直使用&lt;b&gt;quickrun&lt;/b&gt;来执行一些代码片段，但&lt;b&gt;quickrun&lt;/b&gt;有一个问题就是无法输入，比如python代码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;a &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; input(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;aaaaa: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
&lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;(a)&lt;/pre&gt;
&lt;p&gt;
需要建立一个&lt;b&gt;qrinput&lt;/b&gt;的文件，太过麻烦，所以我平时测试一些需要输入的python代码时会使用
&lt;/p&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/run-python ()
  (interactive)
  (or (python-shell-get-process) (&lt;span style=&quot;color:#a6e22e&quot;&gt;call-interactively&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;run-python&lt;/span&gt;))
  (if (use-region-p)
      (python-shell-send-region (&lt;span style=&quot;color:#a6e22e&quot;&gt;region-beginning&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;region-end&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)
    (python-shell-send-buffer &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)))&lt;/pre&gt;
&lt;p&gt;
但退出&lt;b&gt;python shell&lt;/b&gt;又需要手动输入&lt;code&gt;exit()&lt;/code&gt;，我是一个怕麻烦的人，所以写了一个可供输入的 &lt;a href=&quot;https://github.com/honmaple/emacs-maple-run&quot;&gt;emacs-maple-run&lt;/a&gt;
来一键执行当前buffer的代码(后面发现quickrun其实也可以通过&lt;b&gt;quickrun-shell&lt;/b&gt;来提供实时输入，不过使用的是eshell)
&lt;/p&gt;

&lt;p&gt;
目前只加了python,go,lua,html的执行命令，自定义只需要使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(add-to-list &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-run:alist&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(python-mode :command &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;python %F&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))
(add-to-list &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-run:alist&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(c-mode :command &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;gcc %F -o %b &amp;amp;&amp;amp; ./%b&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))
(add-to-list &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-run:alist&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;((html-mode web-mode) :command browse-url-of-file))&lt;/pre&gt;

&lt;p&gt;
另外，&lt;b&gt;maple-run&lt;/b&gt;也提供了一个非常方便的函数 &lt;code&gt;(maple-run:script process-name program prgram-args)&lt;/code&gt; 来供用户自定义命令，比如:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 打开一个&lt;b&gt;bash shell&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(maple-run:script &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;bash&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 打开一个&lt;b&gt;ipython shell&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(maple-run:script &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;ipython&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 执行golang代码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(maple-run:script &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;go&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;run&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-file-name&lt;/span&gt;))&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 默认的执行方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(maple-run:script &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;bash&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-c&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;python file.py&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs环境隔离之——maple-env</title>
      <link href="" rel="alternate"></link>
      <published>Mon, 15 Jul 2019 13:34:27 +0800</published>
      <updated>Fri, 24 Feb 2023 08:12:27 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2019/07/Emacs环境隔离之——maple-env.html" type="text/html"/>
      <id>https://honmaple.me/articles/2019/07/Emacs环境隔离之——maple-env.html</id>
      <summary type="html">
&lt;p&gt;
在使用Emacs时，会有很多依赖，比如:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 Python依赖于&lt;code&gt;flake8&lt;/code&gt;，&lt;code&gt;isort&lt;/code&gt;，&lt;code&gt;python-language-server&lt;/code&gt;等
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 Golang依赖于&lt;code&gt;golang.org/x/tools/cmd/gopls&lt;/code&gt;，&lt;code&gt;github.com/haya14busa/gopkgs/cmd/gopkgs&lt;/code&gt;等
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
想要安装这些依赖，必须手动进行安装，&lt;b&gt;use-package&lt;/b&gt;用户可使用&lt;b&gt;ensure-system-package&lt;/b&gt;，但非常不幸的是，这些依赖很大程度上会污染我的电脑环境，毕竟像&lt;code&gt;python-language-server&lt;/code&gt;，&lt;code&gt;flake8&lt;/code&gt;这类的package，我除了在Emacs里会用到，平时根本用不到（除非同时使用Emacs和其它编辑器或IDE）
&lt;/p&gt;

&lt;p&gt;
所以，我写了一个&lt;b&gt;maple-env&lt;/b&gt;用来实现Emacs依赖环境隔离，使用方式...&lt;/p&gt;</summary>
      <content type="html">
&lt;p&gt;
在使用Emacs时，会有很多依赖，比如:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 Python依赖于&lt;code&gt;flake8&lt;/code&gt;，&lt;code&gt;isort&lt;/code&gt;，&lt;code&gt;python-language-server&lt;/code&gt;等
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 Golang依赖于&lt;code&gt;golang.org/x/tools/cmd/gopls&lt;/code&gt;，&lt;code&gt;github.com/haya14busa/gopkgs/cmd/gopkgs&lt;/code&gt;等
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
想要安装这些依赖，必须手动进行安装，&lt;b&gt;use-package&lt;/b&gt;用户可使用&lt;b&gt;ensure-system-package&lt;/b&gt;，但非常不幸的是，这些依赖很大程度上会污染我的电脑环境，毕竟像&lt;code&gt;python-language-server&lt;/code&gt;，&lt;code&gt;flake8&lt;/code&gt;这类的package，我除了在Emacs里会用到，平时根本用不到（除非同时使用Emacs和其它编辑器或IDE）
&lt;/p&gt;

&lt;p&gt;
所以，我写了一个&lt;b&gt;maple-env&lt;/b&gt;用来实现Emacs依赖环境隔离，使用方式:
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装
&lt;/p&gt;
&lt;pre class=&quot;src src-example&quot;&gt;git clone https://github.com/honmaple/emacs-maple-env ~/.emacs/site-lisp/maple-env&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple-env
  :ensure &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
  :hook (after-init &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; maple-env-mode)
  :config
  (setq maple-env:python-packages
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;yapf&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;flake8&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;isort&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;python-language-server&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
        maple-env:golang-packages
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;github.com/rogpeppe/godef&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;github.com/golang/lint/golint&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;github.com/haya14busa/gopkgs/cmd/gopkgs&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;golang.org/x/tools/cmd/gopls&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
        maple-env:npm-packages
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;js-beautify&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))
  &lt;span style=&quot;color:#75715e&quot;&gt;;; 手动调用(maple-env:init)以安装依赖环境&lt;/span&gt;
  )&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
更多自定义详见&lt;b&gt;customize-group maple-env&lt;/b&gt;
&lt;/p&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>emacs窗口管理</title>
      <link href="" rel="alternate"></link>
      <published>Fri, 11 Jan 2019 17:07:01 +0800</published>
      <updated>Fri, 24 Feb 2023 08:04:36 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2019/01/emacs窗口管理.html" type="text/html"/>
      <id>https://honmaple.me/articles/2019/01/emacs窗口管理.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/honmaple/dotfiles/tree/master/emacs.d/lisp/init-window.el&quot;&gt;init-window.el&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;基础设置&lt;/h1&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;;; 设置默认为左右分屏&lt;/span&gt;
(setq split-width-threshold &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;)&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(evil-leader/set-key
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;ws&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;split-window-below&lt;/span&gt;  &lt;span style=&quot;color:#75715e&quot;&gt;;; 上下分屏&lt;/span&gt;
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;wv&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;split-window-right&lt;/span&gt;) &lt;span style=&quot;color:#75715e&quot;&gt;;; 左右分屏&lt;/span&gt;&lt;/pre&gt;

&lt;h1 id=&quot;heading-2&quot;&gt;使用shackle管理窗口&lt;/h1&gt;
&lt;p&gt;
  当设置了 &lt;code&gt;(setq split-width-threshold 1)&lt;/code&gt; 后所有的窗口都会变成左右分屏，所以需要 &lt;b&gt;shackle&lt;/b&gt; 或 &lt;b&gt;popwin&lt;/b&gt; package对窗口进行管理, 对一些特殊的窗口或 &lt;b&gt;buffer&lt;/b&gt; 比如 &lt;code&gt;*Help*&lt;/code&gt; 和 &lt;code&gt;flycheck...&lt;/code&gt;&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;基础设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;使用shackle管理窗口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;窗口黄金分割zoom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;window-numbering显示当前窗口号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/honmaple/dotfiles/tree/master/emacs.d/lisp/init-window.el&quot;&gt;init-window.el&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;基础设置&lt;/h1&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;;; 设置默认为左右分屏&lt;/span&gt;
(setq split-width-threshold &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;)&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(evil-leader/set-key
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;ws&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;split-window-below&lt;/span&gt;  &lt;span style=&quot;color:#75715e&quot;&gt;;; 上下分屏&lt;/span&gt;
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;wv&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;split-window-right&lt;/span&gt;) &lt;span style=&quot;color:#75715e&quot;&gt;;; 左右分屏&lt;/span&gt;&lt;/pre&gt;

&lt;h1 id=&quot;heading-2&quot;&gt;使用shackle管理窗口&lt;/h1&gt;
&lt;p&gt;
  当设置了 &lt;code&gt;(setq split-width-threshold 1)&lt;/code&gt; 后所有的窗口都会变成左右分屏，所以需要 &lt;b&gt;shackle&lt;/b&gt; 或 &lt;b&gt;popwin&lt;/b&gt; package对窗口进行管理, 对一些特殊的窗口或 &lt;b&gt;buffer&lt;/b&gt; 比如 &lt;code&gt;*Help*&lt;/code&gt; 和 &lt;code&gt;flycheck error list&lt;/code&gt; 需要设置为显示在下方，并且默认选中
&lt;/p&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq shackle-rules
      &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*Help*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; :select &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt; :align &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;below&lt;/span&gt; :autoclose &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)
        (flycheck-error-list-mode :select &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt; :align &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;below&lt;/span&gt; :autoclose &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)))&lt;/pre&gt;

&lt;p&gt;
  设置默认的参数
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq shackle-default-size &lt;span style=&quot;color:#ae81ff&quot;&gt;0.3&lt;/span&gt;
      shackle-default-alignment &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;below&lt;/span&gt;
      shackle-default-rule &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;)&lt;/pre&gt;

&lt;h1 id=&quot;heading-3&quot;&gt;窗口黄金分割zoom&lt;/h1&gt;
&lt;p&gt;
  窗口黄金分割是一个非常有用的效果，当选中某个buffer时，这个buffer的window会自动按比例放大，这样就不用手动对窗口进行调整, 之前一直使用 &lt;b&gt;golden-ratio&lt;/b&gt; 这个package, 但看github上最近一次提交已经是两年前，加上使用需要定义很多的 &lt;code&gt;golden-ratio-extra-commands&lt;/code&gt;, 所以切换到了 &lt;b&gt;zoom&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;b&gt;zoom&lt;/b&gt; 这个 package也有一些问题，比如我定义了
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq zoom-size &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&quot;color:#ae81ff&quot;&gt;0.618&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0.618&lt;/span&gt;)
      zoom-ignored-major-modes &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(term-mode flycheck-error-list-mode))&lt;/pre&gt;

&lt;p&gt;
  但使用 &lt;code&gt;flycheck-list-errors&lt;/code&gt; 时还是会自动缩放窗口大小，后来翻看源码时发现新建 &lt;b&gt;window&lt;/b&gt; 是都会调用 &lt;code&gt;balance-windows&lt;/code&gt; ,所以我稍微修改了一下
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/balance-windows(func &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; window-or-frame)
  (unless (zoom--window-ignored-p)
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;funcall&lt;/span&gt; func window-or-frame)))

(advice-add &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;balance-windows&lt;/span&gt; :around &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple/balance-windows&lt;/span&gt;)&lt;/pre&gt;
&lt;p&gt;
  这样在调用 &lt;code&gt;flycheck-list-errors&lt;/code&gt; 就不会再自动缩放窗口大小了
&lt;/p&gt;

&lt;p&gt;
  另外有一些命令需要临时关闭 &lt;b&gt;zoom-mode&lt;/b&gt; ,所以有添加了一个 &lt;b&gt;marco&lt;/b&gt; 临时关闭 &lt;b&gt;zoom-mode&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defmacro with-zoom-disable(body)
  (declare (indent defun))
  (let ((zoom-mode-p (when (featurep &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;zoom&lt;/span&gt;) zoom-mode))
        res)
    (when zoom-mode-p (zoom-mode &lt;span style=&quot;color:#ae81ff&quot;&gt;-1&lt;/span&gt;))
    (setq res &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;,@&lt;/span&gt;body)
    (when zoom-mode-p (zoom-mode zoom-mode-p))
    res))&lt;/pre&gt;
&lt;p&gt;
  比如:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(with-zoom-disable
  (maple-imenu))&lt;/pre&gt;

&lt;h1 id=&quot;heading-4&quot;&gt;window-numbering显示当前窗口号&lt;/h1&gt;
&lt;p&gt;
  为了更方便的在窗口间进行跳转，避免重复使用 &lt;code&gt;evil-window-down&lt;/code&gt;, &lt;code&gt;evil-window-right&lt;/code&gt;等命令
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package window-numbering
  :hook (maple-theme &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; window-numbering-mode))&lt;/pre&gt;
&lt;p&gt;
  &lt;b&gt;maple-theme-hook&lt;/b&gt;: 加载 &lt;b&gt;theme&lt;/b&gt; 后执行hook
&lt;/p&gt;

&lt;p&gt;
  然后设置(这里只设置到5,因为我大概不会开10个窗口的)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(evil-leader/set-key
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;w0&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;select-window-0&lt;/span&gt;
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;w1&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;select-window-1&lt;/span&gt;
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;w2&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;select-window-2&lt;/span&gt;
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;w3&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;select-window-3&lt;/span&gt;
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;w4&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;select-window-4&lt;/span&gt;
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;w5&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;select-window-5&lt;/span&gt;)&lt;/pre&gt;
&lt;p&gt;
  这样就可以使用&lt;code&gt;leader + w + {window number}&lt;/code&gt;或者 &lt;code&gt;alt + {window number}&lt;/code&gt;跳转
&lt;/p&gt;

&lt;p&gt;
  另外&lt;b&gt;window-number&lt;/b&gt;的显示需要&lt;b&gt;mode-line&lt;/b&gt;的支持，比如在&lt;a href=&quot;https://github.com/honmaple/emacs-maple-modeline&quot;&gt;maple-modeline&lt;/a&gt;里可以这样定义
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(maple-modeline-define window-number
  :if (bound-and-true-p window-numbering-mode)
  :format
  (let ((color (face-attribute &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;cursor&lt;/span&gt; :background)))
    (maple-modeline--add-text-property
     (maple-modeline--unicode-number
      (int-to-string (window-numbering-get-number)))
     &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;(:foreground &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;color :distant-foreground &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;white&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))))&lt;/pre&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>maple-imenu——类似tagbar的emacs插件</title>
      <link href="" rel="alternate"></link>
      <published>Thu, 18 Oct 2018 22:27:05 +0800</published>
      <updated>Fri, 24 Feb 2023 08:18:56 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2018/10/maple-imenu——类似tagbar的emacs插件.html" type="text/html"/>
      <id>https://honmaple.me/articles/2018/10/maple-imenu——类似tagbar的emacs插件.html</id>
      <summary type="html">
&lt;p&gt;
这几天参考&lt;code&gt;imenu-list&lt;/code&gt;重写了一个类似 vim 中&lt;code&gt;tagbar&lt;/code&gt;的插件 &lt;a href=&quot;https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/maple/maple-imenu.el&quot;&gt;maple-imenu&lt;/a&gt;,  其实之前我一直在使用另一个类似的插件—— &lt;b&gt;imenu-list&lt;/b&gt;, 虽然&lt;b&gt;imenu-list&lt;/b&gt;已经足够使用了, 但它和&lt;b&gt;golden-ratio&lt;/b&gt;搭配起来很难受， &lt;b&gt;golden-ratio&lt;/b&gt; 我是常开的, 但&lt;b&gt;imenu-list&lt;/b&gt;也会偶尔使用(浏览及讲解代码必备，否则查找某个函数和变量时很难受的)
&lt;/p&gt;

&lt;p&gt;
原本我想要自定义一下&lt;b&gt;imenu-list&lt;/b&gt;，但看了源码之后, 发现很多地方都不符合我的需求， 而且需要改动的地方越来越多，最后不如自己重写
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 如何使用
  下载&lt;a href=&quot;https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/maple/maple-imenu.el&quot;&gt;文件&lt;/a&gt;复制到 &lt;code&gt;$HOME/.emacs.d/site-lisp/maple-imenu&lt;/code&gt; 目录...&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">
&lt;p&gt;
这几天参考&lt;code&gt;imenu-list&lt;/code&gt;重写了一个类似 vim 中&lt;code&gt;tagbar&lt;/code&gt;的插件 &lt;a href=&quot;https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/maple/maple-imenu.el&quot;&gt;maple-imenu&lt;/a&gt;,  其实之前我一直在使用另一个类似的插件—— &lt;b&gt;imenu-list&lt;/b&gt;, 虽然&lt;b&gt;imenu-list&lt;/b&gt;已经足够使用了, 但它和&lt;b&gt;golden-ratio&lt;/b&gt;搭配起来很难受， &lt;b&gt;golden-ratio&lt;/b&gt; 我是常开的, 但&lt;b&gt;imenu-list&lt;/b&gt;也会偶尔使用(浏览及讲解代码必备，否则查找某个函数和变量时很难受的)
&lt;/p&gt;

&lt;p&gt;
原本我想要自定义一下&lt;b&gt;imenu-list&lt;/b&gt;，但看了源码之后, 发现很多地方都不符合我的需求， 而且需要改动的地方越来越多，最后不如自己重写
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 如何使用
  下载&lt;a href=&quot;https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/maple/maple-imenu.el&quot;&gt;文件&lt;/a&gt;复制到 &lt;code&gt;$HOME/.emacs.d/site-lisp/maple-imenu&lt;/code&gt; 目录, 然后
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(use-package maple-imenu
  :load-path &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;site-lisp/maple-imenu&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  :commands (maple-imenu)
  :config
  (with-eval-after-load &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;evil&lt;/span&gt;
    (evil-make-overriding-map maple-imenu-mode-map &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;normal&lt;/span&gt;)))&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;M-x maple-imenu&lt;/pre&gt;

  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col-md-6&quot;&gt;
      [[https://static.honmaple.com/images/2018/10/maple-imenu-1.png]]
    &lt;/div&gt;
    &lt;div class=&quot;col-md-6&quot;&gt;
     [[https://static.honmaple.com/images/2018/10/maple-imenu-2.png]]
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 相关变量
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;maple-imenu-buffer&lt;/code&gt;
    maple-imenu buffer name, default &lt;code&gt;*maple-imenu*&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;maple-imenu-displayed-buffer&lt;/code&gt;
    displayed buffer name, default &lt;code&gt;nil&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;maple-imenu-overlays&lt;/code&gt;
    save overlay info, toggle open or close entry
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;maple-imenu-width&lt;/code&gt;
    maple-imenu window size, default &lt;code&gt;25&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;maple-imenu-padding&lt;/code&gt;
    maple-imenu prefix padding, default &lt;code&gt;2&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;maple-imenu-position&lt;/code&gt;
    maple-imenu window display position, default &lt;code&gt;&amp;#39;right&lt;/code&gt;, or &lt;code&gt;&amp;#39;left&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;maple-imenu-arrow&lt;/code&gt;
    open or close arrow, default &lt;code&gt;(&amp;#34;▾&amp;#34; . &amp;#34;▸&amp;#34;)&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;maple-imenu-auto-update&lt;/code&gt;
    auto update when &lt;code&gt;t&lt;/code&gt;, after save every time
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 相比较&lt;b&gt;imenu-list&lt;/b&gt;
  ➊ 代码和逻辑我认为与 imenu-list 比起来更加通俗易懂
&lt;/p&gt;

&lt;p&gt;
  ➋ window fixed, 至少与&lt;b&gt;golden-ratio&lt;/b&gt;搭配不那么难受
&lt;/p&gt;

&lt;p&gt;
  ➌ 更多我可以控制和自定义的地方
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>emacs自动更新文件头</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 09 Jan 2018 16:00:45 +0800</published>
      <updated>Fri, 24 Feb 2023 08:19:20 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2018/01/emacs自动更新文件头.html" type="text/html"/>
      <id>https://honmaple.me/articles/2018/01/emacs自动更新文件头.html</id>
      <summary type="html">
&lt;p&gt;
前面已经说过，可以使用&lt;b&gt;auto-insert&lt;/b&gt;自动添加文件头，今天来说一说自动更新文件头，比如说每次保存时自动更新&lt;b&gt;last updated&lt;/b&gt;字段
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;自动更新Last Updated&lt;/h2&gt;
&lt;p&gt;
   如果使用的是header2,直接设置相关的变量就可，假如使用的是&lt;b&gt;auto-insert&lt;/b&gt;，同样也可以使用emacs内置的&lt;b&gt;time-stamp&lt;/b&gt;对Last Updated进行自动更新
&lt;/p&gt;

&lt;p&gt;
   time-stamp默认使用&lt;code&gt;Time-stamp:&lt;/code&gt;,如果要对&lt;code&gt;Last Updated&lt;/code&gt;进行自动更新，只需要简单的设置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq time-stamp-active &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)
(setq time-stamp-line-limit &lt;span style=&quot;color:#ae81ff&quot;&gt;11&lt;/span&gt;)
(setq time-stamp-start &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;[lL]ast...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;自动更新Last Updated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;自动更新Filename&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;自动更新Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;
前面已经说过，可以使用&lt;b&gt;auto-insert&lt;/b&gt;自动添加文件头，今天来说一说自动更新文件头，比如说每次保存时自动更新&lt;b&gt;last updated&lt;/b&gt;字段
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;自动更新Last Updated&lt;/h2&gt;
&lt;p&gt;
   如果使用的是header2,直接设置相关的变量就可，假如使用的是&lt;b&gt;auto-insert&lt;/b&gt;，同样也可以使用emacs内置的&lt;b&gt;time-stamp&lt;/b&gt;对Last Updated进行自动更新
&lt;/p&gt;

&lt;p&gt;
   time-stamp默认使用&lt;code&gt;Time-stamp:&lt;/code&gt;,如果要对&lt;code&gt;Last Updated&lt;/code&gt;进行自动更新，只需要简单的设置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq time-stamp-active &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)
(setq time-stamp-line-limit &lt;span style=&quot;color:#ae81ff&quot;&gt;11&lt;/span&gt;)
(setq time-stamp-start &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;[lL]ast[ -][uU]pdate[ &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\t&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;]*:?&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
(setq time-stamp-end &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
(setq time-stamp-format &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; %#A %Y-%02m-%02d %02H:%02M:%02S (%Z)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)&lt;/pre&gt;

&lt;p&gt;
   然后添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(add-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;before-save-hook&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;time-stamp&lt;/span&gt;)&lt;/pre&gt;

&lt;p&gt;
   这样就能在每次保存时自动更新相应的字段了
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;自动更新Filename&lt;/h2&gt;
&lt;p&gt;
   之前遇到过，使用&lt;b&gt;auto-insert&lt;/b&gt;在每次创建新文件时自动添加了文件头，但后面文件名被修改了，文件头里的文件名却不会自动更改，基于这个原因需要自己实现一个函数(我没有找到可以使用的已经存在的package)
&lt;/p&gt;

&lt;p&gt;
   先理一理逻辑: 只需要查找当前文件前几行信息，如果找到&lt;code&gt;File Name:&lt;/code&gt;字段，获取字段信息，与当前文件名进行对比，如果不一致则替换为当前文件名,直接给出代码吧
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 查找当前文件前几行
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(save-excursion
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;goto-char&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;point-min&lt;/span&gt;)) &lt;span style=&quot;color:#75715e&quot;&gt;;;跳转到开头&lt;/span&gt;
    (let ((lines &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;))
    (while (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;lt;&lt;/span&gt; lines line-limit)
        &lt;span style=&quot;color:#75715e&quot;&gt;;; 查找&lt;/span&gt;
        (setq lines (&lt;span style=&quot;color:#a6e22e&quot;&gt;1+&lt;/span&gt; lines))
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;))))&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 获取当前文件名
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;file-name-nondirectory&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-file-name&lt;/span&gt;))&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 查找File Name
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(File Name:&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 对文件名进行比对与替换
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((beg (&lt;span style=&quot;color:#a6e22e&quot;&gt;match-beginning&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;2&lt;/span&gt;))
      (end (&lt;span style=&quot;color:#a6e22e&quot;&gt;match-end&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;2&lt;/span&gt;)))
  (when (not (string= 文件名 (string-trim-left (match-string &lt;span style=&quot;color:#ae81ff&quot;&gt;2&lt;/span&gt;))))
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;goto-char&lt;/span&gt; beg)
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;delete-region&lt;/span&gt; beg end)
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;insert&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; name)))&lt;/pre&gt;

&lt;p&gt;
     即可得到相关的完整函数(完整函数后面再讲)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;自动更新Email&lt;/h2&gt;
&lt;p&gt;
   工作和平时使用的邮箱不一样，我虽然设置了&lt;b&gt;&lt;b&gt;at_home&lt;/b&gt;&lt;/b&gt;变量区分工作与平时的邮箱,但不是每次我都记得要更新这个变量，所以有了这个需要，自动将文件头里的email信息更改为平时所用的邮箱，大致逻辑与自动更新Filename相同，所以我写了一个&lt;b&gt;macro&lt;/b&gt;来自动生成相关的代码
&lt;/p&gt;

&lt;p&gt;
   直接给出代码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/header-update-action(name)
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;A.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  (let ((beg (&lt;span style=&quot;color:#a6e22e&quot;&gt;match-beginning&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;2&lt;/span&gt;))
        (end (&lt;span style=&quot;color:#a6e22e&quot;&gt;match-end&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;2&lt;/span&gt;)))
    (when (not (string= name (string-trim-left (match-string &lt;span style=&quot;color:#ae81ff&quot;&gt;2&lt;/span&gt;))))
      (&lt;span style=&quot;color:#a6e22e&quot;&gt;goto-char&lt;/span&gt; beg)
      (&lt;span style=&quot;color:#a6e22e&quot;&gt;delete-region&lt;/span&gt; beg end)
      (&lt;span style=&quot;color:#a6e22e&quot;&gt;insert&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; name))))
(defun maple/header-update(regex default line-limit)
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;B.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  (interactive)
  (save-excursion
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;goto-char&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;point-min&lt;/span&gt;))
    (let ((lines &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;))
      (while (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;lt;&lt;/span&gt; lines line-limit)
        (when (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; regex))
          (maple/header-update-action default))
        (setq lines (&lt;span style=&quot;color:#a6e22e&quot;&gt;1+&lt;/span&gt; lines))
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;)))))
(defmacro maple/header-update-engine (name regex default &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; line-limit)
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;C.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;(defun &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;intern&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;maple/header-update-%s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; name)) ()
     &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Update %s with regex.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; name)
     (interactive)
     (maple/header-update &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;regex &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;default &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;(or line-limit &lt;span style=&quot;color:#ae81ff&quot;&gt;7&lt;/span&gt;))))&lt;/pre&gt;

&lt;p&gt;
   这样，我就可以调用&lt;b&gt;macro&lt;/b&gt;来生成代码
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 自动更新Filename
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(maple/header-update-engine &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;filename&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
                            &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(File Name:&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
                            (&lt;span style=&quot;color:#a6e22e&quot;&gt;file-name-nondirectory&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-file-name&lt;/span&gt;)) &lt;span style=&quot;color:#ae81ff&quot;&gt;7&lt;/span&gt;)&lt;/pre&gt;

&lt;p&gt;
     生成一个&lt;code&gt;maple/header-update-filename&lt;/code&gt;的函数,只要调用它即可更新文件名信息
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 自动更新email
     同样的
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(maple/header-update-engine &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;email&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
                            &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(Email:&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;(.*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
                            &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;youemail@gmail.com&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;7&lt;/span&gt;)&lt;/pre&gt;
&lt;p&gt;
     生成一个可供调用的&lt;code&gt;maple/header-update-email&lt;/code&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   如果想要添加其它功能，只要使用&lt;code&gt;maple/header-update-engine&lt;/code&gt;即可
&lt;/p&gt;

&lt;p&gt;
相关的配置可以在我的&lt;a href=&quot;https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/header/header.el&quot;&gt;github&lt;/a&gt;上找到
&lt;/p&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>emacs自动添加文件头</title>
      <link href="" rel="alternate"></link>
      <published>Mon, 08 Jan 2018 15:08:51 +0800</published>
      <updated>Fri, 24 Feb 2023 08:19:55 +0800</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2018/01/emacs自动添加文件头.html" type="text/html"/>
      <id>https://honmaple.me/articles/2018/01/emacs自动添加文件头.html</id>
      <summary type="html">
&lt;p&gt;
想要在emacs中添加文件头有好几种方法:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 直接手打
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 使用模板yasnippet
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 使用header2
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 使用内置的package &lt;b&gt;auto-insert&lt;/b&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
header2可能是最方便的一种自动添加文件头的方式，但我之前使用过，想要自定义自己想要的内容很难，而且白白浪费header2的功能
&lt;/p&gt;

&lt;p&gt;
今天主要说一说emacs内置里&lt;b&gt;auto-insert&lt;/b&gt;,使用它在创建文件时自动添加文件头信息
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;基础使用&lt;/h2&gt;
&lt;p&gt;
   直接&lt;code&gt;(auto-insert-mode)&lt;/code&gt;
   并且设置
&lt;/p&gt;
&lt;pre class=&quot;src src-example&quot;&gt;(setq auto-insert-query nil) ;; 不提醒&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;自定义文件头&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq auto-insert-alist
      &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(((python-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Python program&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# -*- coding...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;基础使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;自定义文件头&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;提取文件头公共信息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;
想要在emacs中添加文件头有好几种方法:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 直接手打
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 使用模板yasnippet
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 使用header2
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 使用内置的package &lt;b&gt;auto-insert&lt;/b&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
header2可能是最方便的一种自动添加文件头的方式，但我之前使用过，想要自定义自己想要的内容很难，而且白白浪费header2的功能
&lt;/p&gt;

&lt;p&gt;
今天主要说一说emacs内置里&lt;b&gt;auto-insert&lt;/b&gt;,使用它在创建文件时自动添加文件头信息
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;基础使用&lt;/h2&gt;
&lt;p&gt;
   直接&lt;code&gt;(auto-insert-mode)&lt;/code&gt;
   并且设置
&lt;/p&gt;
&lt;pre class=&quot;src src-example&quot;&gt;(setq auto-insert-query nil) ;; 不提醒&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;自定义文件头&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq auto-insert-alist
      &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(((python-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Python program&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# **************************************************************************&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Copyright © &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;substring&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-time-string&lt;/span&gt;) &lt;span style=&quot;color:#ae81ff&quot;&gt;-4&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# File Name: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;file-name-nondirectory&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-file-name&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Author: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt;)&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Email: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; user-mail-address &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Created: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;format-time-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;%Y-%m-%d %T (%Z)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-time&lt;/span&gt;)) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Last Update: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;format-time-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;%Y-%m-%d %T (%Z)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-time&lt;/span&gt;)) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#          By: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Description: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# **************************************************************************&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
        ((c-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;C program&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;/**************************************************************************&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; Copyright © &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;substring&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-time-string&lt;/span&gt;) &lt;span style=&quot;color:#ae81ff&quot;&gt;-4&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; File Name: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;file-name-nondirectory&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-file-name&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; Author: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt;)&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; Email: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; user-mail-address &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; Created: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;format-time-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;%Y-%m-%d %T (%Z)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-time&lt;/span&gt;)) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; Last Update: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;           By: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; Description: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; **************************************************************************/&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#include&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
        ((sh-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Shell script&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# **************************************************************************&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Copyright © &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;substring&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-time-string&lt;/span&gt;) &lt;span style=&quot;color:#ae81ff&quot;&gt;-4&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# File Name: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;file-name-nondirectory&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-file-name&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Author: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt;)&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Email: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; user-mail-address &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Created: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;format-time-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;%Y-%m-%d %T (%Z)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-time&lt;/span&gt;)) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Last Update: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#          By: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Description: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# **************************************************************************/&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;提取文件头公共信息&lt;/h2&gt;
&lt;p&gt;
   之前的模板有很多重复的内容，写一个函数把公共的信息提取出来
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 基础信息
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple//insert-string()
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;concat&lt;/span&gt;
   (&lt;span style=&quot;color:#a6e22e&quot;&gt;make-string&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;80&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;?*&lt;/span&gt;)
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Copyright © &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;substring&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-time-string&lt;/span&gt;) &lt;span style=&quot;color:#ae81ff&quot;&gt;-4&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;File Name: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;file-name-nondirectory&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-file-name&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Author: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;user-full-name&lt;/span&gt;)&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Email: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; user-mail-address &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Created: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;format-time-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;%Y-%m-%d %T (%Z)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-time&lt;/span&gt;)) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Last Update: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;         By: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Description: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
   (&lt;span style=&quot;color:#a6e22e&quot;&gt;make-string&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;80&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;?*&lt;/span&gt;)))&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 插入注释信息
     &amp;lt;2018-03-16 五&amp;gt;更新:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/insert-string(&lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; prefix)
  (replace-regexp-in-string
   &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;^&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (or prefix comment-start)
   (maple//insert-string)))&lt;/pre&gt;

&lt;p&gt;
     原代码:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/insert-string(&lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; prefix)
  (or prefix (setq prefix comment-start))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;mapconcat&lt;/span&gt;
   (lambda (x) (&lt;span style=&quot;color:#a6e22e&quot;&gt;concat&lt;/span&gt; prefix x))
   (split-string (maple//insert-string) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 更改模板
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(setq auto-insert-alist
      &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(((ruby-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Ruby program&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# -*- encoding: utf-8 -*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         (maple/insert-string) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
        ((python-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Python program&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         (maple/insert-string) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
        ((c-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;C program&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         (string-trim-left (maple/insert-string &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*/&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#include&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
        ((sh-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Shell script&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         (maple/insert-string) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
        ((go-mode &lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Go program&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt;
         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
         (string-trim-left (maple/insert-string &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*/&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   相关的配置可以在我的&lt;a href=&quot;https://github.com/honmaple/dotfiles/blob/master/emacs.d/lisp/init-auto-insert.el&quot;&gt;github&lt;/a&gt;上找到
&lt;/p&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
</feed>