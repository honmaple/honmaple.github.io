<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
  <title>紅楓吟 - Flutter</title>
    <subtitle>风落花语风落天，花落风雨花落田.</subtitle>
  <link href="https://honmaple.me/categories/tech/coding/flutter/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://honmaple.me"/>
  <generator uri="https://github.com/honmaple/snow">Snow</generator>
    <updated>Sat, 05 Oct 2024 20:13:59 +0000</updated>
  <id>https://honmaple.me</id>
    <entry xml:lang="zh">
      <title>Flutter实现本地化多语言</title>
      <link href="" rel="alternate"></link>
      <published>Wed, 02 Oct 2024 13:12:27 +0000</published>
      <updated>Sat, 05 Oct 2024 20:13:59 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2024/10/fluttershi-xian-ben-di-hua-duo-yu-yan.html" type="text/html"/>
      <id>https://honmaple.me/articles/2024/10/fluttershi-xian-ben-di-hua-duo-yu-yan.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;内置组件本地化&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 添加依赖
&lt;/p&gt;

&lt;p&gt;
      Flutter默认组件的本地化只需要添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;flutter_localizations&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;sdk&lt;/span&gt;: flutter&lt;/pre&gt;
&lt;p&gt;
      使用命令行添加就是
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;flutter pub add flutter_localizations --sdk=flutter&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改入口组件 &lt;b&gt;main.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter_localizations/flutter_localizations.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  title: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Localizations Sample App&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
  localizationsDelegates...&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;内置组件本地化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;自定义本地化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;自定义本地化(非代码自动生成)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;本地化多语言的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;优化多语言选择&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;内置组件本地化&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 添加依赖
&lt;/p&gt;

&lt;p&gt;
      Flutter默认组件的本地化只需要添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;flutter_localizations&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;sdk&lt;/span&gt;: flutter&lt;/pre&gt;
&lt;p&gt;
      使用命令行添加就是
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;flutter pub add flutter_localizations --sdk=flutter&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改入口组件 &lt;b&gt;main.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter_localizations/flutter_localizations.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  title: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Localizations Sample App&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
  localizationsDelegates: [
    GlobalMaterialLocalizations.delegate,
    GlobalWidgetsLocalizations.delegate,
    GlobalCupertinoLocalizations.delegate,
  ],
  supportedLocales: [
    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;), &lt;span style=&quot;color:#75715e&quot;&gt;// English
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;), &lt;span style=&quot;color:#75715e&quot;&gt;// Chinese
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;  ],
  home: MyHomePage(),
);&lt;/pre&gt;
&lt;p&gt;
      这样Flutter内置组件所显示的语言就能和系统语言保持一致，如果想要手动修改，只需要添加参数
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  ...
  locale: Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;),
);&lt;/pre&gt;

&lt;p&gt;
      如果想要修改指定的组件，需要使用到 &lt;code&gt;Localizations.override&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Widget build(BuildContext context) {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; Scaffold(
    appBar: AppBar(
      title: Text(widget.title),
    ),
    body: Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;Widget&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[
          Localizations.override(
            context: context,
            locale: &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;),
            child: Builder(
              builder: (context) {
                &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; CalendarDatePicker(
                  initialDate: DateTime.now(),
                  firstDate: DateTime(&lt;span style=&quot;color:#ae81ff&quot;&gt;1900&lt;/span&gt;),
                  lastDate: DateTime(&lt;span style=&quot;color:#ae81ff&quot;&gt;2100&lt;/span&gt;),
                  onDateChanged: (value) {},
                );
              },
            ),
          ),
        ],
      ),
    ),
  );
}&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;自定义本地化&lt;/h2&gt;
&lt;p&gt;
   根据官方文档，可以利用 &lt;code&gt;flutter_localozations&lt;/code&gt; 和 &lt;code&gt;intl&lt;/code&gt; 来实现。但是如果根据官方文档，那可不是一般的麻烦，而是相当麻烦，操作步骤包括但不限于
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 修改 &lt;code&gt;pubsepc.yaml&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;l10n.yaml&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;.arb&lt;/code&gt; 文件
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   当然，这一切也不能说是很麻烦，毕竟只要第一次改好，后续只用修改 &lt;code&gt;.arb&lt;/code&gt; 文件就能自动运行，但根据这个流程生成的多语言本地化，我觉得有几个问题：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 自动生成的 &lt;code&gt;.dart&lt;/code&gt; 文件是保存在 &lt;code&gt;{项目目录}/.dart_tool/flutter_gen/gen_l10n&lt;/code&gt; 目录下的，这会导致项目默认的代码没有多语言相关，只有一些不知所谓的 &lt;code&gt;.arb&lt;/code&gt; 文件，毕竟与多语言相关的代码都是自动生成的
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 也是最重要的一点， 我为什么要在默认语言下重复定义一个不能带空格，只允许定义符合 &lt;b&gt;dart方法名称&lt;/b&gt; 的关键字以供调用，比如一个简单的字符串
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)&lt;/pre&gt;

&lt;p&gt;
      我必须在默认语言定义一个
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;// app_es.arb
&amp;#34;helloWorld&amp;#34;: &amp;#34;Hello World&amp;#34;&lt;/pre&gt;

&lt;p&gt;
      然后在其它语言定义
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;// app_zh.arb
&amp;#34;helloWorld&amp;#34;: &amp;#34;你好 世界&amp;#34;&lt;/pre&gt;
&lt;p&gt;
      最后再修改默认的调用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(AppLocations.of(context).helloWorld)&lt;/pre&gt;
&lt;p&gt;
      我为什么不能直接使用原有的字符串呢，这样就不用再为默认的语言添加额外的翻译，比如
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(AppLocations.of(context).tr(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
   所以，我仔细研究了一下，大抵不用如此麻烦
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;自定义本地化(非代码自动生成)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 首先添加 &lt;b&gt;l10n.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;dart:async&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter/foundation.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter/widgets.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter_localizations/flutter_localizations.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:intl/intl.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;as&lt;/span&gt; intl;

&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n_en.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n_zh.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;abstract&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;L10n&lt;/span&gt; {
  L10n(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; locale)
  &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; localeName &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; intl.Intl.canonicalizedLocale(locale.toString());

  &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; localeName;

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; L10n&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; of(BuildContext context) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; Localizations.of&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;(context, L10n);
  }

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; delegate &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; _L10nDelegate();

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; List&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;dynamic&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; localizationsDelegates &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;
  &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;dynamic&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[
    delegate,
    GlobalMaterialLocalizations.delegate,
    GlobalCupertinoLocalizations.delegate,
    GlobalWidgetsLocalizations.delegate,
  ];

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; List&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;Locale&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; supportedLocales &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;Locale&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[
    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;),
    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)
  ];

  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key);
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_L10nDelegate&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; _L10nDelegate();

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  Future&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; load(Locale locale) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; SynchronousFuture&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;(lookupL10n(locale));
  }

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;bool&lt;/span&gt; isSupported(Locale locale) &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;].contains(locale.languageCode);

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;bool&lt;/span&gt; shouldReload(_L10nDelegate old) &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;;
}

L10n lookupL10n(Locale locale) {
  &lt;span style=&quot;color:#75715e&quot;&gt;// Lookup logic when only language code is specified.
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;  &lt;span style=&quot;color:#66d9ef&quot;&gt;switch&lt;/span&gt; (locale.languageCode) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; L10nEn();
    &lt;span style=&quot;color:#66d9ef&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; L10nZh();
  }

  &lt;span style=&quot;color:#66d9ef&quot;&gt;throw&lt;/span&gt; FlutterError(
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;L10n.delegate failed to load unsupported locale &amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;$&lt;/span&gt;locale&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;. This is likely &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;an issue with the localizations generation tool. Please file an issue &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;on GitHub with a reproducible sample app and the gen-l10n configuration &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;that was used.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;);
}&lt;/pre&gt;
&lt;p&gt;
      上述代码其实是由根据官方文档自动生成的 &lt;code&gt;.dart&lt;/code&gt; 文件转化而来
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加默认语言的翻译
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// l10n_en.dart
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;L10nEn&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; L10n {
  L10nEn([&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; locale &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;]) &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;super&lt;/span&gt;(locale);

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; translations[key] &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; key;
  }
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; translations &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {};&lt;/pre&gt;
&lt;p&gt;
      对的，你没有看错， &lt;code&gt;translations&lt;/code&gt; 甚至可以是空的，这样就不用重复定义默认语言的翻译
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加其它语言的翻译
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// l10n_zh.dart
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;L10nZh&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; L10n {
  L10nZh([&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; locale &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;]) &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;super&lt;/span&gt;(locale);

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; translations[key] &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; key;
  }
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; translations &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Settings&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;设置&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Basic Settings&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;基础设置&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Theme&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;主题&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Language&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;语言&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;About&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;关于&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;帮助&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
};&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改 &lt;b&gt;main.dart&lt;/b&gt; 入口组件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;app/l10n/l10n.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  title: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Localizations Sample App&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
  localizationsDelegates: L10n.localizationsDelegates,
  supportedLocales: L10n.supportedLocales,
  home: MyHomePage(),
);&lt;/pre&gt;
&lt;p&gt;
      这样就能使用自定义的翻译了
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;本地化多语言的使用&lt;/h2&gt;
&lt;p&gt;
   最常用的是在 &lt;code&gt;Text&lt;/code&gt; 组件里
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(L10n.of(context)&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;.tr(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;p&gt;
   但是所有的字符都要添加 &lt;code&gt;L10n.of(context)!&lt;/code&gt; 未免有些麻烦，所以我增加了自定义扩展
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;BuildContext&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;extension L10nContext on BuildContext {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; L10n.of(&lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;);
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;) {
      &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; key;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; t.tr(key);
  }
}&lt;/pre&gt;

&lt;p&gt;
     使用方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(context.tr(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;String&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;extension L10nString on &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(BuildContext context) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; L10n.of(context);
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;) {
      &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; t.tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;);
  }
}&lt;/pre&gt;

&lt;p&gt;
     使用方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;.tr(context))&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;Text&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;extension L10nText on Text {
  Text tr(BuildContext context) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; L10n.of(context);
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;|&lt;/span&gt; data &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;) {
      &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; Text(t.tr(data &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;),
      key: key,
      style: style,
      strutStyle: strutStyle,
      textAlign: textAlign,
      textDirection: textDirection,
      locale: locale,
      softWrap: softWrap,
      overflow: overflow,
      textScaler: textScaler,
      maxLines: maxLines,
      semanticsLabel: semanticsLabel,
      textWidthBasis: textWidthBasis);
  }
}&lt;/pre&gt;

&lt;p&gt;
     使用方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;).tr(context)&lt;/pre&gt;

&lt;p&gt;
     如此，就能最大限度的较少对原有代码的侵略性修改
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-5&quot;&gt;优化多语言选择&lt;/h2&gt;
&lt;p&gt;
   我这里选用的是 &lt;b&gt;riverpod&lt;/b&gt; 进行状态管理，首先定义一个本地语言的状态
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; localeProvider &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; StateProvider&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;((ref) {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;;
});&lt;/pre&gt;

&lt;p&gt;
   接着修改 &lt;b&gt;main.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;MyApp&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; ConsumerWidget {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MyApp({&lt;span style=&quot;color:#66d9ef&quot;&gt;super&lt;/span&gt;.key});

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  Widget build(BuildContext context, WidgetRef ref) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; localeCode &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; ref.watch(localeProvider);

    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; MaterialApp(
      locale: L10n.delegate.isSupported(localeCode) &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; Locale(localeCode) &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;,
      ...
    );
  }
}&lt;/pre&gt;

&lt;p&gt;
   这样就能很方便地修改应用的显示语言
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;ref.read(localeProvider.notifier).state &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;;&lt;/pre&gt;

&lt;h2 id=&quot;heading-6&quot;&gt;参考文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://docs.flutter.dev/ui/accessibility-and-internationalization/internationalization&quot;&gt;https://docs.flutter.dev/ui/accessibility-and-internationalization/internationalization&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://docs.flutter.cn/ui/accessibility-and-internationalization/internationalization&quot;&gt;https://docs.flutter.cn/ui/accessibility-and-internationalization/internationalization&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>flutter笔记之初体验</title>
      <link href="" rel="alternate"></link>
      <published>Sat, 05 Jun 2021 22:58:01 +0000</published>
      <updated>Thu, 03 Oct 2024 00:00:39 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/06/flutter笔记之初体验.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/06/flutter笔记之初体验.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;h3 id=&quot;heading-1.1&quot;&gt;安装flutter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 首先下载flutter包, 解压到 &lt;code&gt;~/repo&lt;/code&gt; 目录,并配置 &lt;code&gt;~/.bashrc&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$PATH:$HOME/repo/flutter/bin&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;source ~/.bashrc&lt;/code&gt;使其生效
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
      注意：首次运行flutter，macos可能会提示无法打开dart，需要到 &lt;code&gt;系统偏好 -&amp;gt; 安全性与隐私&lt;/code&gt; 点击允许
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter --version
Flutter 2.2...&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;安装&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;安装flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;安装java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.3&quot;&gt;安装android sdk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;初体验&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;创建一个新的项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;配置android模拟器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;启动flutter项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;升级Flutter版本&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.1&quot;&gt;升级步骤&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.2&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;FAQ&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4.1&quot;&gt;启动项目报 &lt;code&gt;Operation timed out&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4.2&quot;&gt;Unable to locate Android SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;h3 id=&quot;heading-1.1&quot;&gt;安装flutter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 首先下载flutter包, 解压到 &lt;code&gt;~/repo&lt;/code&gt; 目录,并配置 &lt;code&gt;~/.bashrc&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$PATH:$HOME/repo/flutter/bin&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;source ~/.bashrc&lt;/code&gt;使其生效
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
      注意：首次运行flutter，macos可能会提示无法打开dart，需要到 &lt;code&gt;系统偏好 -&amp;gt; 安全性与隐私&lt;/code&gt; 点击允许
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter --version
Flutter 2.2.1 • channel stable • https://github.com/flutter/flutter.git
Framework • revision 02c026b03c (9 天前) • 2021-05-27 12:24:44 -0700
Engine • revision 0fdb562ac8
Tools • Dart 2.13.1&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第一步，禁用 &lt;b&gt;google analytics&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter config --no-analytics

  ╔════════════════════════════════════════════════════════════════════════════╗
  ║                 Welcome to Flutter! - https://flutter.dev                  ║
  ║                                                                            ║
  ║ The Flutter tool uses Google Analytics to anonymously report feature usage ║
  ║ statistics and basic crash reports. This data is used to help improve      ║
  ......
  ║ See Google&amp;#39;s privacy policy:                                               ║
  ║ https://policies.google.com/privacy                                        ║
  ╚════════════════════════════════════════════════════════════════════════════╝

Analytics reporting disabled.

You may need to restart any open editors for them to read new settings.&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第二步, 执行 &lt;code&gt;flutter doctor&lt;/code&gt; 检查依赖环境
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter doctor
Running &amp;#34;flutter pub get&amp;#34; in flutter_tools...                      10.6s
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 2.2.1, on macOS 11.3.1 20E241 darwin-x64, locale zh-Hans-CN)
[✗] Android toolchain - develop for Android devices
    ✗ Unable to locate Android SDK.
      Install Android Studio from: https://developer.android.com/studio/index.html
      On first launch it will assist you in installing the Android SDK components.
      (or visit https://flutter.dev/docs/get-started/install/macos#android-setup for detailed instructions).
      If the Android SDK has been installed to a custom location, please use
      `flutter config --android-sdk` to update to that location.

[✗] Xcode - develop for iOS and macOS
    ✗ Xcode installation is incomplete; a full installation is necessary for iOS development.
      Download at: https://developer.apple.com/xcode/download/
      Or install Xcode via the App Store.
      Once installed, run:
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
        sudo xcodebuild -runFirstLaunch
    ✗ CocoaPods not installed.
        CocoaPods is used to retrieve the iOS and macOS platform side&amp;#39;s plugin code that responds to your plugin usage on the Dart side.
        Without CocoaPods, plugins will not work on iOS or macOS.
        For more info, see https://flutter.dev/platform-plugins
      To install see https://guides.cocoapods.org/using/getting-started.html#installation for instructions.
[✓] Chrome - develop for the web
[!] Android Studio (not installed)
[✓] VS Code (version 1.56.2)
[✓] Connected device (1 available)

! Doctor found issues in 3 categories.&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-1.2&quot;&gt;安装java&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install openjdk@8&lt;/pre&gt;
&lt;p&gt;
      刚开始我安装的是 &lt;b&gt;openjdk@11&lt;/b&gt;, 但在启动 &lt;b&gt;sdkmanager&lt;/b&gt; 时会报
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ /usr/local/share/android-sdk/tools/bin/sdkmanager
Exception in thread &amp;#34;main&amp;#34; java.lang.NoClassDefFoundError: javax/xml/bind/annotation/XmlSchema
    at com.android.repository.api.SchemaModule$SchemaModuleVersion.&amp;lt;init&amp;gt;(SchemaModule.java:156)
    at com.android.repository.api.SchemaModule.&amp;lt;init&amp;gt;(SchemaModule.java:75)
    at com.android.sdklib.repository.AndroidSdkHandler.&amp;lt;clinit&amp;gt;(AndroidSdkHandler.java:81)
    at com.android.sdklib.tool.sdkmanager.SdkManagerCli.main(SdkManagerCli.java:73)
    at com.android.sdklib.tool.sdkmanager.SdkManagerCli.main(SdkManagerCli.java:48)
Caused by: java.lang.ClassNotFoundException: javax.xml.bind.annotation.XmlSchema
    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)&lt;/pre&gt;
&lt;p&gt;
      查找网上的资料，即使设置了 &lt;code&gt;JAVA_OPTS&lt;/code&gt;, 但还是有问题，所以我安装 &lt;code&gt;openjdk@8&lt;/code&gt; 而不是 &lt;code&gt;openjdk@11&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ export JAVA_OPTS=&amp;#39;-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee&amp;#39;
└──╼ /usr/local/share/android-sdk/tools/bin/sdkmanager
Error occurred during initialization of boot layer
java.lang.module.FindException: Module java.se.ee not found&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置环境变量
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export JAVA_HOME&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;/usr/local/opt/openjdk@8
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$JAVA_HOME/bin:$PATH&lt;/pre&gt;
&lt;p&gt;
      如果未设置 &lt;code&gt;JAVA_HOME&lt;/code&gt; 环境变量，后续执行 &lt;code&gt;flutter doctor&lt;/code&gt; 可能会报
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;The operation couldn’t be completed. Unable to locate a Java Runtime.
Please visit http://www.java.com for information on installing Java.&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-1.3&quot;&gt;安装android sdk&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装sdk
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install android-sdk&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 安装sdk组件
      首先执行 &lt;code&gt;sdkmanager --list&lt;/code&gt; 找到组件最新版本或者选择合适版本
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ sdkmanager platform-tools
└──╼ sdkmanager &amp;#39;platforms;android-29&amp;#39;
└──╼ sdkmanager &amp;#39;build-tools;31.0.0-rc4&amp;#39;
└──╼ sdkmanager --licenses&lt;/pre&gt;
&lt;p&gt;
      如果未执行 &lt;code&gt;sdkmanager --licenses&lt;/code&gt; 并同意相关协议，在执行 &lt;code&gt;flutter doctor&lt;/code&gt; 后可能会提示
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[!] Android toolchain - develop for Android devices (Android SDK version 31.0.0-rc4)
    ! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licenses&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置环境变量
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export ANDROID_SDK_ROOT&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;/usr/local/share/android-sdk
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools:$PATH&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;初体验&lt;/h2&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;创建一个新的项目&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter create myapp
└──╼ cd myapp&lt;/pre&gt;
&lt;p&gt;
    注意不要在 &lt;b&gt;flutter sdk&lt;/b&gt; 目录里创建项目
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Cannot create a project within the Flutter SDK. Target directory &amp;#39;$HOME/repo/flutter/src/myapp&amp;#39; is within the Flutter SDK at
&amp;#39;$HOME/repo/flutter&amp;#39;.&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;配置android模拟器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装模拟器
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ sdkmanager emulator
└──╼ sdkmanager &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;system-images;android-29;google_apis;x86_64&amp;#39;&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 创建新的android模拟器
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ avdmanager -s create avd -n testAndroid -k &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;system-images;android-29;google_apis;x86_64&amp;#34;&lt;/span&gt;
└──╼ avdmanager list avd&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.3&quot;&gt;启动flutter项目&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 启动模拟器
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter emulators
&lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt; available emulator:

testAndroid • testAndroid •  • android

To run an emulator, run &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;flutter emulators --launch &amp;lt;emulator id&amp;gt;&amp;#39;&lt;/span&gt;.
To create a new emulator, run &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;flutter emulators --create [--name xyz]&amp;#39;&lt;/span&gt;.

You can find more information on managing emulators at the links below:
https://developer.android.com/studio/run/managing-avds
https://developer.android.com/studio/command-line/avdmanager
└──╼ flutter emulators --launch testAndroid&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 查看可用驱动
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter devices
&lt;span style=&quot;color:#ae81ff&quot;&gt;2&lt;/span&gt; connected devices:

Android SDK built &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; x86 &lt;span style=&quot;color:#ae81ff&quot;&gt;64&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;mobile&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; • emulator-5554 • android-x64    • Android &lt;span style=&quot;color:#ae81ff&quot;&gt;10&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;API 29&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;emulator&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;
Chrome &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;web&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;                          • chrome        • web-javascript • Google Chrome 90.0.4430.212&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 启动项目
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter run -d emulator-5554&lt;/pre&gt;
&lt;p&gt;
      
&lt;a href=&quot;https://s.libforest.com/images/2021/06/first-flutter.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2021/06/first-flutter.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
      至此，我的第一个flutter应用体验完成。
      很久没学习新的技术，感觉自己都快落伍了，脑子也快生锈了，很早之前就打算自己写一个私人使用的 &lt;code&gt;app&lt;/code&gt;，但总抱着一招鲜吃遍天的想法，坚持着熟悉的 &lt;code&gt;vue web app&lt;/code&gt;, 而且还道听途说对 &lt;code&gt;flutter&lt;/code&gt; 有所怀疑，一直没实际体验过。虽然 &lt;code&gt;vue&lt;/code&gt; 足够简单，搭配 &lt;code&gt;cordova&lt;/code&gt; 也很方便，但毕竟属于 &lt;code&gt;web app&lt;/code&gt;，每种语言或者工具应该都有自己最擅长的领域，比如 &lt;code&gt;vue&lt;/code&gt; 之于 web，&lt;code&gt;flutter&lt;/code&gt; 至于 移动端app，最重要的是，现在技术更新迭代太快，你不学总有人学，学而不思则罔，思而不学则殆，不思不学只会被淘汰
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;升级Flutter版本&lt;/h2&gt;
&lt;h3 id=&quot;heading-3.1&quot;&gt;升级步骤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
  查看当前使用的版本
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter channel

Flutter channels:
master
dev
beta
* stable&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 选择版本(可选)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter channel stable&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 升级
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter upgrade&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-3.2&quot;&gt;FAQ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 Flutter目录有修改
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[   +8 ms] Your flutter checkout has local changes that would be erased by upgrading. If you want to keep these changes, it is recommended that you stash them via &amp;#34;git stash&amp;#34; or else commit the changes
to a local
           branch. If it is okay to remove local changes, then re-run this command with &amp;#34;--force&amp;#34;.
....&lt;/pre&gt;
&lt;p&gt;
       进入Flutter目录，使用 &lt;code&gt;git diff&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;──╼ git diff
diff --git a/packages/flutter_tools/gradle/flutter.gradle b/packages/flutter_tools/gradle/flutter.gradle
index 3db040b967..69db8a4873 100644
--- a/packages/flutter_tools/gradle/flutter.gradle
+++ b/packages/flutter_tools/gradle/flutter.gradle
@@ -24,8 +24,17 @@ import org.gradle.util.VersionNumber

 buildscript {
     repositories {
-        google()
-        jcenter()
+        // google()
+        // jcenter()
+        maven {
+            url &amp;#39;https://maven.aliyun.com/repository/jcenter&amp;#39;
+        }
+        maven {
+            url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public&amp;#39;
+        }
+        maven {
+            url &amp;#39;https://maven.aliyun.com/repository/google&amp;#39;
+        }
     }
     dependencies {
         classpath &amp;#39;com.android.tools.build:gradle:4.1.0&amp;#39;&lt;/pre&gt;

&lt;p&gt;
       使用&lt;code&gt;git reset --hard&lt;/code&gt; 重置修改，或者使用 &lt;code&gt;flutter upgrade --force&lt;/code&gt; 强制更新
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;FAQ&lt;/h2&gt;
&lt;h3 id=&quot;heading-4.1&quot;&gt;启动项目报 &lt;code&gt;Operation timed out&lt;/code&gt;&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Using hardware rendering with device Android SDK built for x86 64. If you notice graphics artifacts, consider enabling software rendering with
&amp;#34;--enable-software-rendering&amp;#34;.
Launching lib/main.dart on Android SDK built for x86 64 in debug mode...
Exception in thread &amp;#34;main&amp;#34; java.net.ConnectException: Operation timed out (Connection timed out)
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        ......
        at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:128)
        at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)
Running Gradle task &amp;#39;assembleDebug&amp;#39;...
Running Gradle task &amp;#39;assembleDebug&amp;#39;... Done                        76.2s
Exception: Gradle task assembleDebug failed with exit code 1&lt;/pre&gt;

&lt;p&gt;
    这是因为无法下载 &lt;code&gt;gradle&lt;/code&gt; 的包和依赖，需要科学上网或者修改为国内源
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 修改项目目录下的 &lt;code&gt;android/gradle/wrapper/gradle-wrapper.properties&lt;/code&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;- distributionUrl=https\://services.gradle.org/distributions/gradle-6.7-all.zip
+ distributionUrl=https\://mirrors.cloud.tencent.com/gradle/gradle-6.7-all.zip&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改项目目录下 &lt;code&gt;android/build.gradle&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;- google()
- jcenter()
+ maven { url &amp;#39;https://maven.aliyun.com/repository/google&amp;#39; }
+ maven { url &amp;#39;https://maven.aliyun.com/repository/jcenter&amp;#39; }
+ maven { url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public&amp;#39; }&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改 &lt;b&gt;flutter sdk&lt;/b&gt; 目录下 &lt;code&gt;packages/flutter_tools/gradle/flutter.gradle&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;buildscript {
     repositories {
!        // google()
!        // jcenter()
!        maven {
!            url &amp;#39;https://maven.aliyun.com/repository/jcenter&amp;#39;
!        }
!        maven {
!            url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public&amp;#39;
!        }
!        maven {
!            url &amp;#39;https://maven.aliyun.com/repository/google&amp;#39;
!        }
     }
     dependencies {
         classpath &amp;#39;com.android.tools.build:gradle:4.1.0&amp;#39;
     }
 }&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;heading-4.2&quot;&gt;Unable to locate Android SDK&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter doctor
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 3.3.4, on macOS 12.5 21G72 darwin-x64, locale zh-Hans-CN)
[✗] Android toolchain - develop for Android devices
    ✗ Unable to locate Android SDK.
      Install Android Studio from: https://developer.android.com/studio/index.html
      On first launch it will assist you in installing the Android SDK components.
      (or visit https://flutter.dev/docs/get-started/install/macos#android-setup for detailed instructions).
      If the Android SDK has been installed to a custom location, please use
      `flutter config --android-sdk` to update to that location.&lt;/pre&gt;
&lt;p&gt;
    解决:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter config --android-sdk /usr/local/share/android-sdk
Setting &amp;#34;android-sdk&amp;#34; value to &amp;#34;/usr/local/share/android-sdk&amp;#34;.

You may need to restart any open editors for them to read new settings.&lt;/pre&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;参考文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://flutter.cn/docs/get-started/install/macos&quot;&gt;https://flutter.cn/docs/get-started/install/macos&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://blog.csdn.net/xiuxiuxiubiubiubiu/article/details/104918561&quot;&gt;https://blog.csdn.net/xiuxiuxiubiubiubiu/article/details/104918561&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://www.cnblogs.com/bluestorm/p/14761482.html&quot;&gt;https://www.cnblogs.com/bluestorm/p/14761482.html&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
</feed>