<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
  <title>紅楓吟 - Coding</title>
    <subtitle>风落花语风落天，花落风雨花落田.</subtitle>
  <link href="https://honmaple.me/categories/tech/coding/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://honmaple.me"/>
  <generator uri="https://github.com/honmaple/snow">Snow</generator>
    <updated>Tue, 14 Jan 2025 16:23:31 +0000</updated>
  <id>https://honmaple.me</id>
    <entry xml:lang="zh">
      <title>红枫云盘发布v1.0.1版本，支持文件加密、压缩以及回收站功能</title>
      <link href="https://honmaple.me/articles/2025/01/红枫云盘v1.0.1.html" rel="alternate"></link>
      <published>Mon, 06 Jan 2025 15:32:50 +0000</published>
      <updated>Tue, 14 Jan 2025 16:23:31 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2025/01/红枫云盘v1.0.1.html" type="text/html"/>
      <id>https://honmaple.me/articles/2025/01/红枫云盘v1.0.1.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
距离红枫云盘第一次发布已经过去了一个多月，这期间很感谢阮一峰大佬的推荐，上了2024年最后一期 &lt;a href=&quot;https://github.com/ruanyf/weekly&quot;&gt;科技爱好者周刊&lt;/a&gt;，在短短几天时间就涨了 &lt;b&gt;150&lt;/b&gt; 多个Star ，今天发布了最新的 &lt;a href=&quot;https://github.com/honmaple/maple-file/releases/tag/v1.0.1&quot;&gt;v1.0.1版本&lt;/a&gt;，对比上一次有了重大更新，也带来了更多功能
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;文件加密&lt;/h2&gt;
&lt;p&gt;
   采用 &lt;b&gt;AES&lt;/b&gt; 加密算法，自动对上传或者复制到此存储的文件进行加密，客户端查看或下载时自动解密，再也不用担心上传的视频变成&lt;b&gt;8秒教育片&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
   相关参数:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件密码&lt;/b&gt;: 文件加密密码，不能为空
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件后缀&lt;/b&gt;: 默认为空，当设置为 &lt;code&gt;.bin&lt;/code&gt; 时，加密后的文件，文件名称会自动添加 &lt;code&gt;.bin&lt;/code&gt; 后缀
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件密码加密&lt;/b&gt;: 默认和文件密码相同...&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;文件加密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;文件压缩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;回收站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;文件拖拽上传&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;Web支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
距离红枫云盘第一次发布已经过去了一个多月，这期间很感谢阮一峰大佬的推荐，上了2024年最后一期 &lt;a href=&quot;https://github.com/ruanyf/weekly&quot;&gt;科技爱好者周刊&lt;/a&gt;，在短短几天时间就涨了 &lt;b&gt;150&lt;/b&gt; 多个Star ，今天发布了最新的 &lt;a href=&quot;https://github.com/honmaple/maple-file/releases/tag/v1.0.1&quot;&gt;v1.0.1版本&lt;/a&gt;，对比上一次有了重大更新，也带来了更多功能
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;文件加密&lt;/h2&gt;
&lt;p&gt;
   采用 &lt;b&gt;AES&lt;/b&gt; 加密算法，自动对上传或者复制到此存储的文件进行加密，客户端查看或下载时自动解密，再也不用担心上传的视频变成&lt;b&gt;8秒教育片&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
   相关参数:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件密码&lt;/b&gt;: 文件加密密码，不能为空
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件后缀&lt;/b&gt;: 默认为空，当设置为 &lt;code&gt;.bin&lt;/code&gt; 时，加密后的文件，文件名称会自动添加 &lt;code&gt;.bin&lt;/code&gt; 后缀
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件密码加密&lt;/b&gt;: 默认和文件密码相同，类似二次密码
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件名称加密&lt;/b&gt;: 默认不加密，加密后的名称会出现 &lt;code&gt;LKXPGd-ub3Jyu9msrZM5F2EETxxx&lt;/code&gt; 等形式
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;目录名称加密&lt;/b&gt;: 默认不加密，加密后的名称同上
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   &lt;b&gt;注意&lt;/b&gt;: 文件加密只能使用空目录，并对此空目录上传/复制文件(因为红枫云盘不知道你原来的文件是否已经加密)，并且开启后&lt;b&gt;不能修改加密相关的存储配置&lt;/b&gt;，否则将会导致无法打开已加密的文件，包括预览，下载等功能都会失效
&lt;/p&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;文件压缩&lt;/h2&gt;
&lt;p&gt;
   采用 &lt;b&gt;GZIP&lt;/b&gt; 压缩算法, 自动对上传或者复制到此存储的文件进行压缩，客户端查看或下载时自动解压缩
&lt;/p&gt;

&lt;p&gt;
   相关参数:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;&lt;b&gt;压缩水平&lt;/b&gt;&lt;/b&gt;: 可选默认、压缩率最高、压缩速度最快三种方式
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   &lt;b&gt;注意&lt;/b&gt;: 同文件加密一样，文件压缩只能使用空目录，并且开启后&lt;b&gt;不能修改压缩相关的存储配置&lt;/b&gt;
&lt;/p&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;回收站&lt;/h2&gt;
&lt;p&gt;
   删除文件时自动转为重命名文件(增加时间后缀)并移动到指定目录，想要恢复文件则进入回收站路径找到文件并复制到其它目录即可
&lt;/p&gt;

&lt;p&gt;
   相关参数:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;&lt;b&gt;回收站路径&lt;/b&gt;&lt;/b&gt;: 默认为空，为空时将会在存储的根目录创建一个名为 &lt;code&gt;.maplerecycle&lt;/code&gt; 的目录。回收站路径应当尽量避免使用常用的子路径，比如常用 &lt;code&gt;/a/b&lt;/code&gt;, 则不要设置回收站路径为 &lt;code&gt;/a/b&lt;/code&gt; 目录下的路径，否则删除目录时将会移动目录出现问题
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;文件拖拽上传&lt;/h2&gt;
&lt;p&gt;
   桌面端增加文件拖拽上传，当前只支持文件，不支持目录拖拽
&lt;/p&gt;
&lt;h2 id=&quot;heading-5&quot;&gt;Web支持&lt;/h2&gt;
&lt;p&gt;
   浏览器也能管理文件，这样就能通过 &lt;b&gt;Docker&lt;/b&gt; 将红枫云盘部署到服务器或NAS
&lt;/p&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>开源一个离线版Alist，无需服务端部署即可管理云盘文件</title>
      <link href="https://honmaple.me/articles/2024/12/kai-yuan-ge-chi-xian-ban-alist-wu-xu-fu-wu-duan-bu-shu-ji-ke-guan-li-yun-pan-wen-jian.html" rel="alternate"></link>
      <published>Mon, 02 Dec 2024 13:09:48 +0000</published>
      <updated>Sat, 14 Dec 2024 18:09:47 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2024/12/kai-yuan-ge-chi-xian-ban-alist-wu-xu-fu-wu-duan-bu-shu-ji-ke-guan-li-yun-pan-wen-jian.html" type="text/html"/>
      <id>https://honmaple.me/articles/2024/12/kai-yuan-ge-chi-xian-ban-alist-wu-xu-fu-wu-duan-bu-shu-ji-ke-guan-li-yun-pan-wen-jian.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;Alist&lt;/b&gt; 是一个非常不错的云盘文件管理程序，不过需要一台服务器或者 &lt;b&gt;Nas&lt;/b&gt; 进行部署，当然，这也同样便于在网络分享文件。但如果只是个人使用，服务器部署以及多账户系统未免有些麻烦。我是一个怕麻烦的人，虽然我自己也在 &lt;b&gt;Nas&lt;/b&gt; 中部署了一个 &lt;b&gt;Alist&lt;/b&gt; 服务，但还是想要一个单独的 &lt;b&gt;离线版APP&lt;/b&gt;，&lt;b&gt;红枫云盘&lt;/b&gt; 就由此诞生。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;b&gt;红枫云盘&lt;/b&gt; 即 &lt;a href=&quot;https://github.com/honmaple/maple-file&quot;&gt;maple-file&lt;/a&gt;，名称由 &lt;b&gt;maple(枫叶)&lt;/b&gt; + &lt;b&gt;file(文件)&lt;/b&gt; 组成， 这原本是我很早之前写的一个基于 &lt;b&gt;Flask&lt;/b&gt; 的项目，主要用于图片上传，还有相册的功能，但已经很久没有使用和维护过了...&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;开发&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;Alist&lt;/b&gt; 是一个非常不错的云盘文件管理程序，不过需要一台服务器或者 &lt;b&gt;Nas&lt;/b&gt; 进行部署，当然，这也同样便于在网络分享文件。但如果只是个人使用，服务器部署以及多账户系统未免有些麻烦。我是一个怕麻烦的人，虽然我自己也在 &lt;b&gt;Nas&lt;/b&gt; 中部署了一个 &lt;b&gt;Alist&lt;/b&gt; 服务，但还是想要一个单独的 &lt;b&gt;离线版APP&lt;/b&gt;，&lt;b&gt;红枫云盘&lt;/b&gt; 就由此诞生。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;b&gt;红枫云盘&lt;/b&gt; 即 &lt;a href=&quot;https://github.com/honmaple/maple-file&quot;&gt;maple-file&lt;/a&gt;，名称由 &lt;b&gt;maple(枫叶)&lt;/b&gt; + &lt;b&gt;file(文件)&lt;/b&gt; 组成， 这原本是我很早之前写的一个基于 &lt;b&gt;Flask&lt;/b&gt; 的项目，主要用于图片上传，还有相册的功能，但已经很久没有使用和维护过了。本来我准备把新项目起名为 &lt;b&gt;Filesea&lt;/b&gt;，但又和我的另一个类似 &lt;b&gt;Alist&lt;/b&gt; 的项目名相同(未开源)，而且 &lt;b&gt;Filesea&lt;/b&gt; 和一个知名项目 &lt;b&gt;Seafile&lt;/b&gt; 过于相似，所以还是继续沿用之前的名称，毕竟对比之前的纯API也算得上是一个全新的升级和改版
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;功能&lt;/h2&gt;
&lt;p&gt;
   目前已经支持的存储：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 local(本地文件)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 smb
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 ftp
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 sftp
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 webdav
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 alist
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 又拍云
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   包括了文件上传、下载、重命名、移动、复制、创建文件夹、预览等功能，虽然部分功能比如预览还比较简陋，但持续优化中，未来可能会添加相册，文件同步和备份等功能
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 文件列表
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 文件预览: 支持文本文件，图片，音频，视频
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_16.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_16.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_17.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_17.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_07.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_07.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_08.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_08.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_09.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_09.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 上传和下载
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_10.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_10.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_11.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_11.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 重命名、移动、复制(包括多选)
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_04.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_04.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_05.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_05.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_06.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_06.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加修改存储
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_14.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_14.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_13.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_13.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 设置
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_18.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_18.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_12.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_12.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_15.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_15.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;使用&lt;/h2&gt;
&lt;p&gt;
   目前提供了Android版本和MacOS版本的下载，下载地址: &lt;a href=&quot;https://github.com/honmaple/maple-file/releases/tag/v1.0.0&quot;&gt;https://github.com/honmaple/maple-file/releases/tag/v1.0.0&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;开发&lt;/h2&gt;
&lt;p&gt;
   我参考了 &lt;a href=&quot;https://github.com/GopeedLab/gopeed&quot;&gt;Gopeed&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/fregie/pho&quot;&gt;Pho&lt;/a&gt; 两个项目，客户端使用 &lt;b&gt;Flutter&lt;/b&gt;，后端服务使用 &lt;b&gt;Go&lt;/b&gt;，通过 &lt;code&gt;gomobile&lt;/code&gt; 把 &lt;b&gt;Go&lt;/b&gt; 服务打包成 &lt;code&gt;aar(安卓)&lt;/code&gt;，或者利用 &lt;code&gt;buildmode&lt;/code&gt; 打包成 &lt;code&gt;.dylib(MacOS)&lt;/code&gt;, 这样就能把服务端嵌入到本地客户端，来达到 &lt;b&gt;serverless&lt;/b&gt; 的目的。
&lt;/p&gt;

&lt;p&gt;
   如果想要添加更多存储，只需要使用 &lt;b&gt;Go&lt;/b&gt; 创建一个文件系统接口
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;FS&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;interface&lt;/span&gt; {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;WalkDir&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;WalkDirFunc&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;List&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) ([]&lt;span style=&quot;color:#a6e22e&quot;&gt;File&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Move&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Copy&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Rename&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Remove&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;MakeDir&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Get&lt;/span&gt;(&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;File&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Open&lt;/span&gt;(&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;FileReader&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Create&lt;/span&gt;(&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;FileWriter&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Close&lt;/span&gt;() &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
}&lt;/pre&gt;

&lt;p&gt;
   然后注册一个新的存储名称
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// 注册服务
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;init&lt;/span&gt;() {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;driver&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Register&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;alist&amp;#34;&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt;() &lt;span style=&quot;color:#a6e22e&quot;&gt;driver&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Option&lt;/span&gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;Option&lt;/span&gt;{}
    })
}


&lt;span style=&quot;color:#75715e&quot;&gt;// 加载服务
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
   &lt;span style=&quot;color:#a6e22e&quot;&gt;_&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;github.com/honmaple/maple-file/server/pkg/driver/alist&amp;#34;&lt;/span&gt;
)&lt;/pre&gt;

&lt;p&gt;
   最后在客户端创建一个用于提交配置的表单即可，扩展性足够简单，也足够方便
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;...
DriverFormField(
  label: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;用户&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;.tr(context),
  value: _option[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;username&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;],
  isRequired: &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;,
  onTap: (result) {
    setState(() {
      _option[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;username&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;] &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; result;
    });

    widget.form.option &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; jsonEncode(_option);
  },
),
DriverFormField(
  type: DriverFormFieldType.password,
  label: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;密码&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;.tr(context),
  value: _option[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;],
  onTap: (result) {
    setState(() {
      _option[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;] &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; result;
    });

    widget.form.option &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; jsonEncode(_option);
  },
),&lt;/pre&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Flutter实现本地化多语言</title>
      <link href="https://honmaple.me/articles/2024/10/fluttershi-xian-ben-di-hua-duo-yu-yan.html" rel="alternate"></link>
      <published>Wed, 02 Oct 2024 13:12:27 +0000</published>
      <updated>Sat, 05 Oct 2024 20:13:59 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2024/10/fluttershi-xian-ben-di-hua-duo-yu-yan.html" type="text/html"/>
      <id>https://honmaple.me/articles/2024/10/fluttershi-xian-ben-di-hua-duo-yu-yan.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;内置组件本地化&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 添加依赖
&lt;/p&gt;

&lt;p&gt;
      Flutter默认组件的本地化只需要添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;flutter_localizations&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;sdk&lt;/span&gt;: flutter&lt;/pre&gt;
&lt;p&gt;
      使用命令行添加就是
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;flutter pub add flutter_localizations --sdk=flutter&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改入口组件 &lt;b&gt;main.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter_localizations/flutter_localizations.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  title: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Localizations Sample App&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
  localizationsDelegates...&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;内置组件本地化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;自定义本地化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;自定义本地化(非代码自动生成)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;本地化多语言的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;优化多语言选择&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;内置组件本地化&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 添加依赖
&lt;/p&gt;

&lt;p&gt;
      Flutter默认组件的本地化只需要添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;flutter_localizations&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;sdk&lt;/span&gt;: flutter&lt;/pre&gt;
&lt;p&gt;
      使用命令行添加就是
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;flutter pub add flutter_localizations --sdk=flutter&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改入口组件 &lt;b&gt;main.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter_localizations/flutter_localizations.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  title: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Localizations Sample App&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
  localizationsDelegates: [
    GlobalMaterialLocalizations.delegate,
    GlobalWidgetsLocalizations.delegate,
    GlobalCupertinoLocalizations.delegate,
  ],
  supportedLocales: [
    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;), &lt;span style=&quot;color:#75715e&quot;&gt;// English
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;), &lt;span style=&quot;color:#75715e&quot;&gt;// Chinese
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;  ],
  home: MyHomePage(),
);&lt;/pre&gt;
&lt;p&gt;
      这样Flutter内置组件所显示的语言就能和系统语言保持一致，如果想要手动修改，只需要添加参数
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  ...
  locale: Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;),
);&lt;/pre&gt;

&lt;p&gt;
      如果想要修改指定的组件，需要使用到 &lt;code&gt;Localizations.override&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Widget build(BuildContext context) {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; Scaffold(
    appBar: AppBar(
      title: Text(widget.title),
    ),
    body: Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;Widget&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[
          Localizations.override(
            context: context,
            locale: &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;),
            child: Builder(
              builder: (context) {
                &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; CalendarDatePicker(
                  initialDate: DateTime.now(),
                  firstDate: DateTime(&lt;span style=&quot;color:#ae81ff&quot;&gt;1900&lt;/span&gt;),
                  lastDate: DateTime(&lt;span style=&quot;color:#ae81ff&quot;&gt;2100&lt;/span&gt;),
                  onDateChanged: (value) {},
                );
              },
            ),
          ),
        ],
      ),
    ),
  );
}&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;自定义本地化&lt;/h2&gt;
&lt;p&gt;
   根据官方文档，可以利用 &lt;code&gt;flutter_localozations&lt;/code&gt; 和 &lt;code&gt;intl&lt;/code&gt; 来实现。但是如果根据官方文档，那可不是一般的麻烦，而是相当麻烦，操作步骤包括但不限于
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 修改 &lt;code&gt;pubsepc.yaml&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;l10n.yaml&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;.arb&lt;/code&gt; 文件
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   当然，这一切也不能说是很麻烦，毕竟只要第一次改好，后续只用修改 &lt;code&gt;.arb&lt;/code&gt; 文件就能自动运行，但根据这个流程生成的多语言本地化，我觉得有几个问题：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 自动生成的 &lt;code&gt;.dart&lt;/code&gt; 文件是保存在 &lt;code&gt;{项目目录}/.dart_tool/flutter_gen/gen_l10n&lt;/code&gt; 目录下的，这会导致项目默认的代码没有多语言相关，只有一些不知所谓的 &lt;code&gt;.arb&lt;/code&gt; 文件，毕竟与多语言相关的代码都是自动生成的
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 也是最重要的一点， 我为什么要在默认语言下重复定义一个不能带空格，只允许定义符合 &lt;b&gt;dart方法名称&lt;/b&gt; 的关键字以供调用，比如一个简单的字符串
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)&lt;/pre&gt;

&lt;p&gt;
      我必须在默认语言定义一个
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;// app_es.arb
&amp;#34;helloWorld&amp;#34;: &amp;#34;Hello World&amp;#34;&lt;/pre&gt;

&lt;p&gt;
      然后在其它语言定义
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;// app_zh.arb
&amp;#34;helloWorld&amp;#34;: &amp;#34;你好 世界&amp;#34;&lt;/pre&gt;
&lt;p&gt;
      最后再修改默认的调用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(AppLocations.of(context).helloWorld)&lt;/pre&gt;
&lt;p&gt;
      我为什么不能直接使用原有的字符串呢，这样就不用再为默认的语言添加额外的翻译，比如
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(AppLocations.of(context).tr(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
   所以，我仔细研究了一下，大抵不用如此麻烦
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;自定义本地化(非代码自动生成)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 首先添加 &lt;b&gt;l10n.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;dart:async&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter/foundation.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter/widgets.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter_localizations/flutter_localizations.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:intl/intl.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;as&lt;/span&gt; intl;

&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n_en.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n_zh.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;abstract&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;L10n&lt;/span&gt; {
  L10n(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; locale)
  &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; localeName &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; intl.Intl.canonicalizedLocale(locale.toString());

  &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; localeName;

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; L10n&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; of(BuildContext context) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; Localizations.of&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;(context, L10n);
  }

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; delegate &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; _L10nDelegate();

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; List&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;dynamic&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; localizationsDelegates &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;
  &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;dynamic&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[
    delegate,
    GlobalMaterialLocalizations.delegate,
    GlobalCupertinoLocalizations.delegate,
    GlobalWidgetsLocalizations.delegate,
  ];

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; List&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;Locale&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; supportedLocales &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;Locale&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[
    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;),
    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)
  ];

  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key);
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_L10nDelegate&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; _L10nDelegate();

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  Future&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; load(Locale locale) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; SynchronousFuture&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;(lookupL10n(locale));
  }

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;bool&lt;/span&gt; isSupported(Locale locale) &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;].contains(locale.languageCode);

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;bool&lt;/span&gt; shouldReload(_L10nDelegate old) &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;;
}

L10n lookupL10n(Locale locale) {
  &lt;span style=&quot;color:#75715e&quot;&gt;// Lookup logic when only language code is specified.
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;  &lt;span style=&quot;color:#66d9ef&quot;&gt;switch&lt;/span&gt; (locale.languageCode) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; L10nEn();
    &lt;span style=&quot;color:#66d9ef&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; L10nZh();
  }

  &lt;span style=&quot;color:#66d9ef&quot;&gt;throw&lt;/span&gt; FlutterError(
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;L10n.delegate failed to load unsupported locale &amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;$&lt;/span&gt;locale&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;. This is likely &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;an issue with the localizations generation tool. Please file an issue &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;on GitHub with a reproducible sample app and the gen-l10n configuration &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;that was used.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;);
}&lt;/pre&gt;
&lt;p&gt;
      上述代码其实是由根据官方文档自动生成的 &lt;code&gt;.dart&lt;/code&gt; 文件转化而来
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加默认语言的翻译
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// l10n_en.dart
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;L10nEn&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; L10n {
  L10nEn([&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; locale &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;]) &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;super&lt;/span&gt;(locale);

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; translations[key] &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; key;
  }
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; translations &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {};&lt;/pre&gt;
&lt;p&gt;
      对的，你没有看错， &lt;code&gt;translations&lt;/code&gt; 甚至可以是空的，这样就不用重复定义默认语言的翻译
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加其它语言的翻译
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// l10n_zh.dart
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;L10nZh&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; L10n {
  L10nZh([&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; locale &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;]) &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;super&lt;/span&gt;(locale);

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; translations[key] &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; key;
  }
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; translations &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Settings&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;设置&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Basic Settings&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;基础设置&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Theme&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;主题&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Language&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;语言&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;About&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;关于&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;帮助&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
};&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改 &lt;b&gt;main.dart&lt;/b&gt; 入口组件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;app/l10n/l10n.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  title: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Localizations Sample App&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
  localizationsDelegates: L10n.localizationsDelegates,
  supportedLocales: L10n.supportedLocales,
  home: MyHomePage(),
);&lt;/pre&gt;
&lt;p&gt;
      这样就能使用自定义的翻译了
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;本地化多语言的使用&lt;/h2&gt;
&lt;p&gt;
   最常用的是在 &lt;code&gt;Text&lt;/code&gt; 组件里
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(L10n.of(context)&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;.tr(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;p&gt;
   但是所有的字符都要添加 &lt;code&gt;L10n.of(context)!&lt;/code&gt; 未免有些麻烦，所以我增加了自定义扩展
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;BuildContext&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;extension L10nContext on BuildContext {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; L10n.of(&lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;);
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;) {
      &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; key;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; t.tr(key);
  }
}&lt;/pre&gt;

&lt;p&gt;
     使用方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(context.tr(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;String&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;extension L10nString on &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(BuildContext context) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; L10n.of(context);
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;) {
      &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; t.tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;);
  }
}&lt;/pre&gt;

&lt;p&gt;
     使用方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;.tr(context))&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;Text&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;extension L10nText on Text {
  Text tr(BuildContext context) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; L10n.of(context);
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;|&lt;/span&gt; data &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;) {
      &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; Text(t.tr(data &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;),
      key: key,
      style: style,
      strutStyle: strutStyle,
      textAlign: textAlign,
      textDirection: textDirection,
      locale: locale,
      softWrap: softWrap,
      overflow: overflow,
      textScaler: textScaler,
      maxLines: maxLines,
      semanticsLabel: semanticsLabel,
      textWidthBasis: textWidthBasis);
  }
}&lt;/pre&gt;

&lt;p&gt;
     使用方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;).tr(context)&lt;/pre&gt;

&lt;p&gt;
     如此，就能最大限度的较少对原有代码的侵略性修改
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-5&quot;&gt;优化多语言选择&lt;/h2&gt;
&lt;p&gt;
   我这里选用的是 &lt;b&gt;riverpod&lt;/b&gt; 进行状态管理，首先定义一个本地语言的状态
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; localeProvider &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; StateProvider&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;((ref) {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;;
});&lt;/pre&gt;

&lt;p&gt;
   接着修改 &lt;b&gt;main.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;MyApp&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; ConsumerWidget {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MyApp({&lt;span style=&quot;color:#66d9ef&quot;&gt;super&lt;/span&gt;.key});

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  Widget build(BuildContext context, WidgetRef ref) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; localeCode &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; ref.watch(localeProvider);

    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; MaterialApp(
      locale: L10n.delegate.isSupported(localeCode) &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; Locale(localeCode) &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;,
      ...
    );
  }
}&lt;/pre&gt;

&lt;p&gt;
   这样就能很方便地修改应用的显示语言
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;ref.read(localeProvider.notifier).state &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;;&lt;/pre&gt;

&lt;h2 id=&quot;heading-6&quot;&gt;参考文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://docs.flutter.dev/ui/accessibility-and-internationalization/internationalization&quot;&gt;https://docs.flutter.dev/ui/accessibility-and-internationalization/internationalization&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://docs.flutter.cn/ui/accessibility-and-internationalization/internationalization&quot;&gt;https://docs.flutter.cn/ui/accessibility-and-internationalization/internationalization&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>基于Quasar实现一个树状选择器TreeSelect</title>
      <link href="https://honmaple.me/articles/2023/05/基于Quasar实现一个树状选择器TreeSelect.html" rel="alternate"></link>
      <published>Tue, 09 May 2023 23:23:52 +0000</published>
      <updated>Wed, 21 Aug 2024 15:45:56 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/05/基于Quasar实现一个树状选择器TreeSelect.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/05/基于Quasar实现一个树状选择器TreeSelect.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;Quasar&lt;/code&gt; 默认没有树状选择器的支持，而在 &lt;code&gt;Vue&lt;/code&gt; 中通常会使用一个现成的&lt;a href=&quot;https://github.com/riophae/vue-treeselect&quot;&gt;vue-treeselect&lt;/a&gt;, 这是一个非常不错的 &lt;code&gt;Select&lt;/code&gt; 组件, 此次不使用该组件，而是利用 &lt;code&gt;Quasar&lt;/code&gt; 中的 &lt;code&gt;q-select&lt;/code&gt; 和 &lt;code&gt;q-tree&lt;/code&gt; 结合，实现一个类似的树状选择器
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;源数据结构&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;desc&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;源数据结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;组件模版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;组件选项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;最终实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;Quasar&lt;/code&gt; 默认没有树状选择器的支持，而在 &lt;code&gt;Vue&lt;/code&gt; 中通常会使用一个现成的&lt;a href=&quot;https://github.com/riophae/vue-treeselect&quot;&gt;vue-treeselect&lt;/a&gt;, 这是一个非常不错的 &lt;code&gt;Select&lt;/code&gt; 组件, 此次不使用该组件，而是利用 &lt;code&gt;Quasar&lt;/code&gt; 中的 &lt;code&gt;q-select&lt;/code&gt; 和 &lt;code&gt;q-tree&lt;/code&gt; 结合，实现一个类似的树状选择器
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;源数据结构&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;desc&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;管理员&amp;#34;&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;children&amp;#34;&lt;/span&gt;: [{
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;6&lt;/span&gt;,
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;superadmin&amp;#34;&lt;/span&gt;,
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;desc&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;超级管理员&amp;#34;&lt;/span&gt;,
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;children&amp;#34;&lt;/span&gt;: [{
            &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;10&lt;/span&gt;,
            &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;vvvvv&amp;#34;&lt;/span&gt;,
            &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;desc&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;dddd&amp;#34;&lt;/span&gt;,
        }]
    }]
}&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;组件模版&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-select&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;outlined&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;emit-value&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;map-options&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;option-value&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;option-label&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;label&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;角色列表&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:options&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:loading&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.loading&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:multiple&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;multiple&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:use-chips&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;multiple&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;filter&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;filterFn&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:model-value&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;modelValue&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;update:model-value&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;value =&amp;gt; $emit(&amp;#39;update:modelValue&amp;#39;, value)&amp;#34;&lt;/span&gt; &amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:option&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{ itemProps, opt, selected, toggleOption }&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-tree&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:nodes&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;[opt]&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;node-key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;label-key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;:tick-strategy&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;multiple?&amp;#39;strict&amp;#39;:&amp;#39;none&amp;#39;&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:ticked&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.ticked&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.selected&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;opt.parent_id == 0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:default-header&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;prop&amp;#34;&lt;/span&gt;&amp;gt;
          &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;items-center&amp;#34;&lt;/span&gt;&amp;gt;
            {{ prop.node.desc }}({{ prop.node.name }})
          &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-tree&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-select&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   这里利用 &lt;code&gt;slot&lt;/code&gt; 方式添加 &lt;code&gt;q-tree&lt;/code&gt; 组件, 由于只能传递单个选项(&lt;code&gt;option&lt;/code&gt;), 所以在传递给 &lt;code&gt;q-tree&lt;/code&gt; 的参数 &lt;code&gt;nodes&lt;/code&gt; 需要修改成 &lt;code&gt;[opt]&lt;/code&gt;。
&lt;/p&gt;

&lt;p&gt;
   而在 &lt;code&gt;q-tree&lt;/code&gt; 中，单选和多选同样有区别，单选所使用的参数为 &lt;code&gt;v-model:ticked&lt;/code&gt;, 点击选项即可选中，多选所使用的参数为 &lt;code&gt;v-model:selected&lt;/code&gt;, 配置为多选状态时每个树状列表选项前会添加一个 &lt;code&gt;checkbox&lt;/code&gt;，多选状态需要配置 &lt;code&gt;tick-strategy&lt;/code&gt; 参数
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;strict&lt;/code&gt;: 父选项和子选项的选中状态相互独立
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;leaf&lt;/code&gt;: 选中父选项同时选中父选项下的子选项
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;none&lt;/code&gt;: 禁用多选
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;组件选项&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;props&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;defineProps&lt;/span&gt;({
    &lt;span style=&quot;color:#a6e22e&quot;&gt;multiple&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; Boolean,
        &lt;span style=&quot;color:#66d9ef&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;,
    },
    &lt;span style=&quot;color:#a6e22e&quot;&gt;modelValue&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;required&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;,
    },
})
&lt;/pre&gt;
&lt;p&gt;
   父组件可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;role-select&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;multiple&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;form.roles&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;role-select&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;p&gt;
   同时，为了区分多选和单选, 需要将没有用到的选项设置为 &lt;code&gt;undefined&lt;/code&gt;, 同时监听选项的修改
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;emit&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;defineEmits&lt;/span&gt;([&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;update:model-value&amp;#39;&lt;/span&gt;])
&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; { &lt;span style=&quot;color:#a6e22e&quot;&gt;modelValue&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;multiple&lt;/span&gt; } &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;toRefs&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;props&lt;/span&gt;)

&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;multiple&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;) {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;selected&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;undefined&lt;/span&gt;

    &lt;span style=&quot;color:#a6e22e&quot;&gt;watch&lt;/span&gt;(() =&amp;gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;ticked&lt;/span&gt;, (&lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;) =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;emit&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;update:model-value&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;)
    })

} &lt;span style=&quot;color:#66d9ef&quot;&gt;else&lt;/span&gt; {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;ticked&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;undefined&lt;/span&gt;

    &lt;span style=&quot;color:#a6e22e&quot;&gt;watch&lt;/span&gt;(() =&amp;gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;selected&lt;/span&gt;, (&lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;) =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;emit&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;update:model-value&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;)
    })
}
&lt;/pre&gt;

&lt;p&gt;
   为了让子选项在选中状态时也能够显示 &lt;code&gt;.name&lt;/code&gt;，而不是 &lt;code&gt;.id&lt;/code&gt;，需要遍历所有选项，将其合成一个列表，在 &lt;code&gt;q-tree&lt;/code&gt; 组件中通过判断 &lt;code&gt;row.parent_id&lt;/code&gt; 只显示父组件, 这里也可以通过定义 &lt;code&gt;q-select&lt;/code&gt; 的 &lt;code&gt;selected&lt;/code&gt; 或者是 &lt;code&gt;selected-item&lt;/code&gt; 插槽来显示正确的名称
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; []
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; []
    &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;forEach&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt; =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;push&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;)
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;) {
            &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;concat&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt;))
        }
    })
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;computed&lt;/span&gt;(() =&amp;gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;)
})
&lt;/pre&gt;

&lt;p&gt;
   最后就是从后端获取列表数据
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;ref&lt;/span&gt;({
    &lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;ticked&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;loading&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;,
})

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;handleFetch&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;props&lt;/span&gt;) =&amp;gt; {
    ...
    &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;loading&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;api&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;fetchList&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;query&lt;/span&gt;).&lt;span style=&quot;color:#a6e22e&quot;&gt;then&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;response&lt;/span&gt; =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;response&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;data&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;
    }).&lt;span style=&quot;color:#66d9ef&quot;&gt;finally&lt;/span&gt;(() =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;loading&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;
    })
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;filterFn&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;update&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;abort&lt;/span&gt;) =&amp;gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;) {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;update&lt;/span&gt;()
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt;
    }
    &lt;span style=&quot;color:#a6e22e&quot;&gt;update&lt;/span&gt;(() =&amp;gt; {&lt;span style=&quot;color:#a6e22e&quot;&gt;handleFetch&lt;/span&gt;()})
}
&lt;/pre&gt;

&lt;h2 id=&quot;heading-4&quot;&gt;最终实现&lt;/h2&gt;
   &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/05/quasar-tree-select.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/05/quasar-tree-select.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/05/quasar-tree-select-multiple.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/05/quasar-tree-select-multiple.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;</content>
        <category term="Tech/Coding"></category>
    </entry>
    <entry xml:lang="zh">
      <title>基于Quasar实现一个树状表格TableTree</title>
      <link href="https://honmaple.me/articles/2023/04/基于Quasar实现一个树状表格TableTree.html" rel="alternate"></link>
      <published>Sat, 29 Apr 2023 00:03:40 +0000</published>
      <updated>Wed, 21 Aug 2024 15:46:45 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/04/基于Quasar实现一个树状表格TableTree.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/04/基于Quasar实现一个树状表格TableTree.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&quot;https://quasar.dev/&quot;&gt;Quasar&lt;/a&gt; 是一个基于 &lt;code&gt;Vue3&lt;/code&gt; 的前端UI框架，使用的是 &lt;b&gt;Material Design&lt;/b&gt;, 对于国内而言(包括我)觉得确实不太好看，但因为之前使用的是 &lt;code&gt;Element-UI&lt;/code&gt;，大概是由于审美疲劳，此次升级我的后台管理UI，没有继续使用 &lt;code&gt;Vue3&lt;/code&gt; 版本的 &lt;code&gt;Element-Plus&lt;/code&gt;。 不久前我也是基于 &lt;code&gt;Quasar&lt;/code&gt; 开发了一个 Memos 客户端, 感觉效果还不错
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Quasar&lt;/code&gt; 默认没有树状表格的支持，但我觉得树状表格其实还挺重要的，尤其是在显示一些树状的数据，比如一个部门列表(打比方), 树状表格能够清晰的表明各部门之间的上下关系，目前我看实现树状表格的示例要么是基于 &lt;code&gt;qhierarchy...&lt;/code&gt;&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;实现一(废弃)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;实现二&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;最终实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&quot;https://quasar.dev/&quot;&gt;Quasar&lt;/a&gt; 是一个基于 &lt;code&gt;Vue3&lt;/code&gt; 的前端UI框架，使用的是 &lt;b&gt;Material Design&lt;/b&gt;, 对于国内而言(包括我)觉得确实不太好看，但因为之前使用的是 &lt;code&gt;Element-UI&lt;/code&gt;，大概是由于审美疲劳，此次升级我的后台管理UI，没有继续使用 &lt;code&gt;Vue3&lt;/code&gt; 版本的 &lt;code&gt;Element-Plus&lt;/code&gt;。 不久前我也是基于 &lt;code&gt;Quasar&lt;/code&gt; 开发了一个 Memos 客户端, 感觉效果还不错
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Quasar&lt;/code&gt; 默认没有树状表格的支持，但我觉得树状表格其实还挺重要的，尤其是在显示一些树状的数据，比如一个部门列表(打比方), 树状表格能够清晰的表明各部门之间的上下关系，目前我看实现树状表格的示例要么是基于 &lt;code&gt;qhierarchy&lt;/code&gt; (使用 &lt;code&gt;q-markup-table&lt;/code&gt; 实现，定制太困难), 要么就是实现方式太复杂 &lt;a href=&quot;https://forum.quasar-framework.org/topic/2428/tree-table-example&quot;&gt;tree-table-example&lt;/a&gt;, 所以我研究了一下，发现其实还挺简单的，故此记录
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;实现一(废弃)&lt;/h2&gt;
&lt;p&gt;
   虽然 &lt;code&gt;Quasar&lt;/code&gt; 没有树状表格的组件, 但 &lt;code&gt;q-table&lt;/code&gt; 默认是支持 &lt;code&gt;Expanding rows&lt;/code&gt; 的，所以我一开始的想法是使用这个功能实现一个递归的组件, 就像这样
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;row.id&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;row&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:status&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;status&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indent&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indent&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indentStyle&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indentStyle(indent)&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;index&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-for&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;(child, index) in row.children&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;status.expand&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indent&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indent + 1&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;child&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.row&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:status&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indent&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.indent&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indentStyle&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indentStyle(scope.indent)&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   而在父组件中调用只需要把原来的 &lt;code&gt;props&lt;/code&gt; 改成 &lt;code&gt;scope&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:body&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.row&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;auto-width&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-checkbox&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;sm&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status.selected&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-btn&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;round&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xs&amp;#34;&lt;/span&gt;
             &lt;span style=&quot;color:#a6e22e&quot;&gt;:icon&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status.expand ? &amp;#39;remove&amp;#39; : &amp;#39;add&amp;#39;&amp;#34;&lt;/span&gt;
             &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;click&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status.expand = !scope.status.expand&amp;#34;&lt;/span&gt;
             &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.row.children &amp;amp;&amp;amp; scope.row.children.length &amp;gt; 0&amp;#34;&lt;/span&gt; /&amp;gt;
      {{ scope.row.name }}
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;{{ scope.row.desc }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   但是后面发现表格在多选状态下无法和原有的表格选择进行联动，只能自己实现选中和取消选中的方法，虽然也能实现，当很麻烦，只好另寻其它方式
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;实现二&lt;/h2&gt;
&lt;p&gt;
   后面研究了一下 &lt;b&gt;Fernando2684&lt;/b&gt; 的实现方式, 虽然他的方式同样复杂，当实现原理其实很简单, 那就是修改原始数据，比如第二行需要进行展开，那我就在原来第二行的数据下把第二行的子数据追加上去，取消展开就把子数据删除，恢复原来的数据。有了这个原理后就好办了，我们可以利用 &lt;code&gt;Expanding rows&lt;/code&gt; 时用到的 &lt;code&gt;props.expand&lt;/code&gt; 参数来控制是否展开子数据, 然后利用计算属性动态的计算展开后的数据
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 表格模版
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-table&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;bordered&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;row-key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;separator&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;cell&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;selection&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;multiple&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;-&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:rows&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.list&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:rows&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;expandRows&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:expanded&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.expanded&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.selected&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:pagination&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.pagination&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:body&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;auto-width&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-checkbox&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;sm&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.selected&amp;#34;&lt;/span&gt; /&amp;gt;
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-btn&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;round&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xs&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#a6e22e&quot;&gt;:icon&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand ? &amp;#39;remove&amp;#39; : &amp;#39;add&amp;#39;&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;click&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand = !props.expand&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.row.children &amp;amp;&amp;amp; props.row.children.length &amp;gt; 0&amp;#34;&lt;/span&gt; /&amp;gt;
        {{ props.row.name }}
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;{{ props.row.desc }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-table&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 表格数据
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;ref&lt;/span&gt;({
    &lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;loading&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;,
    &lt;span style=&quot;color:#a6e22e&quot;&gt;pagination&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;sortBy&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;desc&amp;#39;&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;descending&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;rowsPerPage&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;rowsNumber&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;,
    }
})

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;expandRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;computed&lt;/span&gt;(() =&amp;gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;)
})
&lt;/pre&gt;
&lt;p&gt;
     这里提一嘴，&lt;code&gt;pagination.rowsPerPage&lt;/code&gt; 默认最好设置为0(不限制每页的数量, 但会由由后端控制返回的行数), 否则展开子数据后的数据会被放到第二页, 影响数据查看
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 动态计算展开后的数据
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; []
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; []
    &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;forEach&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt; =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;push&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;)
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;indexOf&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;) &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;) {
            &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;concat&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;))
        }
    })
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;
}
&lt;/pre&gt;
&lt;p&gt;
     注意，这里因为要递归计算多级子目录，所以不能直接在 &lt;code&gt;setup&lt;/code&gt; 上直接用 &lt;code&gt;const&lt;/code&gt; 定义
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 缩进：&lt;del&gt;目前缩进确实有些问题，其中一个解决办法是原始数据会带有 &lt;code&gt;parent_id&lt;/code&gt; 字段，可以通过判断 &lt;code&gt;parent_id&lt;/code&gt; 大于0时增加缩进&lt;/del&gt;
&lt;/p&gt;

&lt;p&gt;
     缩进的计算可以通过&lt;code&gt;makeRows&lt;/code&gt;函数在遍历时添加每行数据的层级
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;indent&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; []
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; []
    &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;forEach&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt; =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;_indent&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;indent&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;push&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;)
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;indexOf&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;) &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;) {
            &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;concat&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;indent&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;))
        }
    })
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;export&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;default&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;useTable&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;expandRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;computed&lt;/span&gt;(() =&amp;gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;, &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
    })
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;expandRows&lt;/span&gt;,
    }
}
&lt;/pre&gt;
&lt;p&gt;
     然后在表格中添加对应的偏移即可, 需要注意的是表格对齐方向需要设置为 &lt;code&gt;left&lt;/code&gt; (&lt;b&gt;默认值&lt;/b&gt;)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:body-cell-name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:style&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#39;padding-left:&amp;#39; + ((props.row._indent || 0) + 1) + &amp;#39;rem&amp;#39;&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-btn&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;round&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xs&amp;#34;&lt;/span&gt;
           &lt;span style=&quot;color:#a6e22e&quot;&gt;:icon&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand ? &amp;#39;remove&amp;#39; : &amp;#39;add&amp;#39;&amp;#34;&lt;/span&gt;
           &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;click&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand = !props.expand&amp;#34;&lt;/span&gt;
           &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.row.children &amp;amp;&amp;amp; props.row.children.length &amp;gt; 0&amp;#34;&lt;/span&gt; /&amp;gt;
    {{ props.row.name }}
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;最终实现&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/04/quasar-tree-table.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/04/quasar-tree-table.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;</content>
        <category term="Tech/Coding"></category>
    </entry>
    <entry xml:lang="zh">
      <title>flutter笔记之初体验</title>
      <link href="https://honmaple.me/articles/2021/06/flutter笔记之初体验.html" rel="alternate"></link>
      <published>Sat, 05 Jun 2021 22:58:01 +0000</published>
      <updated>Thu, 03 Oct 2024 00:00:39 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/06/flutter笔记之初体验.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/06/flutter笔记之初体验.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;h3 id=&quot;heading-1.1&quot;&gt;安装flutter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 首先下载flutter包, 解压到 &lt;code&gt;~/repo&lt;/code&gt; 目录,并配置 &lt;code&gt;~/.bashrc&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$PATH:$HOME/repo/flutter/bin&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;source ~/.bashrc&lt;/code&gt;使其生效
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
      注意：首次运行flutter，macos可能会提示无法打开dart，需要到 &lt;code&gt;系统偏好 -&amp;gt; 安全性与隐私&lt;/code&gt; 点击允许
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter --version
Flutter 2.2...&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;安装&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;安装flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;安装java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.3&quot;&gt;安装android sdk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;初体验&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;创建一个新的项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;配置android模拟器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;启动flutter项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;升级Flutter版本&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.1&quot;&gt;升级步骤&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.2&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;FAQ&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4.1&quot;&gt;启动项目报 &lt;code&gt;Operation timed out&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4.2&quot;&gt;Unable to locate Android SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;h3 id=&quot;heading-1.1&quot;&gt;安装flutter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 首先下载flutter包, 解压到 &lt;code&gt;~/repo&lt;/code&gt; 目录,并配置 &lt;code&gt;~/.bashrc&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$PATH:$HOME/repo/flutter/bin&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;source ~/.bashrc&lt;/code&gt;使其生效
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
      注意：首次运行flutter，macos可能会提示无法打开dart，需要到 &lt;code&gt;系统偏好 -&amp;gt; 安全性与隐私&lt;/code&gt; 点击允许
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter --version
Flutter 2.2.1 • channel stable • https://github.com/flutter/flutter.git
Framework • revision 02c026b03c (9 天前) • 2021-05-27 12:24:44 -0700
Engine • revision 0fdb562ac8
Tools • Dart 2.13.1&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第一步，禁用 &lt;b&gt;google analytics&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter config --no-analytics

  ╔════════════════════════════════════════════════════════════════════════════╗
  ║                 Welcome to Flutter! - https://flutter.dev                  ║
  ║                                                                            ║
  ║ The Flutter tool uses Google Analytics to anonymously report feature usage ║
  ║ statistics and basic crash reports. This data is used to help improve      ║
  ......
  ║ See Google&amp;#39;s privacy policy:                                               ║
  ║ https://policies.google.com/privacy                                        ║
  ╚════════════════════════════════════════════════════════════════════════════╝

Analytics reporting disabled.

You may need to restart any open editors for them to read new settings.&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第二步, 执行 &lt;code&gt;flutter doctor&lt;/code&gt; 检查依赖环境
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter doctor
Running &amp;#34;flutter pub get&amp;#34; in flutter_tools...                      10.6s
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 2.2.1, on macOS 11.3.1 20E241 darwin-x64, locale zh-Hans-CN)
[✗] Android toolchain - develop for Android devices
    ✗ Unable to locate Android SDK.
      Install Android Studio from: https://developer.android.com/studio/index.html
      On first launch it will assist you in installing the Android SDK components.
      (or visit https://flutter.dev/docs/get-started/install/macos#android-setup for detailed instructions).
      If the Android SDK has been installed to a custom location, please use
      `flutter config --android-sdk` to update to that location.

[✗] Xcode - develop for iOS and macOS
    ✗ Xcode installation is incomplete; a full installation is necessary for iOS development.
      Download at: https://developer.apple.com/xcode/download/
      Or install Xcode via the App Store.
      Once installed, run:
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
        sudo xcodebuild -runFirstLaunch
    ✗ CocoaPods not installed.
        CocoaPods is used to retrieve the iOS and macOS platform side&amp;#39;s plugin code that responds to your plugin usage on the Dart side.
        Without CocoaPods, plugins will not work on iOS or macOS.
        For more info, see https://flutter.dev/platform-plugins
      To install see https://guides.cocoapods.org/using/getting-started.html#installation for instructions.
[✓] Chrome - develop for the web
[!] Android Studio (not installed)
[✓] VS Code (version 1.56.2)
[✓] Connected device (1 available)

! Doctor found issues in 3 categories.&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-1.2&quot;&gt;安装java&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install openjdk@8&lt;/pre&gt;
&lt;p&gt;
      刚开始我安装的是 &lt;b&gt;openjdk@11&lt;/b&gt;, 但在启动 &lt;b&gt;sdkmanager&lt;/b&gt; 时会报
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ /usr/local/share/android-sdk/tools/bin/sdkmanager
Exception in thread &amp;#34;main&amp;#34; java.lang.NoClassDefFoundError: javax/xml/bind/annotation/XmlSchema
    at com.android.repository.api.SchemaModule$SchemaModuleVersion.&amp;lt;init&amp;gt;(SchemaModule.java:156)
    at com.android.repository.api.SchemaModule.&amp;lt;init&amp;gt;(SchemaModule.java:75)
    at com.android.sdklib.repository.AndroidSdkHandler.&amp;lt;clinit&amp;gt;(AndroidSdkHandler.java:81)
    at com.android.sdklib.tool.sdkmanager.SdkManagerCli.main(SdkManagerCli.java:73)
    at com.android.sdklib.tool.sdkmanager.SdkManagerCli.main(SdkManagerCli.java:48)
Caused by: java.lang.ClassNotFoundException: javax.xml.bind.annotation.XmlSchema
    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)&lt;/pre&gt;
&lt;p&gt;
      查找网上的资料，即使设置了 &lt;code&gt;JAVA_OPTS&lt;/code&gt;, 但还是有问题，所以我安装 &lt;code&gt;openjdk@8&lt;/code&gt; 而不是 &lt;code&gt;openjdk@11&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ export JAVA_OPTS=&amp;#39;-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee&amp;#39;
└──╼ /usr/local/share/android-sdk/tools/bin/sdkmanager
Error occurred during initialization of boot layer
java.lang.module.FindException: Module java.se.ee not found&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置环境变量
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export JAVA_HOME&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;/usr/local/opt/openjdk@8
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$JAVA_HOME/bin:$PATH&lt;/pre&gt;
&lt;p&gt;
      如果未设置 &lt;code&gt;JAVA_HOME&lt;/code&gt; 环境变量，后续执行 &lt;code&gt;flutter doctor&lt;/code&gt; 可能会报
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;The operation couldn’t be completed. Unable to locate a Java Runtime.
Please visit http://www.java.com for information on installing Java.&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-1.3&quot;&gt;安装android sdk&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装sdk
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install android-sdk&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 安装sdk组件
      首先执行 &lt;code&gt;sdkmanager --list&lt;/code&gt; 找到组件最新版本或者选择合适版本
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ sdkmanager platform-tools
└──╼ sdkmanager &amp;#39;platforms;android-29&amp;#39;
└──╼ sdkmanager &amp;#39;build-tools;31.0.0-rc4&amp;#39;
└──╼ sdkmanager --licenses&lt;/pre&gt;
&lt;p&gt;
      如果未执行 &lt;code&gt;sdkmanager --licenses&lt;/code&gt; 并同意相关协议，在执行 &lt;code&gt;flutter doctor&lt;/code&gt; 后可能会提示
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[!] Android toolchain - develop for Android devices (Android SDK version 31.0.0-rc4)
    ! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licenses&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置环境变量
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export ANDROID_SDK_ROOT&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;/usr/local/share/android-sdk
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools:$PATH&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;初体验&lt;/h2&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;创建一个新的项目&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter create myapp
└──╼ cd myapp&lt;/pre&gt;
&lt;p&gt;
    注意不要在 &lt;b&gt;flutter sdk&lt;/b&gt; 目录里创建项目
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Cannot create a project within the Flutter SDK. Target directory &amp;#39;$HOME/repo/flutter/src/myapp&amp;#39; is within the Flutter SDK at
&amp;#39;$HOME/repo/flutter&amp;#39;.&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;配置android模拟器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装模拟器
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ sdkmanager emulator
└──╼ sdkmanager &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;system-images;android-29;google_apis;x86_64&amp;#39;&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 创建新的android模拟器
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ avdmanager -s create avd -n testAndroid -k &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;system-images;android-29;google_apis;x86_64&amp;#34;&lt;/span&gt;
└──╼ avdmanager list avd&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.3&quot;&gt;启动flutter项目&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 启动模拟器
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter emulators
&lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt; available emulator:

testAndroid • testAndroid •  • android

To run an emulator, run &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;flutter emulators --launch &amp;lt;emulator id&amp;gt;&amp;#39;&lt;/span&gt;.
To create a new emulator, run &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;flutter emulators --create [--name xyz]&amp;#39;&lt;/span&gt;.

You can find more information on managing emulators at the links below:
https://developer.android.com/studio/run/managing-avds
https://developer.android.com/studio/command-line/avdmanager
└──╼ flutter emulators --launch testAndroid&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 查看可用驱动
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter devices
&lt;span style=&quot;color:#ae81ff&quot;&gt;2&lt;/span&gt; connected devices:

Android SDK built &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; x86 &lt;span style=&quot;color:#ae81ff&quot;&gt;64&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;mobile&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; • emulator-5554 • android-x64    • Android &lt;span style=&quot;color:#ae81ff&quot;&gt;10&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;API 29&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;emulator&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;
Chrome &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;web&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;                          • chrome        • web-javascript • Google Chrome 90.0.4430.212&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 启动项目
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter run -d emulator-5554&lt;/pre&gt;
&lt;p&gt;
      
&lt;a href=&quot;https://s.libforest.com/images/2021/06/first-flutter.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2021/06/first-flutter.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
      至此，我的第一个flutter应用体验完成。
      很久没学习新的技术，感觉自己都快落伍了，脑子也快生锈了，很早之前就打算自己写一个私人使用的 &lt;code&gt;app&lt;/code&gt;，但总抱着一招鲜吃遍天的想法，坚持着熟悉的 &lt;code&gt;vue web app&lt;/code&gt;, 而且还道听途说对 &lt;code&gt;flutter&lt;/code&gt; 有所怀疑，一直没实际体验过。虽然 &lt;code&gt;vue&lt;/code&gt; 足够简单，搭配 &lt;code&gt;cordova&lt;/code&gt; 也很方便，但毕竟属于 &lt;code&gt;web app&lt;/code&gt;，每种语言或者工具应该都有自己最擅长的领域，比如 &lt;code&gt;vue&lt;/code&gt; 之于 web，&lt;code&gt;flutter&lt;/code&gt; 至于 移动端app，最重要的是，现在技术更新迭代太快，你不学总有人学，学而不思则罔，思而不学则殆，不思不学只会被淘汰
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;升级Flutter版本&lt;/h2&gt;
&lt;h3 id=&quot;heading-3.1&quot;&gt;升级步骤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
  查看当前使用的版本
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter channel

Flutter channels:
master
dev
beta
* stable&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 选择版本(可选)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter channel stable&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 升级
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter upgrade&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-3.2&quot;&gt;FAQ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 Flutter目录有修改
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[   +8 ms] Your flutter checkout has local changes that would be erased by upgrading. If you want to keep these changes, it is recommended that you stash them via &amp;#34;git stash&amp;#34; or else commit the changes
to a local
           branch. If it is okay to remove local changes, then re-run this command with &amp;#34;--force&amp;#34;.
....&lt;/pre&gt;
&lt;p&gt;
       进入Flutter目录，使用 &lt;code&gt;git diff&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;──╼ git diff
diff --git a/packages/flutter_tools/gradle/flutter.gradle b/packages/flutter_tools/gradle/flutter.gradle
index 3db040b967..69db8a4873 100644
--- a/packages/flutter_tools/gradle/flutter.gradle
+++ b/packages/flutter_tools/gradle/flutter.gradle
@@ -24,8 +24,17 @@ import org.gradle.util.VersionNumber

 buildscript {
     repositories {
-        google()
-        jcenter()
+        // google()
+        // jcenter()
+        maven {
+            url &amp;#39;https://maven.aliyun.com/repository/jcenter&amp;#39;
+        }
+        maven {
+            url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public&amp;#39;
+        }
+        maven {
+            url &amp;#39;https://maven.aliyun.com/repository/google&amp;#39;
+        }
     }
     dependencies {
         classpath &amp;#39;com.android.tools.build:gradle:4.1.0&amp;#39;&lt;/pre&gt;

&lt;p&gt;
       使用&lt;code&gt;git reset --hard&lt;/code&gt; 重置修改，或者使用 &lt;code&gt;flutter upgrade --force&lt;/code&gt; 强制更新
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;FAQ&lt;/h2&gt;
&lt;h3 id=&quot;heading-4.1&quot;&gt;启动项目报 &lt;code&gt;Operation timed out&lt;/code&gt;&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Using hardware rendering with device Android SDK built for x86 64. If you notice graphics artifacts, consider enabling software rendering with
&amp;#34;--enable-software-rendering&amp;#34;.
Launching lib/main.dart on Android SDK built for x86 64 in debug mode...
Exception in thread &amp;#34;main&amp;#34; java.net.ConnectException: Operation timed out (Connection timed out)
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        ......
        at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:128)
        at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)
Running Gradle task &amp;#39;assembleDebug&amp;#39;...
Running Gradle task &amp;#39;assembleDebug&amp;#39;... Done                        76.2s
Exception: Gradle task assembleDebug failed with exit code 1&lt;/pre&gt;

&lt;p&gt;
    这是因为无法下载 &lt;code&gt;gradle&lt;/code&gt; 的包和依赖，需要科学上网或者修改为国内源
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 修改项目目录下的 &lt;code&gt;android/gradle/wrapper/gradle-wrapper.properties&lt;/code&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;- distributionUrl=https\://services.gradle.org/distributions/gradle-6.7-all.zip
+ distributionUrl=https\://mirrors.cloud.tencent.com/gradle/gradle-6.7-all.zip&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改项目目录下 &lt;code&gt;android/build.gradle&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;- google()
- jcenter()
+ maven { url &amp;#39;https://maven.aliyun.com/repository/google&amp;#39; }
+ maven { url &amp;#39;https://maven.aliyun.com/repository/jcenter&amp;#39; }
+ maven { url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public&amp;#39; }&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改 &lt;b&gt;flutter sdk&lt;/b&gt; 目录下 &lt;code&gt;packages/flutter_tools/gradle/flutter.gradle&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;buildscript {
     repositories {
!        // google()
!        // jcenter()
!        maven {
!            url &amp;#39;https://maven.aliyun.com/repository/jcenter&amp;#39;
!        }
!        maven {
!            url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public&amp;#39;
!        }
!        maven {
!            url &amp;#39;https://maven.aliyun.com/repository/google&amp;#39;
!        }
     }
     dependencies {
         classpath &amp;#39;com.android.tools.build:gradle:4.1.0&amp;#39;
     }
 }&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;heading-4.2&quot;&gt;Unable to locate Android SDK&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter doctor
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 3.3.4, on macOS 12.5 21G72 darwin-x64, locale zh-Hans-CN)
[✗] Android toolchain - develop for Android devices
    ✗ Unable to locate Android SDK.
      Install Android Studio from: https://developer.android.com/studio/index.html
      On first launch it will assist you in installing the Android SDK components.
      (or visit https://flutter.dev/docs/get-started/install/macos#android-setup for detailed instructions).
      If the Android SDK has been installed to a custom location, please use
      `flutter config --android-sdk` to update to that location.&lt;/pre&gt;
&lt;p&gt;
    解决:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ flutter config --android-sdk /usr/local/share/android-sdk
Setting &amp;#34;android-sdk&amp;#34; value to &amp;#34;/usr/local/share/android-sdk&amp;#34;.

You may need to restart any open editors for them to read new settings.&lt;/pre&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;参考文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://flutter.cn/docs/get-started/install/macos&quot;&gt;https://flutter.cn/docs/get-started/install/macos&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://blog.csdn.net/xiuxiuxiubiubiubiu/article/details/104918561&quot;&gt;https://blog.csdn.net/xiuxiuxiubiubiubiu/article/details/104918561&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://www.cnblogs.com/bluestorm/p/14761482.html&quot;&gt;https://www.cnblogs.com/bluestorm/p/14761482.html&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>python2升级至python3</title>
      <link href="https://honmaple.me/articles/2021/03/python2升级至python3.html" rel="alternate"></link>
      <published>Mon, 22 Mar 2021 16:35:34 +0000</published>
      <updated>Wed, 07 Jul 2021 17:56:51 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/03/python2升级至python3.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/03/python2升级至python3.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
首先使用工具 &lt;b&gt;2to3&lt;/b&gt; 转换
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;2to3 目录名 -w -n&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;print&lt;/h2&gt;
&lt;p&gt;
   &lt;a href=&quot;https://stackoverflow.com/questions/55559825/how-to-fix-print-double-parentheses-after-2to3-conversion&quot;&gt;https://stackoverflow.com/questions/55559825/how-to-fix-print-double-parentheses-after-2to3-conversion&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 问题:
     如果在python2项目里使用了python3的写法，比如在 &lt;b&gt;python2&lt;/b&gt; 里的 &lt;code&gt;print(&amp;#34;test&amp;#34;)&lt;/code&gt;, 使用 &lt;b&gt;2to3&lt;/b&gt; 就会转换成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;((&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;...&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;比值问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;编码问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4.1&quot;&gt;sys.setdefaultencoding(&amp;#39;utf-8&amp;#39;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4.2&quot;&gt;encode、decode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4.3&quot;&gt;编码转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;cmp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;sorted&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-7&quot;&gt;Exception&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-8&quot;&gt;SSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-9&quot;&gt;file.read&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-10&quot;&gt;redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-11&quot;&gt;requests&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-11.1&quot;&gt;自定义编码请求&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-11.1.1&quot;&gt;post json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-11.1.2&quot;&gt;post form&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-11.2&quot;&gt;响应编码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-11.3&quot;&gt;请求headers顺序&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-12&quot;&gt;django&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
首先使用工具 &lt;b&gt;2to3&lt;/b&gt; 转换
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;2to3 目录名 -w -n&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;print&lt;/h2&gt;
&lt;p&gt;
   &lt;a href=&quot;https://stackoverflow.com/questions/55559825/how-to-fix-print-double-parentheses-after-2to3-conversion&quot;&gt;https://stackoverflow.com/questions/55559825/how-to-fix-print-double-parentheses-after-2to3-conversion&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 问题:
     如果在python2项目里使用了python3的写法，比如在 &lt;b&gt;python2&lt;/b&gt; 里的 &lt;code&gt;print(&amp;#34;test&amp;#34;)&lt;/code&gt;, 使用 &lt;b&gt;2to3&lt;/b&gt; 就会转换成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;((&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;p&gt;
     所以需要找到 &lt;code&gt;print((&lt;/code&gt; 并修复该转换(其实不转也没什么问题)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;ag -Gpy &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;print((&amp;#39;&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修复:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- print((&amp;#34;test&amp;#34;))
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ print(&amp;#34;test&amp;#34;)
&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;string&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 问题1:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;module &amp;#39;string&amp;#39; has no attribute &amp;#39;letters&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修复:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- string.letters
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ string.ascii_letters
&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 问题2:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;#39;str&amp;#39; object has no attribute &amp;#39;decode&amp;#39;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修复:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- str.decode(xxx)
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ str.encode(xxx).decode(&amp;#39;unicode_escape&amp;#39;)
&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;比值问题&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;slice indices must be integers or None or have an __index__ method&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 问题:
     python2里 &lt;code&gt;3/2&lt;/code&gt; 返回的是整型 &lt;code&gt;1&lt;/code&gt;
     python3里 &lt;code&gt;3/2&lt;/code&gt; 返回的是浮点型 &lt;code&gt;1.5&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修复:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;print(3//2)
# 或者
print(int(3/2))&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;编码问题&lt;/h2&gt;
&lt;h3 id=&quot;heading-4.1&quot;&gt;sys.setdefaultencoding(&amp;#39;utf-8&amp;#39;)&lt;/h3&gt;
&lt;p&gt;
    python2里的 &lt;code&gt;sys.setdefaultencoding(&amp;#39;utf-8&amp;#39;)&lt;/code&gt; 需要删除
&lt;/p&gt;

&lt;h3 id=&quot;heading-4.2&quot;&gt;encode、decode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 问题:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;LookupError: &amp;#39;base64&amp;#39; is not a text encoding; use codecs.encode() to handle arbitrary codecs&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 语法:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 python2
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Python 2.7.16 (default, Dec 21 2020, 23:00:36)
[GCC Apple LLVM 12.0.0 (clang-1200.0.30.4) [+internal-os, ptrauth-isa=sign+stri on darwin
Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information.
&amp;gt;&amp;gt;&amp;gt; a = &amp;#34;a&amp;#34;
&amp;gt;&amp;gt;&amp;gt; a.encode(&amp;#34;base64&amp;#34;)
&amp;#39;YQ==\n&amp;#39;
&amp;gt;&amp;gt;&amp;gt; b = a.encode(&amp;#34;base64&amp;#34;)
&amp;gt;&amp;gt;&amp;gt; b.decode(&amp;#34;base64&amp;#34;)
&amp;#39;a&amp;#39;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 python3
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Python 3.7.4 (default, Sep  7 2020, 15:30:33)
[Clang 11.0.3 (clang-1103.0.32.29)] on darwin
Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information.
&amp;gt;&amp;gt;&amp;gt; a = &amp;#34;a&amp;#34;
&amp;gt;&amp;gt;&amp;gt; a.encode(&amp;#34;base64&amp;#34;)
Traceback (most recent call last):
  File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt;
LookupError: &amp;#39;base64&amp;#39; is not a text encoding; use codecs.encode() to handle arbitrary codecs&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修复:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; base64

&lt;span style=&quot;color:#66d9ef&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;b64encode&lt;/span&gt;(s):
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; isinstance(s, bytes):
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; base64&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;b64encode(s)
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; base64&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;b64encode(s&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;encode(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;utf-8&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;))&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;decode(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;utf-8&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&quot;color:#66d9ef&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;b64decode&lt;/span&gt;(s):
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; base64&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;b64decode(s)&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;decode(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;utf-8&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)&lt;/pre&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- x.encode(&amp;#39;base64&amp;#39;)
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- x.decode(&amp;#39;base64&amp;#39;)
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ b64encode(x)
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ b64decode(x)
&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-4.3&quot;&gt;编码转换&lt;/h3&gt;
&lt;p&gt;
    utf-8转换为gbk
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 python2
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;#39;hello世界&amp;#39;.decode(&amp;#39;utf-8&amp;#39;).encode(&amp;#39;gbk&amp;#39;)&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 python3
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;#39;&amp;#39;.join([chr(i) for i in &amp;#39;hello世界&amp;#39;.encode(&amp;#39;gbk&amp;#39;)])
# 或者
&amp;#39;hello世界&amp;#39;.encode(&amp;#39;gbk&amp;#39;).decode(&amp;#39;unicode_escape&amp;#39;)&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-5&quot;&gt;cmp&lt;/h2&gt;
&lt;p&gt;
   python3里cmp内置函数不再存在，需要自定义函数
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;cmp&lt;/span&gt;(a, b):
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; (a &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; b) &lt;span style=&quot;color:#f92672&quot;&gt;-&lt;/span&gt; (a &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt; b)&lt;/pre&gt;

&lt;h2 id=&quot;heading-6&quot;&gt;sorted&lt;/h2&gt;
&lt;p&gt;
   python2里sorted有一个cmp参数，python3里统一为key参数
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 python2
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;sorted(keys, &lt;span style=&quot;color:#66d9ef&quot;&gt;lambda&lt;/span&gt; x, y: cmp(len(x), len(y)), reverse&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;True)&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 python3
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;from&lt;/span&gt; functools &lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; cmp_to_key

sorted(keys, key&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;cmp_to_key(&lt;span style=&quot;color:#66d9ef&quot;&gt;lambda&lt;/span&gt; x, y: cmp(len(x), len(y))), reverse&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;True)&lt;/pre&gt;
&lt;p&gt;
     注意: &lt;code&gt;must use keyword argument for key function&lt;/code&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-7&quot;&gt;Exception&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 python3里没有 &lt;code&gt;.message&lt;/code&gt;, 所以需要修改 &lt;code&gt;e.message&lt;/code&gt; 为 &lt;code&gt;str(e)&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 python3无法使用 &lt;code&gt;as&lt;/code&gt; 直接对变量赋值
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;():
    err &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; None
    &lt;span style=&quot;color:#66d9ef&quot;&gt;try&lt;/span&gt;:
        &lt;span style=&quot;color:#66d9ef&quot;&gt;raise&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;ValueError&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;sss&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
    &lt;span style=&quot;color:#f92672&quot;&gt;-&lt;/span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;except&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;Exception&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;as&lt;/span&gt; err:
    &lt;span style=&quot;color:#f92672&quot;&gt;-&lt;/span&gt;       &lt;span style=&quot;color:#66d9ef&quot;&gt;pass&lt;/span&gt;
    &lt;span style=&quot;color:#f92672&quot;&gt;+&lt;/span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;except&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;Exception&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;as&lt;/span&gt; e:
    &lt;span style=&quot;color:#f92672&quot;&gt;+&lt;/span&gt;       err &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; e
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; err

&lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;(main())&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;UnboundLocalError: local variable &amp;#39;err&amp;#39; referenced before assignment&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-8&quot;&gt;SSL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 问题:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;File &amp;#34;/usr/local/lib/python3.6/dist-packages/OpenSSL/SSL.py&amp;#34;, line 1591, in set_tlsext_host_name
raise TypeError(&amp;#34;name must be a byte string&amp;#34;)&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 解决
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;- s.set_tlsext_host_name(hostname)
+ s.set_tlsext_host_name(hostname.encode(&amp;#39;utf-8&amp;#39;))&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-9&quot;&gt;file.read&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt; open(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;test.txt&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;rb&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;as&lt;/span&gt; f:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; i &lt;span style=&quot;color:#f92672&quot;&gt;in&lt;/span&gt; f&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;read(&lt;span style=&quot;color:#ae81ff&quot;&gt;10&lt;/span&gt;):
        &lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;(i, type(i))&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 python2
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(&amp;#39;\x7f&amp;#39;, &amp;lt;type &amp;#39;str&amp;#39;&amp;gt;)
(&amp;#39;E&amp;#39;, &amp;lt;type &amp;#39;str&amp;#39;&amp;gt;)
(&amp;#39;\x00&amp;#39;, &amp;lt;type &amp;#39;str&amp;#39;&amp;gt;)&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 python3
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;127 &amp;lt;class &amp;#39;int&amp;#39;&amp;gt;
69 &amp;lt;class &amp;#39;int&amp;#39;&amp;gt;
0 &amp;lt;class &amp;#39;int&amp;#39;&amp;gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;两者之间的转换&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;ord(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;\x7f&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;) &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;127&lt;/span&gt;
chr(&lt;span style=&quot;color:#ae81ff&quot;&gt;127&lt;/span&gt;) &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;\x7f&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-10&quot;&gt;redis&lt;/h2&gt;
&lt;p&gt;
   python3里默认取出的值是 &lt;code&gt;bytes&lt;/code&gt; 类型, 需要客户端添加 &lt;code&gt;decode_responses=True&lt;/code&gt; 参数, 取出的值才是 &lt;code&gt;str&lt;/code&gt; 类型
&lt;/p&gt;

&lt;h2 id=&quot;heading-11&quot;&gt;requests&lt;/h2&gt;
&lt;h3 id=&quot;heading-11.1&quot;&gt;自定义编码请求&lt;/h3&gt;
&lt;p&gt;
    &lt;a href=&quot;https://github.com/psf/requests/issues/4133&quot;&gt;https://github.com/psf/requests/issues/4133&lt;/a&gt;
&lt;/p&gt;
&lt;h4 id=&quot;heading-11.1.1&quot;&gt;post json&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 python2
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;data &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;hello世界&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;decode(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;utf-8&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;encode(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;gbk&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)}
headers &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Content-Type&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;application/json;charset=gbk&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;}
data&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;json&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;dumps(data,ensure_ascii&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;False)
rsp &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; requests&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;post(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;/dynamic/test&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;, data&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;data,headers&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;headers)&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 python3
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;data &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;hello世界&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;}
headers &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Content-Type&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;application/json;charset=gbk&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;}
data&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;json&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;dumps(data, ensure_ascii&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;False)
resp &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; requests&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;post(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;/dynamic/test&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;, data&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;data&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;encode(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;gbk&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;), headers&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;headers)&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;heading-11.1.2&quot;&gt;post form&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 python2
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;data &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;hello世界&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;decode(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;utf-8&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;encode(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;gbk&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)}
headers &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Content-Type&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;application/x-www-form-urlencoded;charset=gbk&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;}
resp &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; requests&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;post(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;/dynamic/test&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;, data&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;data,headers&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;headers)&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 python3
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;data &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;hello世界&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;encode(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;gbk&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)}
headers &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Content-Type&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;application/x-www-form-urlencoded;charset=gbk&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;}
resp &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; requests&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;post(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;/dynamic/test&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;, data&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;data,headers&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;headers)&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-11.2&quot;&gt;响应编码&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;resp &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; requests&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;get(&lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
&lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;(type(resp&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;content))
&lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;(type(resp&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;text))&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 python2
      &lt;code&gt;resp.content&lt;/code&gt; 是 &lt;code&gt;str&lt;/code&gt; 类型, &lt;code&gt;resp.text&lt;/code&gt; 是 &lt;code&gt;unicode&lt;/code&gt; 类型
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 python3
      &lt;code&gt;resp.content&lt;/code&gt; 是 &lt;code&gt;bytes&lt;/code&gt; 类型, &lt;code&gt;resp.text&lt;/code&gt; 是 &lt;code&gt;str&lt;/code&gt; 类型
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-11.3&quot;&gt;请求headers顺序&lt;/h3&gt;
&lt;p&gt;
    根源主要在 &lt;code&gt;requests.structures&lt;/code&gt; 的 &lt;code&gt;CaseInsensitiveDict&lt;/code&gt; 类
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;from&lt;/span&gt; requests.structures &lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; CaseInsensitiveDict
&lt;span style=&quot;color:#f92672&quot;&gt;from&lt;/span&gt; collections &lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; OrderedDict

headers &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {
    &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Accept-Language&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en-US,en;q=0.8,zh-CN;q=0.6,zh;q=0.4&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
    &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Accept-Encoding&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;gzip, deflate, sdch&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
    &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;cache&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;,
    &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;host&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Host1.com&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
    &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Accept&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
    &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;User-Agent&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;curl/7.29.0&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
    &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Host&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Host2.com&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
}
&lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;(headers)

r &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; CaseInsensitiveDict()
r&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;update(headers)
&lt;span style=&quot;color:#66d9ef&quot;&gt;print&lt;/span&gt;(r)&lt;/pre&gt;

&lt;p&gt;
    不同的python版本结果会输出
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 python2
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;OrderedDict([(&amp;#39;Accept-Language&amp;#39;, &amp;#39;en-US,en;q=0.8,zh-CN;q=0.6,zh;q=0.4&amp;#39;), (&amp;#39;Accept-Encoding&amp;#39;, &amp;#39;gzip, deflate, sdch&amp;#39;), (&amp;#39;cache&amp;#39;, 0), (&amp;#39;Host&amp;#39;, &amp;#39;Host2.com&amp;#39;), (&amp;#39;Accept&amp;#39;, &amp;#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&amp;#39;), (&amp;#39;User-Agent&amp;#39;, &amp;#39;curl/7.29.0&amp;#39;), (&amp;#39;host&amp;#39;, &amp;#39;Host1.com&amp;#39;)])
CaseInsensitiveDict({&amp;#39;Accept-Language&amp;#39;: &amp;#39;en-US,en;q=0.8,zh-CN;q=0.6,zh;q=0.4&amp;#39;, &amp;#39;Accept-Encoding&amp;#39;: &amp;#39;gzip, deflate, sdch&amp;#39;, &amp;#39;cache&amp;#39;: 0, &amp;#39;Accept&amp;#39;: &amp;#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&amp;#39;, &amp;#39;User-Agent&amp;#39;: &amp;#39;curl/7.29.0&amp;#39;, &amp;#39;host&amp;#39;: &amp;#39;Host1.com&amp;#39;})&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 python3
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;OrderedDict([(&amp;#39;Accept-Language&amp;#39;, &amp;#39;en-US,en;q=0.8,zh-CN;q=0.6,zh;q=0.4&amp;#39;), (&amp;#39;Accept-Encoding&amp;#39;, &amp;#39;gzip, deflate, sdch&amp;#39;), (&amp;#39;cache&amp;#39;, 0), (&amp;#39;host&amp;#39;, &amp;#39;Host1.com&amp;#39;), (&amp;#39;Accept&amp;#39;, &amp;#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&amp;#39;), (&amp;#39;User-Agent&amp;#39;, &amp;#39;curl/7.29.0&amp;#39;), (&amp;#39;Host&amp;#39;, &amp;#39;Host2.com&amp;#39;)])
{&amp;#39;Accept-Language&amp;#39;: &amp;#39;en-US,en;q=0.8,zh-CN;q=0.6,zh;q=0.4&amp;#39;, &amp;#39;Accept-Encoding&amp;#39;: &amp;#39;gzip, deflate, sdch&amp;#39;, &amp;#39;cache&amp;#39;: 0, &amp;#39;Host&amp;#39;: &amp;#39;Host2.com&amp;#39;, &amp;#39;Accept&amp;#39;: &amp;#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&amp;#39;, &amp;#39;User-Agent&amp;#39;: &amp;#39;curl/7.29.0&amp;#39;}&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    所以如果要兼容两个版本，需要显示的传入
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;headers &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; OrderedDict(sorted(headers&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;items(), key&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;lambda&lt;/span&gt; x: x[&lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;]))&lt;/pre&gt;

&lt;h2 id=&quot;heading-12&quot;&gt;django&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- for k, v in request.GET.iterlists():
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ for k, v in request.GET.lists():
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;
   并且k和v的类型在python3里默认为 &lt;code&gt;str&lt;/code&gt; ， 不需要使用 &lt;code&gt;k.encode(&amp;#34;utf-8&amp;#34;)&lt;/code&gt; 进行转换
&lt;/p&gt;</content>
        <category term="Tech/Coding/Python"></category>
    </entry>
    <entry xml:lang="zh">
      <title>pyenv笔记</title>
      <link href="https://honmaple.me/articles/2021/03/pyenv笔记.html" rel="alternate"></link>
      <published>Thu, 18 Mar 2021 15:29:39 +0000</published>
      <updated>Thu, 18 Mar 2021 15:35:51 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/03/pyenv笔记.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/03/pyenv笔记.html</id>
      <summary type="html">
&lt;h1 id=&quot;heading-1&quot;&gt;常见问题&lt;/h1&gt;

&lt;h2 id=&quot;heading-1.1&quot;&gt;pyenv install 3.6.7 失败&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 环境: macOs big Sur 11.2.2
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 pyenv: 1.2.23
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;heading-1.1.1&quot;&gt;相关日志&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;┌─[jianglin]─[~/repo/golang/src/alarm](master)
└──╼ pyenv install 3.6.7
python-build...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;常见问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;pyenv install 3.6.7 失败&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1.1&quot;&gt;相关日志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1.2&quot;&gt;解决方式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1.3&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;常见问题&lt;/h1&gt;

&lt;h2 id=&quot;heading-1.1&quot;&gt;pyenv install 3.6.7 失败&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 环境: macOs big Sur 11.2.2
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 pyenv: 1.2.23
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;heading-1.1.1&quot;&gt;相关日志&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;┌─[jianglin]─[~/repo/golang/src/alarm](master)
└──╼ pyenv install 3.6.7
python-build: use openssl@1.1 from homebrew
python-build: use readline from homebrew
Installing Python-3.6.7...
python-build: use readline from homebrew
python-build: use zlib from xcode sdk

BUILD FAILED (OS X 11.2.2 using python-build 20180424)

Inspect or clean up the working tree at /var/folders/44/hnrgfyfn0fsb8lqwk_0h2jvm0000gn/T/python-build.20210318151243.78376
Results logged to /var/folders/44/hnrgfyfn0fsb8lqwk_0h2jvm0000gn/T/python-build.20210318151243.78376.log

Last 10 log lines:
        ret = sendfile(in, out, offset, &amp;amp;sbytes, &amp;amp;sf, flags);
              ^
./Modules/posixmodule.c:10433:5: warning: code will never be executed [-Wunreachable-code]
    Py_FatalError(&amp;#34;abort() called from Python code didn&amp;#39;t abort!&amp;#34;);
    ^~~~~~~~~~~~~
clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include   -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include   -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes   -I. -I./Include -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/usr/local/opt/openssl@1.1/include -I/Users/jianglin/repo/python/pyenv/versions/3.6.7/include  -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/usr/local/opt/openssl@1.1/include -I/Users/jianglin/repo/python/pyenv/versions/3.6.7/include   -DPy_BUILD_CORE  -c ./Modules/pwdmodule.c -o Modules/pwdmodule.o
1 warning and 1 error generated.
make: *** [Modules/posixmodule.o] Error 1
make: *** Waiting for unfinished jobs....
1 warning generated.
┌─[jianglin]─[~/repo/golang/src/alarm](master)
└──╼  pyenv install --patch 3.6.7 &amp;lt; &amp;lt;(curl -sSL https://github.com/python/cpython/commit/8ea6353.patch\?full_index\=1)
python-build: use openssl@1.1 from homebrew
python-build: use readline from homebrew
Installing Python-3.6.7...
curl: (28) Operation timed out after 300188 milliseconds with 0 out of 0 bytes received
python-build: use readline from homebrew
python-build: use zlib from xcode sdk

BUILD FAILED (OS X 11.2.2 using python-build 20180424)

Inspect or clean up the working tree at /var/folders/44/hnrgfyfn0fsb8lqwk_0h2jvm0000gn/T/python-build.20210318151644.86904
Results logged to /var/folders/44/hnrgfyfn0fsb8lqwk_0h2jvm0000gn/T/python-build.20210318151644.86904.log

Last 10 log lines:
./Modules/posixmodule.c:8211:15: error: implicit declaration of function &amp;#39;sendfile&amp;#39; is invalid in C99 [-Werror,-Wimplicit-function-declaration]
        ret = sendfile(in, out, offset, &amp;amp;sbytes, &amp;amp;sf, flags);
              ^
./Modules/posixmodule.c:10433:5: warning: code will never be executed [-Wunreachable-code]
    Py_FatalError(&amp;#34;abort() called from Python code didn&amp;#39;t abort!&amp;#34;);
    ^~~~~~~~~~~~~
1 warning and 1 error generated.
make: *** [Modules/posixmodule.o] Error 1
make: *** Waiting for unfinished jobs....
1 warning generated.&lt;/pre&gt;

&lt;h3 id=&quot;heading-1.1.2&quot;&gt;解决方式&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;┌─&lt;span style=&quot;color:#f92672&quot;&gt;[&lt;/span&gt;jianglin&lt;span style=&quot;color:#f92672&quot;&gt;]&lt;/span&gt;─&lt;span style=&quot;color:#f92672&quot;&gt;[&lt;/span&gt;~/repo/golang/src/alarm&lt;span style=&quot;color:#f92672&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;master&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;
└──╼ CFLAGS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;-Wno-implicit-function-declaration  pyenv install --patch 3.6.7 &amp;lt; &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;curl -sSL https://github.com/python/cpython/commit/8ea6353.patch&lt;span style=&quot;color:#ae81ff&quot;&gt;\?&lt;/span&gt;full_index&lt;span style=&quot;color:#ae81ff&quot;&gt;\=&lt;/span&gt;1&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;
python-build: use openssl@1.1 from homebrew
python-build: use readline from homebrew
Installing Python-3.6.7...
curl: &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;7&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; Failed to connect to github.com port 443: Operation timed out
python-build: use readline from homebrew
python-build: use zlib from xcode sdk
Installed Python-3.6.7 to /Users/jianglin/repo/python/pyenv/versions/3.6.7&lt;/pre&gt;

&lt;h3 id=&quot;heading-1.1.3&quot;&gt;参考文档&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://github.com/pyenv/pyenv/issues/1737&quot;&gt;https://github.com/pyenv/pyenv/issues/1737&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://github.com/pyenv/pyenv/issues/1643&quot;&gt;https://github.com/pyenv/pyenv/issues/1643&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Tech/Coding/Python"></category>
    </entry>
    <entry xml:lang="zh">
      <title>golang笔记之struct转map性能比较</title>
      <link href="https://honmaple.me/articles/2020/09/golang笔记之struct转map性能比较.html" rel="alternate"></link>
      <published>Mon, 21 Sep 2020 11:38:24 +0000</published>
      <updated>Wed, 03 Apr 2024 12:54:14 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2020/09/golang笔记之struct转map性能比较.html" type="text/html"/>
      <id>https://honmaple.me/articles/2020/09/golang笔记之struct转map性能比较.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;测试代码&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;encoding/json&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;reflect&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;testing&amp;#34;&lt;/span&gt;
)

&lt;span style=&quot;color:#66d9ef&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;A&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;struct&lt;/span&gt; {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;A&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;   &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;json:&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;B&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;   &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;json:&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;C&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;int&lt;/span&gt;      &lt;span style=&quot;color:#e6db74&quot;&gt;`...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;测试代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;测试结果&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;测试代码&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;encoding/json&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;reflect&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;testing&amp;#34;&lt;/span&gt;
)

&lt;span style=&quot;color:#66d9ef&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;A&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;struct&lt;/span&gt; {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;A&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;   &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;json:&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;B&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;   &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;json:&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;C&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;int&lt;/span&gt;      &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;json:&amp;#34;c&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;D&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;int&lt;/span&gt;      &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;json:&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;E&lt;/span&gt; []&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;json:&amp;#34;e&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;F&lt;/span&gt; []&lt;span style=&quot;color:#66d9ef&quot;&gt;int&lt;/span&gt;    &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;json:&amp;#34;f&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;A&lt;/span&gt;{
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;,
    &lt;span style=&quot;color:#ae81ff&quot;&gt;15&lt;/span&gt;,
    &lt;span style=&quot;color:#ae81ff&quot;&gt;1024&lt;/span&gt;,
    []&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;{&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;vvv&amp;#34;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;ssss&amp;#34;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;44444&amp;#34;&lt;/span&gt;},
    []&lt;span style=&quot;color:#66d9ef&quot;&gt;int&lt;/span&gt;{&lt;span style=&quot;color:#ae81ff&quot;&gt;100&lt;/span&gt;, &lt;span style=&quot;color:#ae81ff&quot;&gt;4012&lt;/span&gt;},
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;Struct2Map&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;interface&lt;/span&gt;{}) &lt;span style=&quot;color:#66d9ef&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#66d9ef&quot;&gt;interface&lt;/span&gt;{} {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;v&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;reflect&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;ValueOf&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;)
    &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Kind&lt;/span&gt;() &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;reflect&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Ptr&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;v&lt;/span&gt; = &lt;span style=&quot;color:#a6e22e&quot;&gt;v&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Elem&lt;/span&gt;()
    }
    &lt;span style=&quot;color:#a6e22e&quot;&gt;t&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Type&lt;/span&gt;()

    &lt;span style=&quot;color:#a6e22e&quot;&gt;res&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; make(&lt;span style=&quot;color:#66d9ef&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#66d9ef&quot;&gt;interface&lt;/span&gt;{})
    &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;; &lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt; &amp;lt; &lt;span style=&quot;color:#a6e22e&quot;&gt;t&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;NumField&lt;/span&gt;(); &lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;++&lt;/span&gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;tag&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;t&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Field&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt;).&lt;span style=&quot;color:#a6e22e&quot;&gt;Tag&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Get&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;json&amp;#34;&lt;/span&gt;); &lt;span style=&quot;color:#a6e22e&quot;&gt;tag&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;tag&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;-&amp;#34;&lt;/span&gt; {
            &lt;span style=&quot;color:#a6e22e&quot;&gt;res&lt;/span&gt;[&lt;span style=&quot;color:#a6e22e&quot;&gt;tag&lt;/span&gt;] = &lt;span style=&quot;color:#a6e22e&quot;&gt;v&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Field&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt;).&lt;span style=&quot;color:#a6e22e&quot;&gt;Interface&lt;/span&gt;()
        }
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;res&lt;/span&gt;
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;Struct2MapByJson&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;interface&lt;/span&gt;{}) &lt;span style=&quot;color:#66d9ef&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#66d9ef&quot;&gt;interface&lt;/span&gt;{} {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;bs&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;json&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Marshal&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;)
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; {

    }

    &lt;span style=&quot;color:#a6e22e&quot;&gt;res&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; make(&lt;span style=&quot;color:#66d9ef&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#66d9ef&quot;&gt;interface&lt;/span&gt;{})
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;json&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Unmarshal&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;bs&lt;/span&gt;, &lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;res&lt;/span&gt;); &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; {

    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;res&lt;/span&gt;
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;Benchmark_Json2Map&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;b&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;testing&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;B&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;; &lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt; &amp;lt; &lt;span style=&quot;color:#a6e22e&quot;&gt;b&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;N&lt;/span&gt;; &lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;++&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;Struct2MapByJson&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;a&lt;/span&gt;)
    }
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;Benchmark_Reflect2Map&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;b&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;testing&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;B&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;; &lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt; &amp;lt; &lt;span style=&quot;color:#a6e22e&quot;&gt;b&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;N&lt;/span&gt;; &lt;span style=&quot;color:#a6e22e&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;++&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;Struct2Map&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;a&lt;/span&gt;)
    }
}&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;测试结果&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ go test -test.bench=&amp;#34;.*&amp;#34; .
goos: darwin
goarch: amd64
pkg: maple-test1
Benchmark_Json2Map-8          241076          4672 ns/op
Benchmark_Reflect2Map-8      1000000          1005 ns/op
PASS
ok      maple-test1	2.971s&lt;/pre&gt;</content>
        <category term="Tech/Coding/Go"></category>
    </entry>
    <entry xml:lang="zh">
      <title>rust笔记</title>
      <link href="https://honmaple.me/articles/2020/09/rust笔记.html" rel="alternate"></link>
      <published>Tue, 08 Sep 2020 17:10:53 +0000</published>
      <updated>Wed, 21 Aug 2024 15:50:33 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2020/09/rust笔记.html" type="text/html"/>
      <id>https://honmaple.me/articles/2020/09/rust笔记.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install rustup
└──╼ rustup-init
......
1&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; Proceed with installation &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;default&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;
2&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; Customize installation
3&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; Cancel installation
&amp;gt;1&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置 &lt;b&gt;rust&lt;/b&gt; 目录
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ mkdir $HOME/repo/rust
└──╼ mv $HOME/.rustup $HOME/repo...&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;更新&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;交叉编译&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 安装
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install rustup
└──╼ rustup-init
......
1&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; Proceed with installation &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;default&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;
2&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; Customize installation
3&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; Cancel installation
&amp;gt;1&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置 &lt;b&gt;rust&lt;/b&gt; 目录
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ mkdir $HOME/repo/rust
└──╼ mv $HOME/.rustup $HOME/repo/rust/rustup
└──╼ mv $HOME/.cargo $HOME/repo/rust/cargo&lt;/pre&gt;

&lt;p&gt;
     写入 &lt;b&gt;.bashrc&lt;/b&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export RUSTUP_HOME&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/rust/rustup
export CARGO_HOME&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/rust/cargo
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$PATH:$HOME/repo/rust/cargo/bin&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 验证
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ source .bashrc
└──╼ cargo --version
cargo 1.46.0 &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;149022b1d 2020-07-17&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;更新&lt;/h2&gt;
&lt;p&gt;
   最近在测试时发现无法安装 &lt;b&gt;tauri-app&lt;/b&gt;, 需要更新 &lt;b&gt;cargo&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Caused by:
  failed to parse the `edition` key

Caused by:
  this version of Cargo is older than the `2021` edition, and only supports `2015` and `2018` editions.&lt;/pre&gt;

&lt;p&gt;
   解决方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ rustc --version
rustc 1.46.0 (04488afe3 2020-08-24)
└──╼ rustup update stable
...
└──╼ rustc --version
rustc 1.64.0 (a55dd71d5 2022-09-19)&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;交叉编译&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://www.qttc.net/529-rust-cross-compile-mac-to-linux.html&quot;&gt;https://www.qttc.net/529-rust-cross-compile-mac-to-linux.html&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://moevis.github.io/cheatsheet/2018/08/18/%E8%B6%85%E6%96%B9%E4%BE%BF%E7%9A%84-Rust-%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91.html&quot;&gt;https://moevis.github.io/cheatsheet/2018/08/18/%E8%B6%85%E6%96%B9%E4%BE%BF%E7%9A%84-Rust-%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91.html&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install FiloSottile/musl-cross/musl-cross
rustup target add x86_64-unknown-linux-musl&lt;/pre&gt;

&lt;p&gt;
   添加配置 &lt;code&gt;$CARGO_HOME/config.toml&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[target.x86_64-unknown-linux-musl]
linker = &amp;#34;x86_64-linux-musl-gcc&amp;#34;&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;cargo build --target&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;x86_64-unknown-linux-musl&lt;/pre&gt;</content>
        <category term="Tech/Coding/Rust"></category>
    </entry>
</feed>