<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
  <title>紅楓吟 - Security</title>
    <subtitle>风落花语风落天，花落风雨花落田.</subtitle>
  <link href="https://honmaple.me/categories/security/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://honmaple.me"/>
  <generator uri="https://github.com/honmaple/snow">Snow</generator>
    <updated>Tue, 21 Jun 2016 00:00:00 +0000</updated>
  <id>https://honmaple.me</id>
    <entry xml:lang="zh">
      <title>黑客丛林之旅</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 21 Jun 2016 00:00:00 +0000</published>
      <updated>Tue, 21 Jun 2016 00:00:00 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2016/06/黑客丛林之旅.html" type="text/html"/>
      <id>https://honmaple.me/articles/2016/06/黑客丛林之旅.html</id>
      <summary type="html">
&lt;p&gt;
无意间看到，试了一下,结果&lt;a href=&quot;http://www.fj543.com/hack/&quot;&gt;http://www.fj543.com/hack/&lt;/a&gt;
&lt;/p&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;第一关&lt;/h1&gt;
&lt;p&gt;
  没什么好说的,查看源码
&lt;/p&gt;

&lt;p&gt;
  
&lt;a href=&quot;https://static.honmaple.com/images/2018/08/one_2016-06-21_21-59-19.png?type=show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://static.honmaple.com/images/2018/08/one_2016-06-21_21-59-19.png?type=thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h1 id=&quot;heading-2&quot;&gt;第二关&lt;/h1&gt;
&lt;p&gt;
  还是查看源码,结果发现
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;onSubmit=&amp;#34;return chkPassword()&amp;#34;&lt;/pre&gt;
&lt;p&gt;
  Ok,f12进入 &lt;b&gt;console&lt;/b&gt;,输入
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;chkPassword&lt;/span&gt;(){
&lt;span style=&quot;color:#a6e22e&quot;&gt;alert&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;adas&amp;#39;&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;p&gt;
  覆盖原有js
&lt;/p&gt;

&lt;h1 id=&quot;heading-3&quot;&gt;第三关&lt;/h1&gt;
&lt;p&gt;
  这关我也没想到，后来百度之，原来是cookie的原因
&lt;/p&gt;

&lt;p&gt;
  还是进 &lt;b&gt;console...&lt;/b&gt;&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;第一关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;第二关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;第三关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;第四关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;第五关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;第六关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-7&quot;&gt;第七关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-8&quot;&gt;第八关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-9&quot;&gt;第九关&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-9.1&quot;&gt;修改 &lt;b&gt;user-agent&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-10&quot;&gt;第十关&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;
无意间看到，试了一下,结果&lt;a href=&quot;http://www.fj543.com/hack/&quot;&gt;http://www.fj543.com/hack/&lt;/a&gt;
&lt;/p&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;第一关&lt;/h1&gt;
&lt;p&gt;
  没什么好说的,查看源码
&lt;/p&gt;

&lt;p&gt;
  
&lt;a href=&quot;https://static.honmaple.com/images/2018/08/one_2016-06-21_21-59-19.png?type=show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://static.honmaple.com/images/2018/08/one_2016-06-21_21-59-19.png?type=thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h1 id=&quot;heading-2&quot;&gt;第二关&lt;/h1&gt;
&lt;p&gt;
  还是查看源码,结果发现
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;onSubmit=&amp;#34;return chkPassword()&amp;#34;&lt;/pre&gt;
&lt;p&gt;
  Ok,f12进入 &lt;b&gt;console&lt;/b&gt;,输入
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;chkPassword&lt;/span&gt;(){
&lt;span style=&quot;color:#a6e22e&quot;&gt;alert&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;adas&amp;#39;&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;p&gt;
  覆盖原有js
&lt;/p&gt;

&lt;h1 id=&quot;heading-3&quot;&gt;第三关&lt;/h1&gt;
&lt;p&gt;
  这关我也没想到，后来百度之，原来是cookie的原因
&lt;/p&gt;

&lt;p&gt;
  还是进 &lt;b&gt;console&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;document.&lt;span style=&quot;color:#a6e22e&quot;&gt;cookie&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;login=yes&amp;#34;&lt;/span&gt;
&lt;/pre&gt;

&lt;h1 id=&quot;heading-4&quot;&gt;第四关&lt;/h1&gt;
&lt;p&gt;
  
&lt;a href=&quot;https://static.honmaple.com/images/2018/08/fourth_2016-06-21_22-01-37.png?type=show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://static.honmaple.com/images/2018/08/fourth_2016-06-21_22-01-37.png?type=thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
  看到这里是不是很熟悉，摩尔斯密码,google一下
  对应的密码就是 &lt;b&gt;iamok&lt;/b&gt;
&lt;/p&gt;

&lt;h1 id=&quot;heading-5&quot;&gt;第五关&lt;/h1&gt;
&lt;p&gt;
  根据提示,密文为成 &lt;b&gt;YmFzZTY0aXNvaw==&lt;/b&gt; 或 &lt;b&gt;ad93c1d102ae60f4&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
  第一个很熟悉为base64加密,第二个为md5加密,解密后的密文为
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;    └──╼ base64 -d
YmFzZTY0aXNvaw&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;
&lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;C-D&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt;base64isok&lt;/pre&gt;

&lt;h1 id=&quot;heading-6&quot;&gt;第六关&lt;/h1&gt;
&lt;p&gt;
  what?这是什么,实在是想不出来,百度一下, 原来
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;password = sum(port)&lt;/pre&gt;
&lt;p&gt;
  密码为各数据库port之和
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;password = MSSQL(1433)+MySQL(3306)+Oracle(1521) = 6260&lt;/pre&gt;

&lt;h1 id=&quot;heading-7&quot;&gt;第七关&lt;/h1&gt;
&lt;p&gt;
  
&lt;a href=&quot;https://static.honmaple.com/images/2018/08/seven_2016-06-21_22-03-39.png?type=show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://static.honmaple.com/images/2018/08/seven_2016-06-21_22-03-39.png?type=thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  很明显,考察的是对图片的处理,但是我不会,不会，会....
&lt;/p&gt;

&lt;p&gt;
  文本打开,拉到最后面你会发现“爸鼻我们去哪儿”(vim打开乱码,emacs打开还是图片,C-c C-c转换后乱码)
  feh打开，发现&amp;#34;8b&amp;#34;
  OK,key应该就是 &lt;b&gt;8bwmqne&lt;/b&gt;
  （待会儿试试将emacs的编码转成windows的）
&lt;/p&gt;

&lt;h1 id=&quot;heading-8&quot;&gt;第八关&lt;/h1&gt;
&lt;p&gt;
  社工,百度
&lt;/p&gt;

&lt;p&gt;
  其实只要右上角，查看作者介绍就能知道
  吴世昌的弟弟叫吴其昌,网名 &lt;b&gt;fj573&lt;/b&gt;
&lt;/p&gt;

&lt;h1 id=&quot;heading-9&quot;&gt;第九关&lt;/h1&gt;
&lt;p&gt;
  &lt;b&gt;提示语&lt;/b&gt; ：使用IE 5.43版本的浏览器访问?level=9token可以得到令牌。(Use IE 5.43 version to browse ?level=9token)
&lt;/p&gt;

&lt;p&gt;
  直接访问 &lt;a href=&quot;http://www.fj543.com/hack/?level=9token&quot;&gt;http://www.fj543.com/hack/?level=9token&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  得到提示:您的浏览器不是IE 5.43版本！(Your browser is not IE 5.43)
  OK，知道了，这关考察 &lt;b&gt;user-agent&lt;/b&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-9.1&quot;&gt;修改 &lt;b&gt;user-agent&lt;/b&gt;&lt;/h2&gt;
&lt;p&gt;
   f12，关闭按钮旁边 &lt;b&gt;More tools&lt;/b&gt; 选择 &lt;b&gt;Network conditions&lt;/b&gt;
   选择IE7,将MSIE 7.0改成MSIE 5.43.
   注意:直接点击无法复制,选择Nerwork,刷新后随意点一个查看 &lt;b&gt;Headers&lt;/b&gt;
&lt;/p&gt;

&lt;h1 id=&quot;heading-10&quot;&gt;第十关&lt;/h1&gt;
&lt;p&gt;
  需要下载运行文件，算了
&lt;/p&gt;</content>
        <category term="Security"></category>
    </entry>
    <entry xml:lang="zh">
      <title>培根密码</title>
      <link href="" rel="alternate"></link>
      <published>Mon, 30 May 2016 00:00:00 +0000</published>
      <updated>Mon, 30 May 2016 00:00:00 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2016/05/培根密码.html" type="text/html"/>
      <id>https://honmaple.me/articles/2016/05/培根密码.html</id>
      <summary type="html">&lt;p&gt;第一种方式&lt;br&gt;
A aaaaa
B aaaab
C aaaba&lt;br&gt;
D aaabb
E aabaa
F aabab&lt;br&gt;
G aabba
H aabbb
I abaaa&lt;br&gt;
J abaab
K ababa
L ababb&lt;br&gt;
M abbaa
N abbab
O abbba&lt;br&gt;
P abbbb
Q baaaa
R...&lt;/p&gt;</summary>
      <content type="html">&lt;p&gt;第一种方式&lt;br&gt;
A aaaaa
B aaaab
C aaaba&lt;br&gt;
D aaabb
E aabaa
F aabab&lt;br&gt;
G aabba
H aabbb
I abaaa&lt;br&gt;
J abaab
K ababa
L ababb&lt;br&gt;
M abbaa
N abbab
O abbba&lt;br&gt;
P abbbb
Q baaaa
R baaab&lt;br&gt;
S baaba
T baabb
U babaa&lt;br&gt;
V babab
W babba
X babbb&lt;br&gt;
Y bbaaa
Z bbaab&lt;/p&gt;

&lt;p&gt;第二种方式&lt;br&gt;
a AAAAA g AABBA n ABBAA t BAABA&lt;br&gt;
b AAAAB h AABBB o ABBAB u-v BAABB&lt;br&gt;
c AAABA i-j ABAAA p ABBBA w BABAA&lt;br&gt;
d AAABB k ABAAB q ABBBB x BABAB&lt;br&gt;
e AABAA l ABABA r BAAAA y BABBA&lt;br&gt;
f AABAB m ABABB s BAAAB z BABBB&lt;/p&gt;
</content>
        <category term="Security"></category>
    </entry>
    <entry xml:lang="zh">
      <title>wireshark解决权限问题</title>
      <link href="" rel="alternate"></link>
      <published>Sun, 29 May 2016 00:00:00 +0000</published>
      <updated>Sun, 29 May 2016 00:00:00 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2016/05/wireshark解决权限问题.html" type="text/html"/>
      <id>https://honmaple.me/articles/2016/05/wireshark解决权限问题.html</id>
      <summary type="html">&lt;p&gt;以 &lt;strong&gt;sudo&lt;/strong&gt; 或者 &lt;strong&gt;root&lt;/strong&gt; 打开 &lt;code&gt;wireshark&lt;/code&gt; 是不安全的,毕竟我不是root敢死队&lt;/p&gt;

&lt;h2&gt;Linux&lt;/h2&gt;

&lt;p&gt;如何以普通用户运行 wireshark&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;添加wireshark用户组&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ sudo groupadd wireshark
&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将dumpcap更改为wireshark用户组&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ sudo chgrp wireshark /usr/bin/dumpcap
&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;让wireshark用户组有root权限使用dumpcap&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ sudo chmod 4755 /usr/bin/dumpcap
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;(注意:如果设为4754 Wireshark还是会提示没有权限 )&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;将用户加入wireshark组...&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
      <content type="html">&lt;p&gt;以 &lt;strong&gt;sudo&lt;/strong&gt; 或者 &lt;strong&gt;root&lt;/strong&gt; 打开 &lt;code&gt;wireshark&lt;/code&gt; 是不安全的,毕竟我不是root敢死队&lt;/p&gt;

&lt;h2&gt;Linux&lt;/h2&gt;

&lt;p&gt;如何以普通用户运行 wireshark&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;添加wireshark用户组&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ sudo groupadd wireshark
&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将dumpcap更改为wireshark用户组&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ sudo chgrp wireshark /usr/bin/dumpcap
&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;让wireshark用户组有root权限使用dumpcap&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ sudo chmod 4755 /usr/bin/dumpcap
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;(注意:如果设为4754 Wireshark还是会提示没有权限 )&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;将用户加入wireshark组&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ sudo gpasswd -a username wireshark
或者
$ sudo usermod -a -G wireshark username
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Macos&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ ls -al /dev/bpf* 
crw-------  1 root  wheel  0x17000000  7 12 15:54 /dev/bpf0
crw-------  1 root  wheel  0x17000001  7 12 15:54 /dev/bpf1
crw-------  1 root  wheel  0x17000002  7 11 14:51 /dev/bpf2
crw-------  1 root  wheel  0x17000003  7 11 14:51 /dev/bpf3
&lt;/pre&gt;&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ sudo chgrp access_bpf /dev/bpf*
Password:
└──╼ sudo chmod g+rw /dev/bpf*
└──╼ ls -al /dev/bpf*
crw-rw----  1 root  access_bpf  0x17000000  7 12 15:54 /dev/bpf0
crw-rw----  1 root  access_bpf  0x17000001  7 12 15:54 /dev/bpf1
crw-rw----  1 root  access_bpf  0x17000002  7 11 14:51 /dev/bpf2
crw-rw----  1 root  access_bpf  0x17000003  7 11 14:51 /dev/bpf3
&lt;/pre&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.2cto.com/os/201212/178255.html&quot;&gt;ubuntu系统下wireshark普通用户抓包设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://osqa-ask.wireshark.org/questions/578/mac-os-cant-detect-any-interface/&quot;&gt;Mac OS can’t detect any interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Security"></category>
    </entry>
    <entry xml:lang="zh">
      <title>为网站启用https并增加ssl证书</title>
      <link href="" rel="alternate"></link>
      <published>Fri, 25 Dec 2015 00:00:00 +0000</published>
      <updated>Fri, 25 Dec 2015 00:00:00 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2015/12/为网站启用https并增加ssl证书.html" type="text/html"/>
      <id>https://honmaple.me/articles/2015/12/为网站启用https并增加ssl证书.html</id>
      <summary type="html">
&lt;h3&gt;HTTPS和HTTP的区别&lt;/h3&gt;

&lt;p&gt;超文本传输协议HTTP协议被用于在Web浏览器和网站服务器之间传递信息。HTTP协议以明文方式发送内容，不提供任何方式的数据加密，如果攻击者截取了Web浏览器和网站服务器之间的传输报文，就可以直接读懂其中的信息，因此HTTP协议不适合传输一些敏感信息，比如信用卡号、密码等。
为了解决HTTP协议的这一缺陷，需要使用另一种协议：安全套接字层超文本传输协议HTTPS。为了数据传输的安全，HTTPS在HTTP的基础上加入了SSL协议，SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。
HTTPS和HTTP的区别主要为以下四点:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;https协议需要到ca申请证书，一般免费证书很少，需要交费。&lt;/li&gt;
&lt;li&gt;http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。&lt;/li&gt;
&lt;li&gt;http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。&lt;/li&gt;
&lt;li&gt;http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;申请ssl证书&lt;/h3&gt;

&lt;p&gt;对于像我这样的穷学生或者不希望花钱的同学可以使用&lt;a href=&quot;https://www.startssl.com/&quot;&gt;startssl免费ssl证书...&lt;/a&gt;&lt;/p&gt;</summary>
      <content type="html">
&lt;h3&gt;HTTPS和HTTP的区别&lt;/h3&gt;

&lt;p&gt;超文本传输协议HTTP协议被用于在Web浏览器和网站服务器之间传递信息。HTTP协议以明文方式发送内容，不提供任何方式的数据加密，如果攻击者截取了Web浏览器和网站服务器之间的传输报文，就可以直接读懂其中的信息，因此HTTP协议不适合传输一些敏感信息，比如信用卡号、密码等。
为了解决HTTP协议的这一缺陷，需要使用另一种协议：安全套接字层超文本传输协议HTTPS。为了数据传输的安全，HTTPS在HTTP的基础上加入了SSL协议，SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。
HTTPS和HTTP的区别主要为以下四点:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;https协议需要到ca申请证书，一般免费证书很少，需要交费。&lt;/li&gt;
&lt;li&gt;http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。&lt;/li&gt;
&lt;li&gt;http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。&lt;/li&gt;
&lt;li&gt;http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;申请ssl证书&lt;/h3&gt;

&lt;p&gt;对于像我这样的穷学生或者不希望花钱的同学可以使用&lt;a href=&quot;https://www.startssl.com/&quot;&gt;startssl免费ssl证书&lt;/a&gt;&lt;br&gt;
当然如果可以，最好购买ssl证书,安全性上更有保障&lt;/p&gt;

&lt;p&gt;对于怎么申请startssl免费证书这里不多说，网上很多教程，其中有几点是我在申请中遇到的问题，希望对大家有所帮助&lt;br&gt;
* 在进行域名验证时不论如何startssl&lt;strong&gt;搜索不到我的域名注册邮箱&lt;/strong&gt;,我已将whois保护关闭后还是一样&lt;br&gt;
&lt;strong&gt;解决办法&lt;/strong&gt;：一个不是办法的办法，因为我在qq邮箱使用了域名邮箱,所以我将域名邮箱管理员admin@honmaple.com
更改为postmaster@honmaple.com,然后发送验证邮件到该邮箱对域名进行验证&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;如何导出公钥&lt;/strong&gt;&lt;br&gt;
如果申请成功，在Tool Box点击Certificate List,Action中选择Retrieve导出zip包到本地,
在本地解压就会发现里面有对应服务器类型的crt证书&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;如何导出私钥&lt;/strong&gt;&lt;br&gt;
在申请过程中保存了一个.key文件，这个文件就可以作为私钥(请妥善保管)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;如果在申请中对私钥设置了密码,每次重启ngnix都要输入密码,如果不想每次输入密码,
在startssl的Tool Box的Decrypt Private Key中填入保存的私钥以及私钥密码,对私钥进行解密,
将解密后的字符串保存为.key文件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;关于nginx配置&lt;/h3&gt;

&lt;p&gt;在/etc/nginx/conf.d/ssl.conf中添加&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;server {
     listen       443 ssl;
     server_name  honmaple.com;
     #请更改成你的文件地址
     ssl_certificate /root/ssl/1_honmaple.com.pem;
     ssl_certificate_key /root/ssl/1_honmaple.com.key;

     ssl_session_cache shared:SSL:1m;
     ssl_session_timeout 5m;
     #下面这些请根据实际更改,我的是flask+nginx
     location / {
                        # Pass the request to Gunicorn
                proxy_pass http://127.0.0.1:8000;
                proxy_redirect     off;

                # Set some HTTP headers so that our app knows where the
                # request really came from
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
}
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt;
我不知道是我的原因还是其他,启动ngnix时总报错&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;SSL_CTX_use_PrivateKey_file(&amp;#34;/root/ssl/1_honmaple.com.key&amp;#34;) 
failed (SSL: error:0D07207B:asn1 encoding routines:ASN1_get_object:
header too long error:0D068066:asn1 encoding routines:ASN1_CHECK_TLEN:bad object 
header error:0D07803A:asn1 encoding routines:ASN1_ITEM_EX_D2I:nested asn1 error:
Type=PKCS8_PRIV_KEY_INFO error:2306A065:PKCS12 routines:PKCS12_item_decrypt_d2i:
decode error error:0907B00D:PEM routines:PEM_READ_BIO_PRIVATEKEY:ASN1 lib error:
140B0009:SSL routines:SSL_CTX_use_PrivateKey_file:PEM lib)
&lt;/pre&gt;
&lt;p&gt;所以我将.crt文件改成.pem,后面我发现还是报错，我将公钥里的&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
&lt;/pre&gt;
&lt;p&gt;之间的空行去除
&amp;gt;如果还是报错，请将.key文件解密&lt;/p&gt;

&lt;h3&gt;其他配置&lt;/h3&gt;

&lt;p&gt;如果要全站启用https,并将http定向到https,可以这样&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;server {
    listen 80 ;
    server_name honmaple.com;
    rewrite ^/(.*) https://honmaple.com/$1 permanent;
}
&lt;/pre&gt;
&lt;p&gt;记得更改成自己的域名&lt;/p&gt;

&lt;p&gt;ok,就这样&lt;/p&gt;
</content>
        <category term="Security"></category>
    </entry>
</feed>