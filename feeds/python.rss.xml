<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>HonMaple's Blog</title><link href="http://honmaple.org/" rel="alternate"></link><link href="http://honmaple.org/feeds/python.rss.xml" rel="self"></link><id>http://honmaple.org/</id><updated>2016-07-28T00:00:00+08:00</updated><entry><title>python复习--装饰器</title><link href="http://honmaple.org/articles/2016/07/python%E5%A4%8D%E4%B9%A0--%E8%A3%85%E9%A5%B0%E5%99%A8.html" rel="alternate"></link><published>2016-07-28T00:00:00+08:00</published><updated>2016-07-28T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-28:articles/2016/07/python复习--装饰器.html</id><summary type="html">&lt;p&gt;一个装饰器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nd"&gt;@wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kw&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;call &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;():&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者针对带参数的decorator：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def log(text):
    def decorator(func):
        @wraps(func)
        def wrapper(*args, **kw):
            print(&amp;#39;%s %s():&amp;#39; % (text, func.__name__))
            return func(*args, **kw)
        return wrapper
    return decorator
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="装饰器"></category></entry><entry><title>python的os模块学习</title><link href="http://honmaple.org/articles/2016/07/python%E7%9A%84os%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A0.html" rel="alternate"></link><published>2016-07-28T00:00:00+08:00</published><updated>2016-07-28T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-28:articles/2016/07/python的os模块学习.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline3"&gt;1. Process Parameters&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1.1. os.environ(环境变量)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;1.2. os.getenv(key, default=None)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline36"&gt;2. os.path&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline4"&gt;2.1. os.path.abspath(path) #返回绝对路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline5"&gt;2.2. os.path.basename(path) #返回文件名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline6"&gt;2.3. os.path.commonprefix(list) #返回list(多个路径)中，所有path共有的最长的路径。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline7"&gt;2.4. os.path.dirname(path) #返回文件路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline8"&gt;2.5. os.path.exists(path) #路径存在则返回True,路径不存在返回False&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline9"&gt;2.6. os.path.exists('aa.py')&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline10"&gt;2.7. os.path.lexists #路径存在则返回True,路径不存在也返回False&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline11"&gt;2.8. os.path.expanduser(path) #把path中包含的"~"和"~user"转换成用户目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline12"&gt;2.9. os.path.expandvars(path) #根据环境变量的值替换path中包含的”(name”和”){name}”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline13"&gt;2.10. os.path.getatime(path) #返回最后一次进入此path的时间。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline14"&gt;2.11. os.path.getmtime(path) #返回在此path下最后一次修改的时间。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline15"&gt;2.12. os.path.getctime(path)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline16"&gt;2.13. os.path.getsize(path) #返回文件大小，如果文件不存在就返回错误&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline17"&gt;2.14. os.path.isabs(path) #判断是否为绝对路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline18"&gt;2.15. os.path.isfile(path) #判断路径是否为文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline19"&gt;2.16. os.path.isdir(path) #判断路径是否为目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline20"&gt;2.17. os.path.islink(path) #判断路径是否为链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline21"&gt;2.18. os.path.ismount(path) #判断路径是否为挂载点（）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline22"&gt;2.19. os.path.join(path1[, path2[, …]]) #把目录和文件名合成一个路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline23"&gt;2.20. os.path.normcase(path) #转换path的大小写和斜杠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline24"&gt;2.21. os.path.normpath(path) #规范path字符串形式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline25"&gt;2.22. os.path.realpath(path) #返回path的真实路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline26"&gt;2.23. os.path.relpath(path[, start]) #从start开始计算相对路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline27"&gt;2.24. os.path.samefile(path1, path2) #判断目录或文件是否相同&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline28"&gt;2.25. os.path.sameopenfile(fp1, fp2) #判断fp1和fp2是否指向同一文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline29"&gt;2.26. os.path.samestat(stat1, stat2) #判断stat tuple stat1和stat2是否指向同一个文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline30"&gt;2.27. os.path.split(path) #把路径分割成dirname和basename，返回一个元组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline31"&gt;2.28. os.path.splitdrive(path) #一般用在windows下，返回驱动器名和路径组成的元组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline32"&gt;2.29. os.path.splitext(path) #分割路径，返回路径名和文件扩展名的元组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline33"&gt;2.30. os.path.splitunc(path) #把路径分割为加载点与文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline34"&gt;2.31. os.path.walk(path, visit, arg) #遍历path，进入每个目录都调用visit函数，visit函数必须有&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline35"&gt;2.32. os.path.supportsunicodefilenames #设置是否支持unicode路径名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;Process Parameters&lt;a id="orgheadline3"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;os.environ(环境变量)&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.environ[&amp;#39;HOME&amp;#39;]
&amp;#39;/home/xxx&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.getenv(key, default=None)&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.getenv(&amp;quot;HOME&amp;quot;)
&amp;#39;/home/xxx&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;os.path&lt;a id="orgheadline36"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;os.path.abspath(path) #返回绝对路径&lt;a id="orgheadline4"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.abspath(&amp;#39;aa.py&amp;#39;)
&amp;#39;/home/jianglin/test/aa.py&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.basename(path) #返回文件名&lt;a id="orgheadline5"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.basename(&amp;#39;aa.py&amp;#39;)
&amp;#39;aa.py&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.commonprefix(list) #返回list(多个路径)中，所有path共有的最长的路径。&lt;a id="orgheadline6"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.commonprefix([&amp;#39;aa.py&amp;#39;,&amp;#39;a.py&amp;#39;])
&amp;#39;a&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.commonprefix([&amp;#39;aa.py&amp;#39;,&amp;#39;c.py&amp;#39;])
&amp;#39;&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.commonprefix([&amp;#39;~/test/aa.py&amp;#39;,&amp;#39;~/test/c.py&amp;#39;])
&amp;#39;~/test/&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.commonprefix([&amp;#39;~/test/aa.py&amp;#39;,&amp;#39;~/test/c.py&amp;#39;,&amp;#39;~/test/git/.git/config&amp;#39;])
&amp;#39;~/test/&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.dirname(path) #返回文件路径&lt;a id="orgheadline7"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.dirname(&amp;#39;~/test/aa.py&amp;#39;)
&amp;#39;~/test&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.exists(path) #路径存在则返回True,路径不存在返回False&lt;a id="orgheadline8"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.exists('aa.py')&lt;a id="orgheadline9"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;True
&amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#39;aa.pp&amp;#39;)
False
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.lexists #路径存在则返回True,路径不存在也返回False&lt;a id="orgheadline10"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.lexists(&amp;#39;aa.py&amp;#39;)
True
&amp;gt;&amp;gt;&amp;gt; os.path.lexists(&amp;#39;aa.pp&amp;#39;)
False
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.expanduser(path) #把path中包含的"~"和"~user"转换成用户目录&lt;a id="orgheadline11"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.expanduser(&amp;#39;aa.py&amp;#39;)
&amp;#39;aa.py&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.expanduser(&amp;#39;~/test/aa.py&amp;#39;)
&amp;#39;/home/jianglin/test/aa.py&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.expandvars(path) #根据环境变量的值替换path中包含的”(name”和”){name}”&lt;a id="orgheadline12"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.getatime(path) #返回最后一次进入此path的时间。&lt;a id="orgheadline13"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;aa.py&amp;#39;)
1461933601.0809627
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;~/git/&amp;#39;)
Traceback (most recent call last):
File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
File &amp;quot;/usr/lib/python3.5/genericpath.py&amp;quot;, line 60, in getatime
return os.stat(filename).st_atime
FileNotFoundError: [Errno 2] No such file or directory: &amp;#39;~/git/&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;~/git/maple-bbs/.gitignore&amp;#39;)
Traceback (most recent call last):
File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
File &amp;quot;/usr/lib/python3.5/genericpath.py&amp;quot;, line 60, in getatime
return os.stat(filename).st_atime
FileNotFoundError: [Errno 2] No such file or directory: &amp;#39;~/git/maple-bbs/.gitignore&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;a.py&amp;#39;)
1461418983.486829
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;~/git&amp;#39;)
Traceback (most recent call last):
File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
File &amp;quot;/usr/lib/python3.5/genericpath.py&amp;quot;, line 60, in getatime
return os.stat(filename).st_atime
FileNotFoundError: [Errno 2] No such file or directory: &amp;#39;~/git&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;./git/.git/config&amp;#39;)
1461856107.9136002
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.getmtime(path) #返回在此path下最后一次修改的时间。&lt;a id="orgheadline14"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.getmtime(&amp;#39;aa.py&amp;#39;)
1461933858.6676357
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.getctime(path)&lt;a id="orgheadline15"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.getctime(&amp;#39;aa.py&amp;#39;)
1461933858.6676357
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.getsize(path) #返回文件大小，如果文件不存在就返回错误&lt;a id="orgheadline16"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.getsize(&amp;#39;aa.py&amp;#39;)
448
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.isabs(path) #判断是否为绝对路径&lt;a id="orgheadline17"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.isabs(&amp;#39;aa.py&amp;#39;)
False
&amp;gt;&amp;gt;&amp;gt; os.path.isabs(&amp;#39;~/test/aa.py&amp;#39;)
False
&amp;gt;&amp;gt;&amp;gt; os.path.isabs(&amp;#39;/home/jianglin/test/aa.py&amp;#39;)
True
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.isfile(path) #判断路径是否为文件&lt;a id="orgheadline18"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.isfile(&amp;#39;aa.py&amp;#39;)
True
&amp;gt;&amp;gt;&amp;gt; os.path.isfile(&amp;#39;~/test&amp;#39;)
False
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.isdir(path) #判断路径是否为目录&lt;a id="orgheadline19"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.isdir(&amp;#39;~/test&amp;#39;)
False
&amp;gt;&amp;gt;&amp;gt; os.path.isdir(&amp;#39;/home/jianglin/test/aa.py&amp;#39;)
False
&amp;gt;&amp;gt;&amp;gt; os.path.isdir(&amp;#39;/home/jianglin/test&amp;#39;)
True
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.islink(path) #判断路径是否为链接&lt;a id="orgheadline20"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.ismount(path) #判断路径是否为挂载点（）&lt;a id="orgheadline21"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.join(path1[, path2[, …]]) #把目录和文件名合成一个路径&lt;a id="orgheadline22"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.join(&amp;#39;/home/jianglin/test&amp;#39;,&amp;#39;aa.py&amp;#39;)
&amp;#39;/home/jianglin/test/aa.py&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.join(&amp;#39;/home/jianglin&amp;#39;,&amp;#39;test/aa.py&amp;#39;)
&amp;#39;/home/jianglin/test/aa.py&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.join(&amp;#39;~&amp;#39;,&amp;#39;test/aa.py&amp;#39;)
&amp;#39;~/test/aa.py&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.normcase(path) #转换path的大小写和斜杠&lt;a id="orgheadline23"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.normpath(path) #规范path字符串形式&lt;a id="orgheadline24"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.realpath(path) #返回path的真实路径&lt;a id="orgheadline25"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.relpath(path[, start]) #从start开始计算相对路径&lt;a id="orgheadline26"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.samefile(path1, path2) #判断目录或文件是否相同&lt;a id="orgheadline27"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.sameopenfile(fp1, fp2) #判断fp1和fp2是否指向同一文件&lt;a id="orgheadline28"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.samestat(stat1, stat2) #判断stat tuple stat1和stat2是否指向同一个文件&lt;a id="orgheadline29"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.split(path) #把路径分割成dirname和basename，返回一个元组&lt;a id="orgheadline30"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.split(&amp;#39;~/test/aa.py&amp;#39;)
(&amp;#39;~/test&amp;#39;, &amp;#39;aa.py&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.splitdrive(path) #一般用在windows下，返回驱动器名和路径组成的元组&lt;a id="orgheadline31"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.splitext(path) #分割路径，返回路径名和文件扩展名的元组&lt;a id="orgheadline32"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.splitunc(path) #把路径分割为加载点与文件&lt;a id="orgheadline33"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.walk(path, visit, arg) #遍历path，进入每个目录都调用visit函数，visit函数必须有&lt;a id="orgheadline34"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;3个参数(arg, dirname, names)，dirname表示当前目录的目录名，names代表当前目录下的所有&lt;/p&gt;
&lt;p&gt;文件名，args则为walk的第三个参数&lt;/p&gt;
&lt;h2&gt;os.path.supportsunicodefilenames #设置是否支持unicode路径名&lt;a id="orgheadline35"&gt;&lt;/a&gt;&lt;/h2&gt;</summary><category term="python"></category><category term="os"></category></entry><entry><title>centos7安装python3及pip3</title><link href="http://honmaple.org/articles/2016/07/centos7%E5%AE%89%E8%A3%85python3%E5%8F%8Apip3.html" rel="alternate"></link><published>2016-07-07T00:00:00+08:00</published><updated>2016-07-07T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-07:articles/2016/07/centos7安装python3及pip3.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1. 安装python3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;2. 安装pip3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;安装python3&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;安装python3很简单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载源码并且编译&lt;/li&gt;
&lt;li&gt;安装epel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里采用第二种方法:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install epel-release
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装完成之后,yum list python3*,你就可以看见 &lt;strong&gt;python34&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install python34
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;安装pip3&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/6587507/how-to-install-pip-with-python-3"&gt;参考问题&lt;/a&gt;
如果在上述安装 *python3*时采用了第二种方法,pip默认未安装,而且无法通过`yum install python34-pip`来安装&lt;/p&gt;
&lt;p&gt;正确的方法应该是:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install python34-setuptools
easy_install-3.4 pip # 这里可能有一些出入,总之是使用python3的easy_install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok,就这样&lt;/p&gt;</summary><category term="python"></category><category term="python3"></category><category term="pip"></category><category term="pip3"></category></entry><entry><title>记录pip安装报的错.org</title><link href="http://honmaple.org/articles/2016/07/%E8%AE%B0%E5%BD%95pip%E5%AE%89%E8%A3%85%E6%8A%A5%E7%9A%84%E9%94%99.org.html" rel="alternate"></link><published>2016-07-07T00:00:00+08:00</published><updated>2016-07-07T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-07:articles/2016/07/记录pip安装报的错.org.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1. Pillow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;2. misaka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline3"&gt;3. psycopg2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Pillow&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;jpeg&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="n"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;explicitly&lt;/span&gt; &lt;span class="n"&gt;disabled&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jpeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aborting&lt;/span&gt;

    &lt;span class="o"&gt;----------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Command&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/***/***/venv/bin/python3.4 -u -c &amp;quot;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;tokenize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/tmp/pip-build-k9djbrwk/Pillow/setup.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tokenize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;open&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;exec&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; install --record /tmp/pip-i_zr9z4a-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/***/***/venv/include/site/python3.4/Pillow&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;k9djbrwk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Pillow&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;解决办法:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# yum install libjpeg-turbo-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其实这个办法也不太准确,
参考 &lt;a href="http://pillow.readthedocs.org/en/latest/installation.html"&gt;pillow文档&lt;/a&gt; ,安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install libtiff-devel libjpeg-devel libzip-devel freetype-devel lcms2-devel libwebp-devel tcl-devel tk-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;misaka&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Setup&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;exited&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip3 install misaka
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Setup&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;exited&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上 &lt;strong&gt;google&lt;/strong&gt; 搜了半天,结果都是 &lt;strong&gt;python-devel&lt;/strong&gt; 没装，实际上我的已经装上了，
我以为是因为我自己编译安装的python3没有安装python3-devel,又搜了半天，什么也没搜到，
后来心血来潮使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;easy_install misaka
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不用多说，还是报错，但是报错原因成了 &lt;strong&gt;No package 'libffi' found&lt;/strong&gt; ,好吧，
yum list libffi\*之后，发现libffi已安装，但是libffi-devel未安装，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install libffi-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;试一试，结果。。。成功了&lt;/p&gt;
&lt;h3&gt;psycopg2&lt;a id="orgheadline3"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;psycopg2安装之前需要安装 &lt;strong&gt;postgresql-devel&lt;/strong&gt; ,此外,正确的安装方式是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;PATH=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;:/usr/pgsql-9.3/bin/ pip install psycopg2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;注意postgresql目录&lt;/em&gt;&lt;/p&gt;</summary><category term="python"></category><category term="pip"></category></entry><entry><title>基于restful的flask权限管理</title><link href="http://honmaple.org/articles/2016/06/%E5%9F%BA%E4%BA%8Erestful%E7%9A%84flask%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86.html" rel="alternate"></link><published>2016-06-10T00:00:00+08:00</published><updated>2016-06-10T00:00:00+08:00</updated><author><name>2016-06-10 01:34:00</name></author><id>tag:honmaple.org,2016-06-10:articles/2016/06/基于restful的flask权限管理.html</id><summary type="html">&lt;h3&gt;为什么需要restful形式的权限管理&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最近在写flask应用时使用了 &lt;strong&gt;restful&lt;/strong&gt; 形式的&lt;code&gt;flask.views.MethodView&lt;/code&gt;，但是在对其进行权限管理时遇到了一些问题&lt;/p&gt;
&lt;p&gt;flask文档上介绍说用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;decorators = []
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;添加装饰器,但实际使用上,比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;get&lt;/strong&gt; 和 &lt;strong&gt;post&lt;/strong&gt; 采用不同的权限&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;get 不使用 login_required  &lt;br /&gt;
 post 需要 login_required&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就不能使用 &lt;strong&gt;decorators&lt;/strong&gt; 对视图进行装饰&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;post&lt;/strong&gt; ,&lt;strong&gt;delete&lt;/strong&gt;, &lt;strong&gt;put&lt;/strong&gt; 都需要 login_required,但是&lt;strong&gt;get&lt;/strong&gt;不需要
    而 &lt;strong&gt;delete&lt;/strong&gt; 又需要更高级别的权限,我们可以这样&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;AAA&lt;/span&gt;(&lt;span class="n"&gt;MethodView&lt;/span&gt;):

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;,&lt;span class="n"&gt;uid&lt;/span&gt;):
        ...

    &lt;span class="nv"&gt;@login_required&lt;/span&gt;
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;):
        ...

    &lt;span class="nv"&gt;@login_required&lt;/span&gt;
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;,&lt;span class="n"&gt;uid&lt;/span&gt;):
        ...

    &lt;span class="nv"&gt;@login_required&lt;/span&gt;
    &lt;span class="nv"&gt;@more_required&lt;/span&gt;
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="nb"&gt;delete&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;,&lt;span class="n"&gt;uid&lt;/span&gt;):
        ...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;是不是看起来还不错, &lt;strong&gt;但是&lt;/strong&gt;,如果再加上&lt;a href="http://www.pythonhosted.org/Flask-Principal/"&gt;类似EditBlogPostPermission&lt;/a&gt; 这样的权限管理呢?
是不是还需要这样&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@login_required
def put(self,uid):
    permission = EditBlogPostPermission(uid)
    if permission.can():
        # Save the edits ...
        return render_template(&amp;#39;edit_post.html&amp;#39;)
    ...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;先不论样式丑不丑，最重要的代码的 &lt;strong&gt;可维护性&lt;/strong&gt; 极差,所以我增加了如下代码&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;怎么实现restful形式的权限管理&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;同样采用装饰器实现,调用 &lt;em&gt;BasePermission&lt;/em&gt; 时会自动调用 &lt;em&gt;&lt;strong&gt;call&lt;/strong&gt;&lt;/em&gt; 函数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;BasePermission&lt;/span&gt;(&lt;span class="n"&gt;object&lt;/span&gt;):

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;__call__&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;func&lt;/span&gt;):
        &lt;span class="nv"&gt;@wraps&lt;/span&gt;(&lt;span class="n"&gt;func&lt;/span&gt;)
        &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;decorator&lt;/span&gt;(*&lt;span class="n"&gt;args&lt;/span&gt;, **&lt;span class="n"&gt;kwargs&lt;/span&gt;):
            &lt;span class="n"&gt;meth&lt;/span&gt; = &lt;span class="n"&gt;getattr&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;request&lt;/span&gt;.&lt;span class="k"&gt;method&lt;/span&gt;.&lt;span class="n"&gt;lower&lt;/span&gt;(), &lt;span class="n"&gt;None&lt;/span&gt;)
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;meth&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt; &lt;span class="o"&gt;and&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;.&lt;span class="k"&gt;method&lt;/span&gt; == &lt;span class="s"&gt;&amp;#39;HEAD&amp;#39;&lt;/span&gt;:
                &lt;span class="n"&gt;meth&lt;/span&gt; = &lt;span class="n"&gt;getattr&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;, &lt;span class="s"&gt;&amp;#39;get&amp;#39;&lt;/span&gt;, &lt;span class="n"&gt;None&lt;/span&gt;)
            &lt;span class="n"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;meth&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nb"&gt;not&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;, &lt;span class="s"&gt;&amp;#39;Unimplemented method %r&amp;#39;&lt;/span&gt; % &lt;span class="n"&gt;request&lt;/span&gt;.&lt;span class="k"&gt;method&lt;/span&gt;
            &lt;span class="n"&gt;check&lt;/span&gt; = &lt;span class="n"&gt;meth&lt;/span&gt;(*&lt;span class="n"&gt;args&lt;/span&gt;, **&lt;span class="n"&gt;kwargs&lt;/span&gt;)
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;check:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;
            &lt;span class="n"&gt;else:&lt;/span&gt;
                &lt;span class="nb"&gt;pass&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;(*&lt;span class="n"&gt;args&lt;/span&gt;, **&lt;span class="n"&gt;kwargs&lt;/span&gt;)

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decorator&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;举个例子,get方式不需要用户登陆,而其它方式需要,并且put方式需要创建主题的作者才能更改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;TopicPermission&lt;/span&gt;(&lt;span class="n"&gt;BasePermission&lt;/span&gt;):
    &lt;span class="nv"&gt;@login_required&lt;/span&gt;
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;):
        &lt;span class="nb"&gt;pass&lt;/span&gt;

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;uid&lt;/span&gt;):
        &lt;span class="nb"&gt;pass&lt;/span&gt;

    &lt;span class="nv"&gt;@login_required&lt;/span&gt;
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;uid&lt;/span&gt;):
        &lt;span class="n"&gt;permission&lt;/span&gt; = &lt;span class="n"&gt;EditTopicPermission&lt;/span&gt;(&lt;span class="n"&gt;uid&lt;/span&gt;)
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;not&lt;/span&gt; &lt;span class="n"&gt;permission&lt;/span&gt;.&lt;span class="nb"&gt;can&lt;/span&gt;():
            &lt;span class="n"&gt;flash&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;你没有权限&amp;#39;&lt;/span&gt;)
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;(&lt;span class="n"&gt;url_for&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;topic.topic&amp;#39;&lt;/span&gt;, &lt;span class="n"&gt;uid&lt;/span&gt;=&lt;span class="n"&gt;uid&lt;/span&gt;))

    &lt;span class="nv"&gt;@login_required&lt;/span&gt;
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="nb"&gt;delete&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;,&lt;span class="n"&gt;uid&lt;/span&gt;):
        &lt;span class="nb"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;topic_permission&lt;/span&gt; = &lt;span class="n"&gt;TopicPermission&lt;/span&gt;()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;假设四种方式都需要同一种权限,都需要用户登陆,总不能每个函数前都加上装饰器吧
所以稍加修改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;decorators = ()
def __call__(self, func):
    if self.decorators:
        for dec in self.decorators:
            return dec(func)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;OK,这样就可以添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;decorators = [login_required]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来实现四种请求方式采用同一种权限&lt;/p&gt;
&lt;p&gt;最后,你就可以在 &lt;em&gt;AAA&lt;/em&gt; 这个类里添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;decorators = [topic_permission]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;实现restful形式的权限管理&lt;/p&gt;
&lt;p&gt;ok，就这样,可能还不完善或有一些问题，如有问题请联系我&lt;/p&gt;</summary><category term="python"></category><category term="flask"></category><category term="restful"></category></entry><entry><title>sqlalchemy学习(一)</title><link href="http://honmaple.org/articles/2016/04/sqlalchemy%E5%AD%A6%E4%B9%A0(%E4%B8%80).html" rel="alternate"></link><published>2016-04-25T00:00:00+08:00</published><updated>2016-04-25T00:00:00+08:00</updated><author><name>2016-04-25 21:55:00</name></author><id>tag:honmaple.org,2016-04-25:articles/2016/04/sqlalchemy学习(一).html</id><summary type="html">&lt;h1&gt;sqlalchemy&lt;a id="orgheadline19"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;系统的学一下&lt;/p&gt;
&lt;h1&gt;sqlalchemy&lt;a id="orgheadline19"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;系统的学一下sqlalchemyA,不过没有中文文档,只能用我的渣英文能力慢慢看原文档了&lt;/p&gt;
&lt;h2&gt;数据库连接&lt;a id="orgheadline6"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sqlite:///:memory:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;echo为True输出日志&lt;/p&gt;
&lt;h3&gt;各种数据库连接方式&lt;a id="orgheadline5"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dialect+driver://username:password@host:port/database
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Postgresql&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# default
engine = create_engine(&amp;#39;postgresql://scott:tiger@localhost/mydatabase&amp;#39;)
# psycopg2
engine = create_engine(&amp;#39;postgresql+psycopg2://scott:tiger@localhost/mydatabase&amp;#39;)
# pg8000
engine = create_engine(&amp;#39;postgresql+pg8000://scott:tiger@localhost/mydatabase&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# default
engine = create_engine(&amp;#39;mysql://scott:tiger@localhost/foo&amp;#39;)
# mysql-python
engine = create_engine(&amp;#39;mysql+mysqldb://scott:tiger@localhost/foo&amp;#39;)
# MySQL-connector-python
engine = create_engine(&amp;#39;mysql+mysqlconnector://scott:tiger@localhost/foo&amp;#39;)
# OurSQL
engine = create_engine(&amp;#39;mysql+oursql://scott:tiger@localhost/foo&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Oracle&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nl"&gt;oracle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//scott:tiger@127.0.0.1:1521/sidname&amp;#39;)&lt;/span&gt;
&lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;oracle&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nl"&gt;cx_oracle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//scott:tiger@tnsname&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQLite&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# sqlite://&amp;lt;nohostname&amp;gt;/&amp;lt;path&amp;gt;
# where &amp;lt;path&amp;gt; is relative:
engine = create_engine(&amp;#39;sqlite:///foo.db&amp;#39;)
#Unix/Mac - 4 initial slashes in total
engine = create_engine(&amp;#39;sqlite:////absolute/path/to/foo.db&amp;#39;)
#Windows
engine = create_engine(&amp;#39;sqlite:///C:\\path\\to\\foo.db&amp;#39;)
#Windows alternative using raw string
engine = create_engine(r&amp;#39;sqlite:///C:\path\to\foo.db&amp;#39;)
# To use a SQLite :memory: database, specify an empty URL:
engine = create_engine(&amp;#39;sqlite://&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;声明样式&lt;a id="orgheadline11"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy.ext.declarative&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;declarative_base&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;

&lt;span class="n"&gt;Base&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;declarative_base&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="n"&gt;__tablename__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;users&amp;#39;&lt;/span&gt;

     &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;primary_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;fullname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;User(name=&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;, fullname=&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;, password=&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;)&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                             &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;样式参数说明&lt;a id="orgheadline7"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;

&lt;colgroup&gt;
&lt;col  class="org-left" /&gt;

&lt;col  class="org-left" /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class="org-left"&gt;说明&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class="org-left"&gt;**\_&lt;sub&gt;tablename&lt;/sub&gt;\_\_**&lt;/td&gt;
&lt;td class="org-left"&gt;表名&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3&gt;字段类型及说明&lt;a id="orgheadline10"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://docs.sqlalchemy.org/en/rel_1_0/core/type_basics.html#sqlalchemy.types.Integer"&gt;字段类型及文档&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generic Types&lt;/p&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;

&lt;p&gt;&lt;colgroup&gt;
&lt;col  class="org-left" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;col  class="org-left" /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;字段类型&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;BigInteger&lt;/td&gt;
&lt;td class="org-left"&gt;大数&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Boolean(create&lt;sub&gt;constraint&lt;/sub&gt;=True, name=None, _create&lt;sub&gt;events&lt;/sub&gt;=True)&lt;/td&gt;
&lt;td class="org-left"&gt;布尔&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Data&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;DateTime(timezone=False)&lt;/td&gt;
&lt;td class="org-left"&gt;时间&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Enum(*enums, **kw)&lt;/td&gt;
&lt;td class="org-left"&gt;枚举&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Float(precision=None, asdecimal=False, decimal&lt;sub&gt;return&lt;/sub&gt;&lt;sub&gt;scale&lt;/sub&gt;=None, **kwargs)&lt;/td&gt;
&lt;td class="org-left"&gt;浮点型&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Integer&lt;/td&gt;
&lt;td class="org-left"&gt;整型&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Interval(native=True, second&lt;sub&gt;precision&lt;/sub&gt;=None, day&lt;sub&gt;precision&lt;/sub&gt;=None)&lt;/td&gt;
&lt;td class="org-left"&gt;时间间隔&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;LargeBinary(length=None)&lt;/td&gt;
&lt;td class="org-left"&gt;二进制大对象&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;MatchType(create&lt;sub&gt;constraint&lt;/sub&gt;=True, name=None, _create&lt;sub&gt;events&lt;/sub&gt;=True)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Numeric(precision=None, scale=None, decimal&lt;sub&gt;return&lt;/sub&gt;&lt;sub&gt;scale&lt;/sub&gt;=None, asdecimal=True)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;PickleType(protocol=2, pickler=None, comparator=None)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;SchemaType(name=None, schema=None, metadata=None, inherit&lt;sub&gt;schema&lt;/sub&gt;=False, quote=None, _create&lt;sub&gt;events&lt;/sub&gt;=True)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;SmallInteger&lt;/td&gt;
&lt;td class="org-left"&gt;小整型&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;String(length=None, collation=None, convert&lt;sub&gt;unicode&lt;/sub&gt;=False, unicode&lt;sub&gt;error&lt;/sub&gt;=None, _warn&lt;sub&gt;on&lt;/sub&gt;&lt;sub&gt;bytestring&lt;/sub&gt;=False)&lt;/td&gt;
&lt;td class="org-left"&gt;字符串&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Text(length=None, collation=None, convert&lt;sub&gt;unicode&lt;/sub&gt;=False, unicode&lt;sub&gt;error&lt;/sub&gt;=None, _warn&lt;sub&gt;on&lt;/sub&gt;&lt;sub&gt;bytestring&lt;/sub&gt;=False)&lt;/td&gt;
&lt;td class="org-left"&gt;文本对象&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Time(timezone=False)&lt;/td&gt;
&lt;td class="org-left"&gt;时间&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;Unicode(length=None, **kwargs)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;UnicodeText(length=None, **kwargs)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQL Standard Types&lt;/p&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;

&lt;p&gt;&lt;colgroup&gt;
&lt;col  class="org-left" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;col  class="org-left" /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;字段类型&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;BIGINT&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;BINARY(length=None)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;BLOB(length=None)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;BOOLEAN(create&lt;sub&gt;constraint&lt;/sub&gt;=True, name=None, _create&lt;sub&gt;events&lt;/sub&gt;=True)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;CHAR(length=None, collation=None, convert&lt;sub&gt;unicode&lt;/sub&gt;=False, unicode&lt;sub&gt;error&lt;/sub&gt;=None, _warn&lt;sub&gt;on&lt;/sub&gt;&lt;sub&gt;bytestring&lt;/sub&gt;=False)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;CLOB(length=None, collation=None, convert&lt;sub&gt;unicode&lt;/sub&gt;=False, unicode&lt;sub&gt;error&lt;/sub&gt;=None, _warn&lt;sub&gt;on&lt;/sub&gt;&lt;sub&gt;bytestring&lt;/sub&gt;=False)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;DATE&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;DATETIME(timezone=False)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;DECIMAL(precision=None, scale=None, decimal&lt;sub&gt;return&lt;/sub&gt;&lt;sub&gt;scale&lt;/sub&gt;=None, asdecimal=True)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;FLOAT(precision=None, asdecimal=False, decimal&lt;sub&gt;return&lt;/sub&gt;&lt;sub&gt;scale&lt;/sub&gt;=None, **kwargs)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;INT&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;INTEGER&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;NCHAR(length=None, **kwargs)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;NVARCHAR(length=None, **kwargs)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;NUMERIC(precision=None, scale=None, decimal&lt;sub&gt;return&lt;/sub&gt;&lt;sub&gt;scale&lt;/sub&gt;=None, asdecimal=True)¶&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;REAL(precision=None, asdecimal=False, decimal&lt;sub&gt;return&lt;/sub&gt;&lt;sub&gt;scale&lt;/sub&gt;=None, **kwargs)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;SMALLINT&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;TEXT(length=None, collation=None, convert&lt;sub&gt;unicode&lt;/sub&gt;=False, unicode&lt;sub&gt;error&lt;/sub&gt;=None, _warn&lt;sub&gt;on&lt;/sub&gt;&lt;sub&gt;bytestring&lt;/sub&gt;=False&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;TIME(timezone=False)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;TIMESTAMP(timezone=False)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;VARBINARY(length=None)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;
&lt;td class="org-left"&gt;VARCHAR(length=None, collation=None, convert&lt;sub&gt;unicode&lt;/sub&gt;=False, unicode&lt;sub&gt;error&lt;/sub&gt;=None, _warn&lt;sub&gt;on&lt;/sub&gt;&lt;sub&gt;bytestring&lt;/sub&gt;=False)&lt;/td&gt;
&lt;td class="org-left"&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;创建表&lt;a id="orgheadline12"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Base.metadata.create_all(engine)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;为表创建实例&lt;a id="orgheadline13"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; ed_user = User(name=&amp;#39;ed&amp;#39;, fullname=&amp;#39;Ed Jones&amp;#39;, password=&amp;#39;edspassword&amp;#39;)
&amp;gt;&amp;gt;&amp;gt; ed_user.name
&amp;#39;ed&amp;#39;
&amp;gt;&amp;gt;&amp;gt; ed_user.password
&amp;#39;edspassword&amp;#39;
&amp;gt;&amp;gt;&amp;gt; str(ed_user.id)
&amp;#39;None&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;创建session&lt;a id="orgheadline14"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy.orm&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sessionmaker&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sessionmaker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你也可以先创建Session,在创建应用前&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; Session = sessionmaker()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当你创建了应用,可以这样配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; Session.configure(bind=engine)  # once engine is available
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;插入和更新数据&lt;a id="orgheadline18"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;插入&lt;a id="orgheadline15"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;插入一条数据&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; ed_user = User(name=&amp;#39;ed&amp;#39;, fullname=&amp;#39;Ed Jones&amp;#39;, password=&amp;#39;edspassword&amp;#39;)
&amp;gt;&amp;gt;&amp;gt; session.add(ed_user)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;插入多条数据&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; session.add_all([
...     User(name=&amp;#39;wendy&amp;#39;, fullname=&amp;#39;Wendy Williams&amp;#39;, password=&amp;#39;foobar&amp;#39;),
...     User(name=&amp;#39;mary&amp;#39;, fullname=&amp;#39;Mary Contrary&amp;#39;, password=&amp;#39;xxg527&amp;#39;),
...     User(name=&amp;#39;fred&amp;#39;, fullname=&amp;#39;Fred Flinstone&amp;#39;, password=&amp;#39;blah&amp;#39;)])
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;更新&lt;a id="orgheadline16"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; ed_user.password = &amp;#39;f8s7ccs&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; session.dirty
IdentitySet([&amp;lt;User(name=&amp;#39;ed&amp;#39;, fullname=&amp;#39;Ed Jones&amp;#39;, password=&amp;#39;f8s7ccs&amp;#39;)&amp;gt;])
&amp;gt;&amp;gt;&amp;gt; session.new  # doctest: +SKIP
IdentitySet([&amp;lt;User(name=&amp;#39;wendy&amp;#39;, fullname=&amp;#39;Wendy Williams&amp;#39;, password=&amp;#39;foobar&amp;#39;)&amp;gt;,
&amp;lt;User(name=&amp;#39;mary&amp;#39;, fullname=&amp;#39;Mary Contrary&amp;#39;, password=&amp;#39;xxg527&amp;#39;)&amp;gt;,
&amp;lt;User(name=&amp;#39;fred&amp;#39;, fullname=&amp;#39;Fred Flinstone&amp;#39;, password=&amp;#39;blah&amp;#39;)&amp;gt;])
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;必须提交才能生效&lt;a id="orgheadline17"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; session.commit()
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="sql"></category><category term="sqlalchemy"></category></entry><entry><title>python一些加密解密</title><link href="http://honmaple.org/articles/2016/04/python%E4%B8%80%E4%BA%9B%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86.html" rel="alternate"></link><published>2016-04-12T00:00:00+08:00</published><updated>2016-04-12T00:00:00+08:00</updated><author><name>2016-04-12 15:18:35.080776</name></author><id>tag:honmaple.org,2016-04-12:articles/2016/04/python一些加密解密.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hashlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;base64&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;123456&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;md5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;md5加密 :&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;sha1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sha1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sha1加密: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;sha1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;sha224&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha224&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sha224&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sha224加密: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;sha224&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;sha256&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sha256加密: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;sha384&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha384&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sha384&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sha384加密: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;sha384&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;sha512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha512&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sha512&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sha512加密: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;sha512&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ripemd160&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;new加密: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encodestring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decodestring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;base64加密: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;base64解密: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="md5"></category></entry><entry><title>flask解决f5刷新问题</title><link href="http://honmaple.org/articles/2016/04/flask%E8%A7%A3%E5%86%B3f5%E5%88%B7%E6%96%B0%E9%97%AE%E9%A2%98.html" rel="alternate"></link><published>2016-04-07T00:00:00+08:00</published><updated>2016-04-07T00:00:00+08:00</updated><author><name>2016-04-07 23:52:12.180317</name></author><id>tag:honmaple.org,2016-04-07:articles/2016/04/flask解决f5刷新问题.html</id><summary type="html">&lt;p&gt;&lt;a href="https://segmentfault.com/q/1010000002486706"&gt;问题来源&lt;/a&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def index():
    if form.validate_on_submit() and request.method == &amp;quot;POST&amp;quot;:
        # do something
    else:
        # 这里使用**redirect**重定向而不是render_template
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="flask"></category></entry><entry><title>python时间转换</title><link href="http://honmaple.org/articles/2016/04/python%E6%97%B6%E9%97%B4%E8%BD%AC%E6%8D%A2.html" rel="alternate"></link><published>2016-04-07T00:00:00+08:00</published><updated>2016-04-07T00:00:00+08:00</updated><author><name>2016-04-07 23:42:07.357686</name></author><id>tag:honmaple.org,2016-04-07:articles/2016/04/python时间转换.html</id><summary type="html">&lt;h3&gt;string转datetime&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2016-04-03&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;date_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;date_time&lt;/span&gt;
&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;datetime转string&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; date_time.strftime(&amp;#39;%Y-%m-%d&amp;#39;)
&amp;#39;2016-04-03&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;datetime转时间戳&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; time_time = time.mktime(date_time.timetuple())
&amp;gt;&amp;gt;&amp;gt; time_time
1459612800.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;时间戳转string&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; time.strftime(&amp;#39;%Y-%m-%d&amp;#39;,time.localtime(time_time))
&amp;#39;2016-04-03&amp;#39;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="datetime"></category></entry><entry><title>母羊生羊问题解决</title><link href="http://honmaple.org/articles/2016/03/%E6%AF%8D%E7%BE%8A%E7%94%9F%E7%BE%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3.html" rel="alternate"></link><published>2016-03-12T00:00:00+08:00</published><updated>2016-03-12T00:00:00+08:00</updated><author><name>2016-03-12 18:25:36.632142</name></author><id>tag:honmaple.org,2016-03-12:articles/2016/03/母羊生羊问题解决.html</id><summary type="html">&lt;p&gt;想了&lt;/p&gt;
&lt;p&gt;问题是这样的: 1只母羊，在第2年和第4年生下小母羊,在第5年死去,问N年后有多少母羊?&lt;/p&gt;
&lt;p&gt;想了很久，终于有了一个思路，不过目前效率不高  &lt;/p&gt;
&lt;p&gt;给出代码:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;a = [1]
def sheep(N):
    N = int(N)
    if N == 1:
        return a
    for n,k in enumerate(a):
        a[n] += 1
    for n,k in enumerate(a):
        if k == 2:
            a.append(1)
        if k == 4:
            a.append(1)
    return sheep(N-1)

while True:
    b = sheep(input(&amp;#39;请输入年份:\n&amp;#39;))
    c = [i for i in b if i &amp;lt; 5]
    print(&amp;#39;母羊总数: %d&amp;#39;%len(c))
    a = [1]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category></entry></feed>