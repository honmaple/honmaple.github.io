<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>honmaple's blog</title><link href="http://honmaple.me/" rel="alternate"></link><link href="http://honmaple.me/feeds/all.rss.xml" rel="self"></link><id>http://honmaple.me/</id><updated>2018-02-04T16:06:32+08:00</updated><entry><title>lua gist</title><link href="http://honmaple.me/articles/2018/01/lua%20gist.html" rel="alternate"></link><published>2018-01-29T17:46:14+08:00</published><updated>2018-02-04T16:06:32+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-01-29:/articles/2018/01/lua gist.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-95787505"&gt;lua分割字符串&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-95787505"&gt;lua分割字符串&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;ngx_find&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ngx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;

&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;nfield&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nstart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;nfirst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nlast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;string.find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;-- local nfirst,nlast = ngx_find(str, sep, &amp;quot;jo&amp;quot;)&lt;/span&gt;
    &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;nfirst&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;~=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="kr"&gt;do&lt;/span&gt;
        &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nfield …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-95787505"&gt;lua分割字符串&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-95787505"&gt;lua分割字符串&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;ngx_find&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ngx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;

&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;nfield&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nstart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;nfirst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nlast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;string.find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;-- local nfirst,nlast = ngx_find(str, sep, &amp;quot;jo&amp;quot;)&lt;/span&gt;
    &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;nfirst&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;~=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="kr"&gt;do&lt;/span&gt;
        &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nfield&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;string.sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nstart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nfirst&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;nfield&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nfield&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;nstart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nlast&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;nfirst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nlast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;string.find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nstart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;-- nfirst,nlast = ngx_find(str, sep, &amp;quot;jo&amp;quot;, nil, nstart)&lt;/span&gt;
        &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="kr"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nfield&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;string.sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nstart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="kr"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="lua"></category><category term="coding"></category></entry><entry><title>emacs自动更新文件头</title><link href="http://honmaple.me/articles/2018/01/emacs%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%96%87%E4%BB%B6%E5%A4%B4.html" rel="alternate"></link><published>2018-01-09T16:00:45+08:00</published><updated>2018-01-14T16:42:06+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-01-09:/articles/2018/01/emacs自动更新文件头.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-10626316"&gt;自动更新Last Updated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-71116359"&gt;自动更新Filename&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-81365469"&gt;自动更新Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;前面已经说过，可以使用&lt;b&gt;auto-insert&lt;/b&gt;自动添加文件头，今天来说一说自动更新文件头，比如说每次保存时自动更新&lt;b&gt;last updated&lt;/b&gt;字段&lt;/p&gt;


&lt;h3 id="org-10626316"&gt;自动更新Last Updated&lt;/h3&gt;
&lt;p&gt;如果使用的是header2,直接设置相关的变量就可，假如使用的是&lt;b&gt;auto-insert&lt;/b&gt;，同样也可以使用emacs内置的&lt;b&gt;time-stamp&lt;/b&gt;对Last Updated进行自动更新&lt;/p&gt;

&lt;p&gt;time-stamp默认使用&lt;code&gt;Time-stamp:&lt;/code&gt;,如果要对&lt;code&gt;Last Updated&lt;/code&gt;进行自动更新，只需要简单的设置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-active&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-line-limit&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-start&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[lL]ast[ -][uU]pdate[ \t]*:?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-end&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-10626316"&gt;自动更新Last Updated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-71116359"&gt;自动更新Filename&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-81365469"&gt;自动更新Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;前面已经说过，可以使用&lt;b&gt;auto-insert&lt;/b&gt;自动添加文件头，今天来说一说自动更新文件头，比如说每次保存时自动更新&lt;b&gt;last updated&lt;/b&gt;字段&lt;/p&gt;


&lt;h3 id="org-10626316"&gt;自动更新Last Updated&lt;/h3&gt;
&lt;p&gt;如果使用的是header2,直接设置相关的变量就可，假如使用的是&lt;b&gt;auto-insert&lt;/b&gt;，同样也可以使用emacs内置的&lt;b&gt;time-stamp&lt;/b&gt;对Last Updated进行自动更新&lt;/p&gt;

&lt;p&gt;time-stamp默认使用&lt;code&gt;Time-stamp:&lt;/code&gt;,如果要对&lt;code&gt;Last Updated&lt;/code&gt;进行自动更新，只需要简单的设置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-active&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-line-limit&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-start&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[lL]ast[ -][uU]pdate[ \t]*:?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-end&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; %#A %Y-%02m-%02d %02H:%02M:%02S (%Z)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;然后添加
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;before-save-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;time-stamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;这样就能在每次保存时自动更新相应的字段了&lt;/p&gt;

&lt;h3 id="org-71116359"&gt;自动更新Filename&lt;/h3&gt;
&lt;p&gt;之前遇到过，使用&lt;b&gt;auto-insert&lt;/b&gt;在每次创建新文件时自动添加了文件头，但后面文件名被修改了，文件头里的文件名却不会自动更改，基于这个原因需要自己实现一个函数(我没有找到可以使用的已经存在的package)&lt;/p&gt;

&lt;p&gt;先理一理逻辑: 只需要查找当前文件前几行信息，如果找到&lt;code&gt;File Name:&lt;/code&gt;字段，获取字段信息，与当前文件名进行对比，如果不一致则替换为当前文件名,直接给出代码吧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;查找当前文件前几行
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;save-excursion&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-min&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;;;跳转到开头&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;;; 查找&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;1+&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;forward-line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;获取当前文件名
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;查找File Name
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;looking-at&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.*\\(File Name:\\)\\(.*\\)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;对文件名进行比对与替换
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-beginning&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-end&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string=&lt;/span&gt; &lt;span class="nv"&gt;文件名&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;match-string&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;delete-region&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="nv"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即可得到相关的完整函数(完整函数后面再讲)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="org-81365469"&gt;自动更新Email&lt;/h3&gt;
&lt;p&gt;工作和平时使用的邮箱不一样，我虽然设置了&lt;i&gt;at_home&lt;/i&gt;变量区分工作与平时的邮箱,但不是每次我都记得要更新这个变量，所以有了这个需要，自动将文件头里的email信息更改为平时所用的邮箱，大致逻辑与自动更新Filename相同，所以我写了一个&lt;b&gt;macro&lt;/b&gt;来自动生成相关的代码&lt;/p&gt;

&lt;p&gt;直接给出代码
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/header-update-action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;A.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-beginning&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-end&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string=&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;match-string&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;delete-region&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="nv"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/header-update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;regex&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;B.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;save-excursion&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-min&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;looking-at&lt;/span&gt; &lt;span class="nv"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update-action&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;1+&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;forward-line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defmacro&lt;/span&gt; &lt;span class="nv"&gt;maple/header-update-engine&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="nv"&gt;regex&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt; &lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;C.&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;intern&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;maple/header-update-%s&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
     &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Update %s with regex.&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;这样，我就可以调用&lt;b&gt;macro&lt;/b&gt;来生成代码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动更新Filename
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update-engine&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;quot;.*\\(File Name:\\)\\(.*\\)&amp;quot;&lt;/span&gt;
                            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;生成一个&lt;code&gt;maple/header-update-filename&lt;/code&gt;的函数,只要调用它即可更新文件名信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;自动更新email
&lt;p&gt;同样的
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update-engine&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;quot;.*\\(Email:\\)\\(.*\\)&amp;quot;&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;quot;youemail@gmail.com&amp;quot;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

生成一个可供调用的&lt;code&gt;maple/header-update-email&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果想要添加其它功能，只要使用&lt;code&gt;maple/header-update-engine&lt;/code&gt;即可&lt;/p&gt;

&lt;p&gt;相关的配置可以在我的&lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/header/header.el"&gt;github&lt;/a&gt;上找到&lt;/p&gt;</content><category term="linux"></category><category term="emacs"></category></entry><entry><title>emacs自动添加文件头</title><link href="http://honmaple.me/articles/2018/01/emacs%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E6%96%87%E4%BB%B6%E5%A4%B4.html" rel="alternate"></link><published>2018-01-08T15:08:51+08:00</published><updated>2018-01-14T16:42:15+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-01-08:/articles/2018/01/emacs自动添加文件头.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-93067416"&gt;基础使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-20215040"&gt;自定义文件头&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1181271"&gt;提取文件头公共信息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;想要在emacs中添加文件头有好几种方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接手打&lt;/li&gt;
&lt;li&gt;使用模板yasnippet&lt;/li&gt;
&lt;li&gt;使用header2&lt;/li&gt;
&lt;li&gt;使用内置的package &lt;b&gt;auto-insert&lt;/b&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;header2可能是最方便的一种自动添加文件头的方式，但我之前使用过，想要自定义自己想要的内容很难，而且白白浪费header2的功能&lt;/p&gt;

&lt;p&gt;今天主要说一说emacs内置里&lt;b&gt;auto-insert&lt;/b&gt;,使用它在创建文件时自动添加文件头信息&lt;/p&gt;

&lt;h3 id="org-93067416"&gt;基础使用&lt;/h3&gt;
&lt;p&gt;直接&lt;code&gt;(auto-insert-mode)&lt;/code&gt;
并且设置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(setq auto-insert-query nil) ;; 不提醒
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id="org-20215040"&gt;自定义文件头&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;auto-insert-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nv"&gt;python-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Python program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/usr/bin/env python\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# -*- coding: utf-8 -*-\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-93067416"&gt;基础使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-20215040"&gt;自定义文件头&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1181271"&gt;提取文件头公共信息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;想要在emacs中添加文件头有好几种方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接手打&lt;/li&gt;
&lt;li&gt;使用模板yasnippet&lt;/li&gt;
&lt;li&gt;使用header2&lt;/li&gt;
&lt;li&gt;使用内置的package &lt;b&gt;auto-insert&lt;/b&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;header2可能是最方便的一种自动添加文件头的方式，但我之前使用过，想要自定义自己想要的内容很难，而且白白浪费header2的功能&lt;/p&gt;

&lt;p&gt;今天主要说一说emacs内置里&lt;b&gt;auto-insert&lt;/b&gt;,使用它在创建文件时自动添加文件头信息&lt;/p&gt;

&lt;h3 id="org-93067416"&gt;基础使用&lt;/h3&gt;
&lt;p&gt;直接&lt;code&gt;(auto-insert-mode)&lt;/code&gt;
并且设置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(setq auto-insert-query nil) ;; 不提醒
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id="org-20215040"&gt;自定义文件头&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;auto-insert-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nv"&gt;python-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Python program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/usr/bin/env python\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# -*- coding: utf-8 -*-\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# File Name: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Author: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Email: &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Created: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Last Update: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#          By: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Description: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;c-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;/**************************************************************************\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; File Name: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Author: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Email: &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Created: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Last Update: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;           By: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Description: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; **************************************************************************/\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#include&amp;lt;stdio.h&amp;gt;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#include&amp;lt;string.h&amp;gt;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;sh-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Shell script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/bin/bash\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# File Name: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Author: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Email: &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Created: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Last Update: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#          By: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Description: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************/\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="org-1181271"&gt;提取文件头公共信息&lt;/h3&gt;
&lt;p&gt;之前的模板有很多重复的内容，写一个函数把公共的信息提取出来&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;基础信息
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple//insert-string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;make-string&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="sc"&gt;?*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;File Name: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Author: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Email: &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Created: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Last Update: \n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;         By: \n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Description: \n&amp;quot;&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;make-string&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="sc"&gt;?*&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;插入注释信息
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/insert-string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt; &lt;span class="nv"&gt;comment-start&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;mapconcat&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;split-string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple//insert-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;更改模板
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;auto-insert-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nv"&gt;ruby-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Ruby program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/usr/bin/env ruby\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# -*- encoding: utf-8 -*-\n&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;python-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Python program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/usr/bin/env python\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# -*- coding: utf-8 -*-\n&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;c-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;/*&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*/\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#include&amp;lt;stdio.h&amp;gt;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#include&amp;lt;string.h&amp;gt;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;sh-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Shell script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/bin/bash\n&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;go-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Go program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;/*&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*/\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相关的配置可以在我的&lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/lisp/init-auto-insert.el"&gt;github&lt;/a&gt;上找到&lt;/p&gt;</content><category term="linux"></category><category term="emacs"></category></entry><entry><title>helm与ivy简单对比</title><link href="http://honmaple.me/articles/2018/01/helm%E4%B8%8Eivy%E7%AE%80%E5%8D%95%E5%AF%B9%E6%AF%94.html" rel="alternate"></link><published>2018-01-06T17:31:27+08:00</published><updated>2018-01-26T01:12:26+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-01-06:/articles/2018/01/helm与ivy简单对比.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-69389234"&gt;counsel-find-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43876094"&gt;tab键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-80057801"&gt;记忆多个按键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-88766867"&gt;模糊搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1390253"&gt;候选词按使用频率排序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-31058300"&gt;minibuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-94661956"&gt;dired中复制或重命名文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-79565840"&gt;sudo edit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;我为什么放弃ivy回到了helm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;说一说ivy用的不爽的地方吧&lt;/p&gt;

&lt;h3 id="org-69389234"&gt;counsel-find-file&lt;/h3&gt;
&lt;p&gt;counsel-find-file作为最常用的命令,ivy竟然没有把默认的find-file进行覆写，比如我在dired中想要复制文件，我习惯使用&lt;code&gt;C-h&lt;/code&gt;退回上一个目录，但即使我之前已经设置了
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;:map&lt;/span&gt; &lt;span class="nv"&gt;counsel-find-file-map&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C-h&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;counsel-up-directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

但只有在使用&lt;code&gt;counsel-find-file&lt;/code&gt;时有效,类似dired中是无效的，相比较于&lt;code&gt;helm-find-files&lt;/code&gt;把&lt;code&gt;find-file&lt;/code&gt;进行覆写，无论何时都能使用自己自定义的按键，这很不爽&lt;/p&gt;

&lt;h3 id="org-43876094"&gt;tab键&lt;/h3&gt;
&lt;p&gt;在&lt;b&gt;helm&lt;/b&gt;中，tab仅作为补全使用，想要打开选中项，则需要按一下&lt;code&gt;enter&lt;/code&gt;键,而在&lt;b&gt;ivy&lt;/b&gt;中 …&lt;/p&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-69389234"&gt;counsel-find-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43876094"&gt;tab键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-80057801"&gt;记忆多个按键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-88766867"&gt;模糊搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1390253"&gt;候选词按使用频率排序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-31058300"&gt;minibuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-94661956"&gt;dired中复制或重命名文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-79565840"&gt;sudo edit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;我为什么放弃ivy回到了helm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;说一说ivy用的不爽的地方吧&lt;/p&gt;

&lt;h3 id="org-69389234"&gt;counsel-find-file&lt;/h3&gt;
&lt;p&gt;counsel-find-file作为最常用的命令,ivy竟然没有把默认的find-file进行覆写，比如我在dired中想要复制文件，我习惯使用&lt;code&gt;C-h&lt;/code&gt;退回上一个目录，但即使我之前已经设置了
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;:map&lt;/span&gt; &lt;span class="nv"&gt;counsel-find-file-map&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C-h&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;counsel-up-directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

但只有在使用&lt;code&gt;counsel-find-file&lt;/code&gt;时有效,类似dired中是无效的，相比较于&lt;code&gt;helm-find-files&lt;/code&gt;把&lt;code&gt;find-file&lt;/code&gt;进行覆写，无论何时都能使用自己自定义的按键，这很不爽&lt;/p&gt;

&lt;h3 id="org-43876094"&gt;tab键&lt;/h3&gt;
&lt;p&gt;在&lt;b&gt;helm&lt;/b&gt;中，tab仅作为补全使用，想要打开选中项，则需要按一下&lt;code&gt;enter&lt;/code&gt;键,而在&lt;b&gt;ivy&lt;/b&gt;中，我不知道开发者怎么想的, &lt;b&gt;我需要记住两个或两个以上的按键&lt;/b&gt;。&lt;/p&gt;

&lt;p&gt;在ivy中，tab键就像命令名称&lt;code&gt;ivy-alt-done&lt;/code&gt;一样，意味着按一下tab,就能得到helm中tab and enter的效果。&lt;/p&gt;

&lt;p&gt;这很方便是不是？&lt;/p&gt;

&lt;p&gt;但是，如果我要在emacs中重命名一个文件，把&lt;b&gt;aaa.py&lt;/b&gt;重命名为&lt;b&gt;aaa.py.bak&lt;/b&gt;，这该怎么办，在helm中我可以很容易的重命名，因为tab只是补全，我在tab后输入&lt;b&gt;.bak&lt;/b&gt;然后enter就行，在ivy中，我得一个字符一个字符手打，或者记住其它按键补全选中项，然后才能重命名&lt;/p&gt;

&lt;h3 id="org-80057801"&gt;记忆多个按键&lt;/h3&gt;
&lt;p&gt;ivy有这样一个问题,它不会像helm一样在第一行显示用户输入的字符，在ivy的很多issue中都有人提了这个问题，如果当前目录下有名为&lt;b&gt;aaa&lt;/b&gt;的目录,这是我想要创建一个&lt;b&gt;aaa.py&lt;/b&gt;的文件，ivy会列出aaa这个目录，那是我该怎么创建aaa.py文件。方法是一个新的命令&lt;code&gt;ivy-immediate-done&lt;/code&gt;,而不是&lt;code&gt;ivy-alt-done&lt;/code&gt;&lt;/p&gt;

&lt;h3 id="org-88766867"&gt;模糊搜索&lt;/h3&gt;
&lt;p&gt;在helm中我可以很容易的使用模糊搜索，ivy中也一样，只要简单的设置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;ivy-re-builders-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;ivy--regex-fuzzy&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

但ivy中有这样一个问题，空格键不能在模糊匹配中使用，/汗，作为从helm转入ivy的人，经常会不经意间在输入时按下空格键，然后，What? ivy中搜索变成空了&lt;/p&gt;

&lt;h3 id="org-1390253"&gt;候选词按使用频率排序&lt;/h3&gt;
&lt;p&gt;helm默认支持，但在ivy中我需要安装&lt;b&gt;smex&lt;/b&gt;，只安装&lt;b&gt;smex&lt;/b&gt;，又不需要什么配置，文档也没有提供（这是我摸索出来的），有些莫名其妙&lt;/p&gt;

&lt;h3 id="org-31058300"&gt;minibuffer&lt;/h3&gt;
&lt;p&gt;这是我对ivy种草的原因，从&lt;b&gt;minibuffer&lt;/b&gt;中弹出待选项，多么帅气，哪里像helm，使用一个buffer作为弹出框，还带一个"丑丑"的&lt;b&gt;mode-line&lt;/b&gt;，但后面仔细研究后，才发现helm从当前buffer中弹出helm-buffer是多么明智的选择，视野不会移动到当前buffer以外的地方，尤其是在屏幕较大的时候&lt;/p&gt;

   &lt;div class="row"&gt;
     &lt;div class="col-md-6"&gt;
       &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2018/01/helm-buffer.png-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2018/01/helm-buffer.png-thumb" class="lazyload" /&gt;&lt;/a&gt;
     &lt;/div&gt;
     &lt;div class="col-md-6"&gt;
       &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2018/01/ivy-minibuffer.png-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2018/01/ivy-minibuffer.png-thumb" class="lazyload" /&gt;&lt;/a&gt;
     &lt;/div&gt;
   &lt;/div&gt;

&lt;h3 id="org-94661956"&gt;dired中复制或重命名文件&lt;/h3&gt;
&lt;p&gt;我之前想要复制或重命名一个文件，只要进入&lt;b&gt;dired&lt;/b&gt;中按&lt;code&gt;C&lt;/code&gt;或&lt;code&gt;R&lt;/code&gt;，然后选择目标就行，但不知道为什么，使用ivy时复制重命名总是报错，不成功(后面也没有继续折腾)&lt;/p&gt;

&lt;h3 id="org-79565840"&gt;sudo edit&lt;/h3&gt;
&lt;p&gt;我从&lt;b&gt;spacemacs&lt;/b&gt;中复制了一段代码
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;file/sudo-edit&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;p&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;fname&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;arg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;read-file-name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;File: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;find-file&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;cond&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;string-match-p&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;^/ssh:&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;with-temp-buffer&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;search-backward&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;last-match-end&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;last-ssh-hostname&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;string-match&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;@\\\([^:|]+\\\)&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt; &lt;span class="nv"&gt;last-match-end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;last-ssh-hostname&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;match-string&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;last-ssh-hostname&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;last-match-end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-end&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;|sudo:%s&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;last-ssh-hostname&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-string&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
           &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/sudo:root@localhost:&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

可以很容易地使用&lt;b&gt;sudo&lt;/b&gt;对文件进行进行编辑，但使用ivy时不成功，印象分又&lt;b&gt;-1&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;helm中也有用的不爽的地方，比如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有个header-line是什么鬼
&lt;p&gt;设置了&lt;code&gt;helm-display-header-line&lt;/code&gt;为&lt;code&gt;nil&lt;/code&gt;还是有，字体那么大，背景那么丑，显示出来干嘛，虽然后面设置&lt;code&gt;height&lt;/code&gt;为&lt;code&gt;0.1&lt;/code&gt;解决&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;在mode-line显示help信息干嘛
&lt;p&gt;我已經对helm很熟悉了，不需要这些help info，后面设置&lt;code&gt;spaceline-helm-help-p&lt;/code&gt;为&lt;code&gt;nil&lt;/code&gt;解决&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;multi source
&lt;p&gt;我不知道这对谁有用，反正对我没用&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;...
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，很多人提到的ivy速度要比helm快，这个就仁者见仁，智者见智了，如果说的是启动速度，我的emac配置已经优化为1s内启动，如果是弹出速度，我没有具体对比过，不过就个人而言，helm与ivy弹出速度感觉两者都差不多&lt;/p&gt;

&lt;p&gt;总之，helm大而全，ivy小而精，但helm有过多的为用户做出选择，ivy在细节上打磨的不太够，哪个用得爽就选谁吧，反正我用&lt;b&gt;helm&lt;/b&gt;!&lt;/p&gt;</content><category term="linux"></category><category term="emacs"></category></entry><entry><title>关于时间与空间的猜想</title><link href="http://honmaple.me/articles/2018/01/%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E4%B8%8E%E7%A9%BA%E9%97%B4%E7%9A%84%E7%8C%9C%E6%83%B3.html" rel="alternate"></link><published>2018-01-01T14:22:02+08:00</published><updated>2018-01-14T15:02:25+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-01-01:/articles/2018/01/关于时间与空间的猜想.html</id><summary type="html">
&lt;ul&gt;
&lt;li&gt;背景
&lt;p&gt;不知道从何时开始，就听过这样一个说法: 如果人类所达到的速度超越光速,那么人类将穿越时空。前些年网文电视剧可谓穿越盛行，今天我也来胡言乱语一番!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;胡言乱语
&lt;p&gt;光从某一&lt;b&gt;点x&lt;/b&gt;出发，在其经过的路径范围内，有一不同于光所在&lt;b&gt;空间y&lt;/b&gt;的&lt;b&gt;空间z&lt;/b&gt;，z的时间流速与y空间的时间流速不一样，或者说&lt;b&gt;z空间的时间流速小于于y空间的流速&lt;/b&gt;，即z空间一天，y空间一年。&lt;/p&gt;

&lt;p&gt;由此就可发现，当y空间内的光从x点出发，在经过z空间范围内时，由于在z，y空间时间流速不一致，原本到达&lt;b&gt;k点&lt;/b&gt; (x到k的距离大于x到z空间的距离)所花费的时间为1s，但z空间的存在，需要花费0.3s才能通过z空间的范围，现在只需要&lt;b&gt;远小于0.3s&lt;/b&gt;的时间就能通过z空间的范围。&lt;/p&gt;

&lt;p&gt;相对于y空间而言，原本需要花费1s才能到达k点，现在也许只需要0.8s，如果简单按照速度公式v=S/t,光速将超越299792458m/s,相对而言，y空间与z空间也会有所谓的穿越。&lt;/p&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然 …&lt;/p&gt;</summary><content type="html">
&lt;ul&gt;
&lt;li&gt;背景
&lt;p&gt;不知道从何时开始，就听过这样一个说法: 如果人类所达到的速度超越光速,那么人类将穿越时空。前些年网文电视剧可谓穿越盛行，今天我也来胡言乱语一番!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;胡言乱语
&lt;p&gt;光从某一&lt;b&gt;点x&lt;/b&gt;出发，在其经过的路径范围内，有一不同于光所在&lt;b&gt;空间y&lt;/b&gt;的&lt;b&gt;空间z&lt;/b&gt;，z的时间流速与y空间的时间流速不一样，或者说&lt;b&gt;z空间的时间流速小于于y空间的流速&lt;/b&gt;，即z空间一天，y空间一年。&lt;/p&gt;

&lt;p&gt;由此就可发现，当y空间内的光从x点出发，在经过z空间范围内时，由于在z，y空间时间流速不一致，原本到达&lt;b&gt;k点&lt;/b&gt; (x到k的距离大于x到z空间的距离)所花费的时间为1s，但z空间的存在，需要花费0.3s才能通过z空间的范围，现在只需要&lt;b&gt;远小于0.3s&lt;/b&gt;的时间就能通过z空间的范围。&lt;/p&gt;

&lt;p&gt;相对于y空间而言，原本需要花费1s才能到达k点，现在也许只需要0.8s，如果简单按照速度公式v=S/t,光速将超越299792458m/s,相对而言，y空间与z空间也会有所谓的穿越。&lt;/p&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，z空间也可以看作是一个y空间里的一个介质，光速不能通过简单的线性公式算出，反正我是在胡言乱语而已&lt;/p&gt;</content><category term="life"></category></entry><entry><title>linux tips</title><link href="http://honmaple.me/articles/2017/12/linux%20tips.html" rel="alternate"></link><published>2017-12-19T17:30:18+08:00</published><updated>2018-01-17T14:17:19+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-12-19:/articles/2017/12/linux tips.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-70878023"&gt;获取文件压缩后的md5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-51704095"&gt;zip打包排除文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-22042672"&gt;linux下gif播放&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-70878023"&gt;获取文件压缩后的md5&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar -cf - action_plugins/ group_vars/ | md5sum
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-51704095"&gt;zip打包排除文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;zip -r -x=.git/* -x=*.pyc ../release.py *
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-22042672"&gt;linux下gif播放&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;feh&lt;/b&gt;只支持静态文件,可用
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;animate output.gif
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-70878023"&gt;获取文件压缩后的md5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-51704095"&gt;zip打包排除文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-22042672"&gt;linux下gif播放&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-70878023"&gt;获取文件压缩后的md5&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar -cf - action_plugins/ group_vars/ | md5sum
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-51704095"&gt;zip打包排除文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;zip -r -x=.git/* -x=*.pyc ../release.py *
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-22042672"&gt;linux下gif播放&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;feh&lt;/b&gt;只支持静态文件,可用
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;animate output.gif
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;</content><category term="linux"></category></entry><entry><title>十二月十日小记</title><link href="http://honmaple.me/articles/2017/12/%E5%8D%81%E4%BA%8C%E6%9C%88%E5%8D%81%E6%97%A5%E5%B0%8F%E8%AE%B0.html" rel="alternate"></link><published>2017-12-10T23:10:26+08:00</published><updated>2017-12-10T23:10:26+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-12-10:/articles/2017/12/十二月十日小记.html</id><summary type="html">
&lt;p&gt;今天真是不错的一天&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;今天出门，在电梯遇到一人，“小伙子，你有二十了吧”，“我今年二十X了”，“我看你不到二十的样子”，“我以为我看起来挺老的”，“怎么会。。。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;以前只是在电视新闻上看到有人直接撞到玻璃门上，其实真不怪他们，有时候玻璃门真看起来没有一样。我今天就这样直接撞上去了，说实话，还真疼&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;附几张今天用手机拍的照片，昨天用相机拍的raw格式暂时打不开/捂脸&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="row"&gt;
  &lt;div class="col-md-6"&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_153834.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_153834.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154518.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154518.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154530.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154530.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class="col-md-6"&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/PANO_20171210_154546.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/PANO_20171210_154546.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154137.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154137.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154951.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154951.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;</summary><content type="html">
&lt;p&gt;今天真是不错的一天&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;今天出门，在电梯遇到一人，“小伙子，你有二十了吧”，“我今年二十X了”，“我看你不到二十的样子”，“我以为我看起来挺老的”，“怎么会。。。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;以前只是在电视新闻上看到有人直接撞到玻璃门上，其实真不怪他们，有时候玻璃门真看起来没有一样。我今天就这样直接撞上去了，说实话，还真疼&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;附几张今天用手机拍的照片，昨天用相机拍的raw格式暂时打不开/捂脸&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="row"&gt;
  &lt;div class="col-md-6"&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_153834.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_153834.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154518.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154518.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154530.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154530.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class="col-md-6"&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/PANO_20171210_154546.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/PANO_20171210_154546.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154137.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154137.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154951.jpg-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2017/12/IMG_20171210_154951.jpg-thumb" class="lazyload" /&gt;&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;</content><category term="life"></category></entry><entry><title>python尾递归优化</title><link href="http://honmaple.me/articles/2017/12/python%E5%B0%BE%E9%80%92%E5%BD%92%E4%BC%98%E5%8C%96.html" rel="alternate"></link><published>2017-12-04T10:23:56+08:00</published><updated>2017-12-04T10:23:56+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-12-04:/articles/2017/12/python尾递归优化.html</id><summary type="html">

&lt;p&gt;参考 &lt;a href="https://segmentfault.com/a/1190000007641519"&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TailRecurseException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;BaseException&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tail_call_optimized&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    This function decorates a function with tail call&lt;/span&gt;
&lt;span class="sd"&gt;    optimization. It does this by throwing an exception&lt;/span&gt;
&lt;span class="sd"&gt;    if it is it&amp;#39;s own grandparent, and catching such&lt;/span&gt;
&lt;span class="sd"&gt;    exceptions to fake the …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">

&lt;p&gt;参考 &lt;a href="https://segmentfault.com/a/1190000007641519"&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TailRecurseException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;BaseException&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tail_call_optimized&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    This function decorates a function with tail call&lt;/span&gt;
&lt;span class="sd"&gt;    optimization. It does this by throwing an exception&lt;/span&gt;
&lt;span class="sd"&gt;    if it is it&amp;#39;s own grandparent, and catching such&lt;/span&gt;
&lt;span class="sd"&gt;    exceptions to fake the tail call optimization.&lt;/span&gt;

&lt;span class="sd"&gt;    This function fails if the decorated&lt;/span&gt;
&lt;span class="sd"&gt;    function recurses in a non-tail context.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_getframe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="c1"&gt;# 为什么是grandparent, 函数默认的第一层递归是父调用,&lt;/span&gt;
        &lt;span class="c1"&gt;# 对于尾递归, 不希望产生新的函数调用(即:祖父调用),&lt;/span&gt;
        &lt;span class="c1"&gt;# 所以这里抛出异常, 拿到参数, 退出被修饰函数的递归调用栈!(后面有动图分析)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_back&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_back&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_back&lt;/span&gt; \
            &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_back&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_back&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# 抛出异常&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;TailRecurseException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;TailRecurseException&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="c1"&gt;# 捕获异常, 拿到参数, 退出被修饰函数的递归调用栈&lt;/span&gt;
                    &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;
                    &lt;span class="n"&gt;kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;

    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__doc__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__doc__&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@tail_call_optimized&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;calculate a factorial&amp;quot;&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pudb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;set_trace&lt;/span&gt;
    &lt;span class="n"&gt;set_trace&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;</content><category term="python"></category></entry><entry><title>使用tornado实时输出日志</title><link href="http://honmaple.me/articles/2017/11/%E4%BD%BF%E7%94%A8tornado%E5%AE%9E%E6%97%B6%E8%BE%93%E5%87%BA%E6%97%A5%E5%BF%97.html" rel="alternate"></link><published>2017-11-19T21:39:43+08:00</published><updated>2017-11-19T21:39:43+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-11-19:/articles/2017/11/使用tornado实时输出日志.html</id><summary type="html">

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tornado&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tornado.web&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Application&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tornado.web&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RequestHandler&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tornado.websocket&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;script src=&amp;quot;https://cdn.bootcss.com/jquery …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tornado&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tornado.web&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Application&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tornado.web&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RequestHandler&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tornado.websocket&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;script src=&amp;quot;https://cdn.bootcss.com/jquery/2.1.4/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;script src=&amp;quot;https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;script type=&amp;quot;text/javascript&amp;quot; charset=&amp;quot;utf-8&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;     $(function() {&lt;/span&gt;
&lt;span class="s1"&gt;         if (typeof String.prototype.startsWith != &amp;#39;function&amp;#39;) {&lt;/span&gt;
&lt;span class="s1"&gt;             String.prototype.startsWith = function (prefix){&lt;/span&gt;
&lt;span class="s1"&gt;                 return this.slice(0, prefix.length) === prefix;&lt;/span&gt;
&lt;span class="s1"&gt;             };&lt;/span&gt;
&lt;span class="s1"&gt;         }&lt;/span&gt;
&lt;span class="s1"&gt;         var output = $(&amp;quot;#stdout-output&amp;quot;).html();&lt;/span&gt;
&lt;span class="s1"&gt;         function addToOutput(msg) {&lt;/span&gt;
&lt;span class="s1"&gt;             /* output = $(&amp;quot;#output&amp;quot;).html() + &amp;#39;&amp;lt;br/&amp;gt;&amp;#39; + msg;*/&lt;/span&gt;
&lt;span class="s1"&gt;             if (msg.startsWith(&amp;#39;stderr:&amp;#39;)) {&lt;/span&gt;
&lt;span class="s1"&gt;                 if (!$(&amp;#39;a[href=&amp;quot;#stderr&amp;quot;]&amp;#39;).hasClass(&amp;quot;alarm-report&amp;quot;) &amp;amp;&amp;amp; $(&amp;#39;ul[role=&amp;quot;tablist&amp;quot;] li.active a&amp;#39;).attr(&amp;#39;href&amp;#39;) != &amp;#39;#stderr&amp;#39;) {&lt;/span&gt;
&lt;span class="s1"&gt;                     $(&amp;#39;a[href=&amp;quot;#stderr&amp;quot;]&amp;#39;).addClass(&amp;quot;alarm-report&amp;quot;)&lt;/span&gt;
&lt;span class="s1"&gt;                 }&lt;/span&gt;
&lt;span class="s1"&gt;                 output = $(&amp;quot;#stderr-output&amp;quot;).html() + msg.replace(/^stderr:/,&amp;#39;&amp;#39;);&lt;/span&gt;
&lt;span class="s1"&gt;                 $(&amp;quot;#stderr-output&amp;quot;).html(output);&lt;/span&gt;
&lt;span class="s1"&gt;                 $(&amp;#39;#stderr-output&amp;#39;).scrollTop($(&amp;#39;#stderr-output&amp;#39;)[0].scrollHeight);&lt;/span&gt;
&lt;span class="s1"&gt;             }else {&lt;/span&gt;
&lt;span class="s1"&gt;                 if (!$(&amp;#39;a[href=&amp;quot;#stdout&amp;quot;]&amp;#39;).hasClass(&amp;quot;alarm-report&amp;quot;) &amp;amp;&amp;amp; $(&amp;#39;ul[role=&amp;quot;tablist&amp;quot;] li.active a&amp;#39;).attr(&amp;#39;href&amp;#39;) != &amp;#39;#stdout&amp;#39;) {&lt;/span&gt;
&lt;span class="s1"&gt;                     $(&amp;#39;a[href=&amp;quot;#stdout&amp;quot;]&amp;#39;).addClass(&amp;quot;alarm-report&amp;quot;)&lt;/span&gt;
&lt;span class="s1"&gt;                 }&lt;/span&gt;
&lt;span class="s1"&gt;                 output = $(&amp;quot;#stdout-output&amp;quot;).html() + msg.replace(/^stdout:/,&amp;#39;&amp;#39;);&lt;/span&gt;
&lt;span class="s1"&gt;                 $(&amp;quot;#stdout-output&amp;quot;).html(output);&lt;/span&gt;
&lt;span class="s1"&gt;                 $(&amp;#39;#stdout-output&amp;#39;).scrollTop($(&amp;#39;#stdout-output&amp;#39;)[0].scrollHeight);&lt;/span&gt;
&lt;span class="s1"&gt;             }&lt;/span&gt;
&lt;span class="s1"&gt;         }&lt;/span&gt;
&lt;span class="s1"&gt;         $(&amp;#39;a#clear&amp;#39;).click(function() {&lt;/span&gt;
&lt;span class="s1"&gt;             var active_tab = $(&amp;#39;ul[role=&amp;quot;tablist&amp;quot;] li.active a&amp;#39;).attr(&amp;#39;href&amp;#39;);&lt;/span&gt;
&lt;span class="s1"&gt;             $(active_tab + &amp;#39;-output&amp;#39;).html(&amp;#39;&amp;#39;);&lt;/span&gt;
&lt;span class="s1"&gt;         })&lt;/span&gt;
&lt;span class="s1"&gt;         $(&amp;#39;a#load&amp;#39;).click(function() {&lt;/span&gt;
&lt;span class="s1"&gt;             var active_tab = $(&amp;#39;ul[role=&amp;quot;tablist&amp;quot;] li.active a&amp;#39;).attr(&amp;#39;href&amp;#39;);&lt;/span&gt;
&lt;span class="s1"&gt;             ws.send(JSON.stringify({room:&amp;#39;load&amp;#39;,msg:active_tab.replace(/^#/,&amp;#39;&amp;#39;)}));&lt;/span&gt;
&lt;span class="s1"&gt;         })&lt;/span&gt;
&lt;span class="s1"&gt;        $(&amp;#39;a[data-toggle=&amp;quot;tab&amp;quot;]&amp;#39;).on(&amp;#39;shown.bs.tab&amp;#39;, function (e) {&lt;/span&gt;
&lt;span class="s1"&gt;            if ($(e.target).hasClass(&amp;quot;alarm-report&amp;quot;)) {&lt;/span&gt;
&lt;span class="s1"&gt;                $(e.target).removeClass(&amp;quot;alarm-report&amp;quot;)&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        })&lt;/span&gt;
&lt;span class="s1"&gt;         if (&amp;quot;MozWebSocket&amp;quot; in window) {&lt;/span&gt;
&lt;span class="s1"&gt;             WebSocket = MozWebSocket;&lt;/span&gt;
&lt;span class="s1"&gt;         }&lt;/span&gt;
&lt;span class="s1"&gt;         if (WebSocket) {&lt;/span&gt;
&lt;span class="s1"&gt;             var ws = new WebSocket(&amp;quot;ws://&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;/show&amp;quot;);&lt;/span&gt;
&lt;span class="s1"&gt;             ws.onopen = function() {};&lt;/span&gt;
&lt;span class="s1"&gt;             ws.onmessage = function (evt) {&lt;/span&gt;
&lt;span class="s1"&gt;                 addToOutput(evt.data);&lt;/span&gt;
&lt;span class="s1"&gt;             };&lt;/span&gt;
&lt;span class="s1"&gt;             ws.onclose = function() {};&lt;/span&gt;
&lt;span class="s1"&gt;         } else {&lt;/span&gt;
&lt;span class="s1"&gt;             alert(&amp;quot;WebSocket not supported&amp;quot;);&lt;/span&gt;
&lt;span class="s1"&gt;         }&lt;/span&gt;
&lt;span class="s1"&gt;     })&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;     .input-group {&lt;/span&gt;
&lt;span class="s1"&gt;         margin-bottom: 5px;&lt;/span&gt;
&lt;span class="s1"&gt;     }&lt;/span&gt;
&lt;span class="s1"&gt;     .input-group-addon {&lt;/span&gt;
&lt;span class="s1"&gt;         background-color:#337ab7;&lt;/span&gt;
&lt;span class="s1"&gt;         color:#fff;&lt;/span&gt;
&lt;span class="s1"&gt;         border-color:#337ab7;&lt;/span&gt;
&lt;span class="s1"&gt;     }&lt;/span&gt;
&lt;span class="s1"&gt;     li[aria-selected=&amp;quot;true&amp;quot;] {&lt;/span&gt;
&lt;span class="s1"&gt;         display:none;&lt;/span&gt;
&lt;span class="s1"&gt;     }&lt;/span&gt;
&lt;span class="s1"&gt;     li[role=&amp;quot;presentation&amp;quot;] a{&lt;/span&gt;
&lt;span class="s1"&gt;         border-bottom-left-radius:0;&lt;/span&gt;
&lt;span class="s1"&gt;         border-bottom-right-radius:0;&lt;/span&gt;
&lt;span class="s1"&gt;     }&lt;/span&gt;
&lt;span class="s1"&gt;     .well {&lt;/span&gt;
&lt;span class="s1"&gt;         color:#eee;&lt;/span&gt;
&lt;span class="s1"&gt;         border-top:0;&lt;/span&gt;
&lt;span class="s1"&gt;         border-top-left-radius:0;&lt;/span&gt;
&lt;span class="s1"&gt;         border-top-right-radius:0;&lt;/span&gt;
&lt;span class="s1"&gt;     }&lt;/span&gt;
&lt;span class="s1"&gt;     #stdout-output,#stderr-output {&lt;/span&gt;
&lt;span class="s1"&gt;         background-color:#333;&lt;/span&gt;
&lt;span class="s1"&gt;         height:600px;&lt;/span&gt;
&lt;span class="s1"&gt;         overflow-y:auto;&lt;/span&gt;
&lt;span class="s1"&gt;         padding:10px;&lt;/span&gt;
&lt;span class="s1"&gt;     }&lt;/span&gt;
&lt;span class="s1"&gt;     .alarm-report {&lt;/span&gt;
&lt;span class="s1"&gt;         border:2px solid #333;&lt;/span&gt;
&lt;span class="s1"&gt;         border-bottom:none;&lt;/span&gt;
&lt;span class="s1"&gt;         animation: flash 1s linear infinite;&lt;/span&gt;
&lt;span class="s1"&gt;     }&lt;/span&gt;

&lt;span class="s1"&gt;     @keyframes flash{&lt;/span&gt;
&lt;span class="s1"&gt;         from {&lt;/span&gt;
&lt;span class="s1"&gt;             border-color: #333;&lt;/span&gt;
&lt;span class="s1"&gt;         }&lt;/span&gt;
&lt;span class="s1"&gt;         to {&lt;/span&gt;
&lt;span class="s1"&gt;             border-color: red;&lt;/span&gt;
&lt;span class="s1"&gt;         }&lt;/span&gt;
&lt;span class="s1"&gt;     }&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;      &amp;lt;div class=&amp;quot;col-md-offset-2 col-md-8&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;!-- Nav tabs --&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;ul class=&amp;quot;nav nav-pills nav-justified&amp;quot; role=&amp;quot;tablist&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;li role=&amp;quot;presentation&amp;quot; class=&amp;quot;active&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;lt;a href=&amp;quot;#stdout&amp;quot; aria-controls=&amp;quot;stdout&amp;quot; role=&amp;quot;tab&amp;quot; data-toggle=&amp;quot;tab&amp;quot;&amp;gt;标准输出&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;li role=&amp;quot;presentation&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;lt;a href=&amp;quot;#stderr&amp;quot; aria-controls=&amp;quot;stderr&amp;quot; role=&amp;quot;tab&amp;quot; data-toggle=&amp;quot;tab&amp;quot;&amp;gt;错误输出&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;li role=&amp;quot;presentation&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;lt;a href=&amp;quot;javascript:void(0);&amp;quot; id=&amp;quot;load&amp;quot;&amp;gt;载入历史&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;li role=&amp;quot;presentation&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;lt;a href=&amp;quot;javascript:void(0);&amp;quot; id=&amp;quot;clear&amp;quot;&amp;gt;清空&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;!-- Tab panes --&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;div class=&amp;quot;tab-content&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;div role=&amp;quot;tabpanel&amp;quot; class=&amp;quot;tab-pane active&amp;quot; id=&amp;quot;stdout&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;lt;pre contentEditable=&amp;quot;false&amp;quot; class=&amp;quot;well&amp;quot; id=&amp;quot;stdout-output&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;div role=&amp;quot;tabpanel&amp;quot; class=&amp;quot;tab-pane&amp;quot; id=&amp;quot;stderr&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;lt;pre contentEditable=&amp;quot;false&amp;quot; class=&amp;quot;well&amp;quot; id=&amp;quot;stderr-output&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;          &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_app&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;handlers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AnsibleHandler&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/show&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CommandHandler&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookie_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;asdadasdadasdasdasda&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;cd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newPath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__enter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savedPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__exit__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;etype&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savedPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AnsibleHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CommandHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WebSocket opened&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;LISTENERS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# self.write_message(u&amp;quot;You said: &amp;quot; + message[&amp;#39;msg&amp;#39;])&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;room&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;load&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;out_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;STDOUT_FILENAME&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stdout&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;STDERR_FILENAME&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10240000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file is too large!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SEEK_END&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;fsize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fsize&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;:]:&lt;/span&gt;
                        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{}:{}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                                          &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WebSocket closed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;LISTENERS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;pass&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tail_file&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stdout_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stdout_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;stdout_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;LISTENERS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stdout:{}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stderr_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stderr_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;stderr_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;LISTENERS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stderr:{}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;STDOUT_FILENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;logs/tail.log&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;STDERR_FILENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;logs/tail_err.log&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;STDOUT_FILENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;STDOUT_FILENAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;STDERR_FILENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;STDERR_FILENAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;LISTENERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;stdout_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;STDOUT_FILENAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stderr_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;STDERR_FILENAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stdout_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;STDOUT_FILENAME&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;stderr_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;STDERR_FILENAME&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_app&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;http_server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;httpserver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;http_server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;tailed_callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ioloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PeriodicCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tail_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;tailed_callback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;io_loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ioloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IOLoop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;SystemExit&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="ne"&gt;KeyboardInterrupt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;stdout_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;stderr_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="python"></category><category term="tornado"></category><category term="log"></category></entry><entry><title>一个很好的想法</title><link href="http://honmaple.me/articles/2017/11/%E4%B8%80%E4%B8%AA%E5%BE%88%E5%A5%BD%E7%9A%84%E6%83%B3%E6%B3%95.html" rel="alternate"></link><published>2017-11-05T23:28:38+08:00</published><updated>2017-11-05T23:28:38+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-11-05:/articles/2017/11/一个很好的想法.html</id><summary type="html">
&lt;p&gt;我有这样一个想法&lt;/p&gt;

&lt;p&gt;有这么一个&lt;b&gt;app&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;它可以自定义表单，然后保存到本地或者远程数据库&lt;/li&gt;
&lt;li&gt;还可以填写一个远程url，验证的token，或者其他验证需要的header信息&lt;/li&gt;
&lt;li&gt;填好之后就可以提交相关的表单
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;好吧,其实是写说说，写博客使用的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;它还有另外一个功能: &lt;b&gt;上传图片&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;同样是先填写远程url,验证信息&lt;/li&gt;
&lt;li&gt;填写其它相关信息&lt;/li&gt;
&lt;li&gt;选择本地图片进行上传&lt;/li&gt;
&lt;li&gt;上传成功后返回相应的url链接
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;好吧,越来越像朋友圈和QQ空间了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;但是，它可以自定义发布和上传的url呀!&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;最后，如果要更大，更远一些，可以对使用者的博客等内容进行相应的聚合,分类,成为一个优质的移动聚合平台.&lt;/p&gt;

&lt;p&gt;嗯，好想法，就等谁实现了&lt;/p&gt;</summary><content type="html">
&lt;p&gt;我有这样一个想法&lt;/p&gt;

&lt;p&gt;有这么一个&lt;b&gt;app&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;它可以自定义表单，然后保存到本地或者远程数据库&lt;/li&gt;
&lt;li&gt;还可以填写一个远程url，验证的token，或者其他验证需要的header信息&lt;/li&gt;
&lt;li&gt;填好之后就可以提交相关的表单
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;好吧,其实是写说说，写博客使用的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;它还有另外一个功能: &lt;b&gt;上传图片&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;同样是先填写远程url,验证信息&lt;/li&gt;
&lt;li&gt;填写其它相关信息&lt;/li&gt;
&lt;li&gt;选择本地图片进行上传&lt;/li&gt;
&lt;li&gt;上传成功后返回相应的url链接
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;好吧,越来越像朋友圈和QQ空间了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;但是，它可以自定义发布和上传的url呀!&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;最后，如果要更大，更远一些，可以对使用者的博客等内容进行相应的聚合,分类,成为一个优质的移动聚合平台.&lt;/p&gt;

&lt;p&gt;嗯，好想法，就等谁实现了&lt;/p&gt;</content><category term="life"></category></entry></feed>