<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>HonMaple's Blog</title><link href="http://honmaple.org/" rel="alternate"></link><link href="http://honmaple.org/feeds/all.rss.xml" rel="self"></link><id>http://honmaple.org/</id><updated>2016-07-28T00:00:00+08:00</updated><entry><title>python复习--装饰器</title><link href="http://honmaple.org/articles/2016/07/python%E5%A4%8D%E4%B9%A0--%E8%A3%85%E9%A5%B0%E5%99%A8.html" rel="alternate"></link><published>2016-07-28T00:00:00+08:00</published><updated>2016-07-28T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-28:articles/2016/07/python复习--装饰器.html</id><summary type="html">&lt;p&gt;一个装饰器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nd"&gt;@wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kw&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;call &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;():&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者针对带参数的decorator：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def log(text):
    def decorator(func):
        @wraps(func)
        def wrapper(*args, **kw):
            print(&amp;#39;%s %s():&amp;#39; % (text, func.__name__))
            return func(*args, **kw)
        return wrapper
    return decorator
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="装饰器"></category></entry><entry><title>python的os模块学习</title><link href="http://honmaple.org/articles/2016/07/python%E7%9A%84os%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A0.html" rel="alternate"></link><published>2016-07-28T00:00:00+08:00</published><updated>2016-07-28T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-28:articles/2016/07/python的os模块学习.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline3"&gt;1. Process Parameters&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1.1. os.environ(环境变量)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;1.2. os.getenv(key, default=None)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline36"&gt;2. os.path&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline4"&gt;2.1. os.path.abspath(path) #返回绝对路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline5"&gt;2.2. os.path.basename(path) #返回文件名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline6"&gt;2.3. os.path.commonprefix(list) #返回list(多个路径)中，所有path共有的最长的路径。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline7"&gt;2.4. os.path.dirname(path) #返回文件路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline8"&gt;2.5. os.path.exists(path) #路径存在则返回True,路径不存在返回False&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline9"&gt;2.6. os.path.exists('aa.py')&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline10"&gt;2.7. os.path.lexists #路径存在则返回True,路径不存在也返回False&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline11"&gt;2.8. os.path.expanduser(path) #把path中包含的"~"和"~user"转换成用户目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline12"&gt;2.9. os.path.expandvars(path) #根据环境变量的值替换path中包含的”(name”和”){name}”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline13"&gt;2.10. os.path.getatime(path) #返回最后一次进入此path的时间。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline14"&gt;2.11. os.path.getmtime(path) #返回在此path下最后一次修改的时间。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline15"&gt;2.12. os.path.getctime(path)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline16"&gt;2.13. os.path.getsize(path) #返回文件大小，如果文件不存在就返回错误&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline17"&gt;2.14. os.path.isabs(path) #判断是否为绝对路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline18"&gt;2.15. os.path.isfile(path) #判断路径是否为文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline19"&gt;2.16. os.path.isdir(path) #判断路径是否为目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline20"&gt;2.17. os.path.islink(path) #判断路径是否为链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline21"&gt;2.18. os.path.ismount(path) #判断路径是否为挂载点（）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline22"&gt;2.19. os.path.join(path1[, path2[, …]]) #把目录和文件名合成一个路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline23"&gt;2.20. os.path.normcase(path) #转换path的大小写和斜杠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline24"&gt;2.21. os.path.normpath(path) #规范path字符串形式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline25"&gt;2.22. os.path.realpath(path) #返回path的真实路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline26"&gt;2.23. os.path.relpath(path[, start]) #从start开始计算相对路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline27"&gt;2.24. os.path.samefile(path1, path2) #判断目录或文件是否相同&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline28"&gt;2.25. os.path.sameopenfile(fp1, fp2) #判断fp1和fp2是否指向同一文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline29"&gt;2.26. os.path.samestat(stat1, stat2) #判断stat tuple stat1和stat2是否指向同一个文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline30"&gt;2.27. os.path.split(path) #把路径分割成dirname和basename，返回一个元组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline31"&gt;2.28. os.path.splitdrive(path) #一般用在windows下，返回驱动器名和路径组成的元组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline32"&gt;2.29. os.path.splitext(path) #分割路径，返回路径名和文件扩展名的元组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline33"&gt;2.30. os.path.splitunc(path) #把路径分割为加载点与文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline34"&gt;2.31. os.path.walk(path, visit, arg) #遍历path，进入每个目录都调用visit函数，visit函数必须有&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline35"&gt;2.32. os.path.supportsunicodefilenames #设置是否支持unicode路径名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;Process Parameters&lt;a id="orgheadline3"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;os.environ(环境变量)&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.environ[&amp;#39;HOME&amp;#39;]
&amp;#39;/home/xxx&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.getenv(key, default=None)&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.getenv(&amp;quot;HOME&amp;quot;)
&amp;#39;/home/xxx&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;os.path&lt;a id="orgheadline36"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;os.path.abspath(path) #返回绝对路径&lt;a id="orgheadline4"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.abspath(&amp;#39;aa.py&amp;#39;)
&amp;#39;/home/jianglin/test/aa.py&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.basename(path) #返回文件名&lt;a id="orgheadline5"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.basename(&amp;#39;aa.py&amp;#39;)
&amp;#39;aa.py&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.commonprefix(list) #返回list(多个路径)中，所有path共有的最长的路径。&lt;a id="orgheadline6"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.commonprefix([&amp;#39;aa.py&amp;#39;,&amp;#39;a.py&amp;#39;])
&amp;#39;a&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.commonprefix([&amp;#39;aa.py&amp;#39;,&amp;#39;c.py&amp;#39;])
&amp;#39;&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.commonprefix([&amp;#39;~/test/aa.py&amp;#39;,&amp;#39;~/test/c.py&amp;#39;])
&amp;#39;~/test/&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.commonprefix([&amp;#39;~/test/aa.py&amp;#39;,&amp;#39;~/test/c.py&amp;#39;,&amp;#39;~/test/git/.git/config&amp;#39;])
&amp;#39;~/test/&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.dirname(path) #返回文件路径&lt;a id="orgheadline7"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.dirname(&amp;#39;~/test/aa.py&amp;#39;)
&amp;#39;~/test&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.exists(path) #路径存在则返回True,路径不存在返回False&lt;a id="orgheadline8"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.exists('aa.py')&lt;a id="orgheadline9"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;True
&amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#39;aa.pp&amp;#39;)
False
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.lexists #路径存在则返回True,路径不存在也返回False&lt;a id="orgheadline10"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.lexists(&amp;#39;aa.py&amp;#39;)
True
&amp;gt;&amp;gt;&amp;gt; os.path.lexists(&amp;#39;aa.pp&amp;#39;)
False
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.expanduser(path) #把path中包含的"~"和"~user"转换成用户目录&lt;a id="orgheadline11"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.expanduser(&amp;#39;aa.py&amp;#39;)
&amp;#39;aa.py&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.expanduser(&amp;#39;~/test/aa.py&amp;#39;)
&amp;#39;/home/jianglin/test/aa.py&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.expandvars(path) #根据环境变量的值替换path中包含的”(name”和”){name}”&lt;a id="orgheadline12"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.getatime(path) #返回最后一次进入此path的时间。&lt;a id="orgheadline13"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;aa.py&amp;#39;)
1461933601.0809627
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;~/git/&amp;#39;)
Traceback (most recent call last):
File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
File &amp;quot;/usr/lib/python3.5/genericpath.py&amp;quot;, line 60, in getatime
return os.stat(filename).st_atime
FileNotFoundError: [Errno 2] No such file or directory: &amp;#39;~/git/&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;~/git/maple-bbs/.gitignore&amp;#39;)
Traceback (most recent call last):
File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
File &amp;quot;/usr/lib/python3.5/genericpath.py&amp;quot;, line 60, in getatime
return os.stat(filename).st_atime
FileNotFoundError: [Errno 2] No such file or directory: &amp;#39;~/git/maple-bbs/.gitignore&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;a.py&amp;#39;)
1461418983.486829
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;~/git&amp;#39;)
Traceback (most recent call last):
File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
File &amp;quot;/usr/lib/python3.5/genericpath.py&amp;quot;, line 60, in getatime
return os.stat(filename).st_atime
FileNotFoundError: [Errno 2] No such file or directory: &amp;#39;~/git&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.getatime(&amp;#39;./git/.git/config&amp;#39;)
1461856107.9136002
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.getmtime(path) #返回在此path下最后一次修改的时间。&lt;a id="orgheadline14"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.getmtime(&amp;#39;aa.py&amp;#39;)
1461933858.6676357
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.getctime(path)&lt;a id="orgheadline15"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.getctime(&amp;#39;aa.py&amp;#39;)
1461933858.6676357
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.getsize(path) #返回文件大小，如果文件不存在就返回错误&lt;a id="orgheadline16"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.getsize(&amp;#39;aa.py&amp;#39;)
448
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.isabs(path) #判断是否为绝对路径&lt;a id="orgheadline17"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.isabs(&amp;#39;aa.py&amp;#39;)
False
&amp;gt;&amp;gt;&amp;gt; os.path.isabs(&amp;#39;~/test/aa.py&amp;#39;)
False
&amp;gt;&amp;gt;&amp;gt; os.path.isabs(&amp;#39;/home/jianglin/test/aa.py&amp;#39;)
True
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.isfile(path) #判断路径是否为文件&lt;a id="orgheadline18"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.isfile(&amp;#39;aa.py&amp;#39;)
True
&amp;gt;&amp;gt;&amp;gt; os.path.isfile(&amp;#39;~/test&amp;#39;)
False
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.isdir(path) #判断路径是否为目录&lt;a id="orgheadline19"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.isdir(&amp;#39;~/test&amp;#39;)
False
&amp;gt;&amp;gt;&amp;gt; os.path.isdir(&amp;#39;/home/jianglin/test/aa.py&amp;#39;)
False
&amp;gt;&amp;gt;&amp;gt; os.path.isdir(&amp;#39;/home/jianglin/test&amp;#39;)
True
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.islink(path) #判断路径是否为链接&lt;a id="orgheadline20"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.ismount(path) #判断路径是否为挂载点（）&lt;a id="orgheadline21"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.join(path1[, path2[, …]]) #把目录和文件名合成一个路径&lt;a id="orgheadline22"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.join(&amp;#39;/home/jianglin/test&amp;#39;,&amp;#39;aa.py&amp;#39;)
&amp;#39;/home/jianglin/test/aa.py&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.join(&amp;#39;/home/jianglin&amp;#39;,&amp;#39;test/aa.py&amp;#39;)
&amp;#39;/home/jianglin/test/aa.py&amp;#39;
&amp;gt;&amp;gt;&amp;gt; os.path.join(&amp;#39;~&amp;#39;,&amp;#39;test/aa.py&amp;#39;)
&amp;#39;~/test/aa.py&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.normcase(path) #转换path的大小写和斜杠&lt;a id="orgheadline23"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.normpath(path) #规范path字符串形式&lt;a id="orgheadline24"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.realpath(path) #返回path的真实路径&lt;a id="orgheadline25"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.relpath(path[, start]) #从start开始计算相对路径&lt;a id="orgheadline26"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.samefile(path1, path2) #判断目录或文件是否相同&lt;a id="orgheadline27"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.sameopenfile(fp1, fp2) #判断fp1和fp2是否指向同一文件&lt;a id="orgheadline28"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.samestat(stat1, stat2) #判断stat tuple stat1和stat2是否指向同一个文件&lt;a id="orgheadline29"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.split(path) #把路径分割成dirname和basename，返回一个元组&lt;a id="orgheadline30"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; os.path.split(&amp;#39;~/test/aa.py&amp;#39;)
(&amp;#39;~/test&amp;#39;, &amp;#39;aa.py&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;os.path.splitdrive(path) #一般用在windows下，返回驱动器名和路径组成的元组&lt;a id="orgheadline31"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.splitext(path) #分割路径，返回路径名和文件扩展名的元组&lt;a id="orgheadline32"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.splitunc(path) #把路径分割为加载点与文件&lt;a id="orgheadline33"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;os.path.walk(path, visit, arg) #遍历path，进入每个目录都调用visit函数，visit函数必须有&lt;a id="orgheadline34"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;3个参数(arg, dirname, names)，dirname表示当前目录的目录名，names代表当前目录下的所有&lt;/p&gt;
&lt;p&gt;文件名，args则为walk的第三个参数&lt;/p&gt;
&lt;h2&gt;os.path.supportsunicodefilenames #设置是否支持unicode路径名&lt;a id="orgheadline35"&gt;&lt;/a&gt;&lt;/h2&gt;</summary><category term="python"></category><category term="os"></category></entry><entry><title>tar打包排除目录</title><link href="http://honmaple.org/articles/2016/07/tar%E6%89%93%E5%8C%85%E6%8E%92%E9%99%A4%E7%9B%AE%E5%BD%95.html" rel="alternate"></link><published>2016-07-25T00:00:00+08:00</published><updated>2016-07-25T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-25:articles/2016/07/tar打包排除目录.html</id><summary type="html">&lt;p&gt;使用 &lt;strong&gt;--exclude&lt;/strong&gt; + 需要排除的目录&lt;/p&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar zcvf hello.tar.gz --exclude=&amp;quot;**/__pycache__&amp;quot; maple/ manager.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; :&lt;/p&gt;
&lt;p&gt;--exclude 参数需要在要打包的文件或目录前,否则不起作用,另外排除的目录后不能加 &lt;strong&gt;/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;--exclude 同样用于 &lt;strong&gt;排除文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar zcvf hello.tar.gz --exclude=&amp;quot;*.pyc&amp;quot; maple/ manager.py
&lt;/pre&gt;&lt;/div&gt;</summary><category term="tar"></category><category term="linux"></category></entry><entry><title>如何安装及使用Honmaple社区程序</title><link href="http://honmaple.org/articles/2016/07/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8Honmaple%E7%A4%BE%E5%8C%BA%E7%A8%8B%E5%BA%8F.html" rel="alternate"></link><published>2016-07-25T00:00:00+08:00</published><updated>2016-07-25T00:00:00+08:00</updated><author><name>2016-07-25 12:38:00</name></author><id>tag:honmaple.org,2016-07-25:articles/2016/07/如何安装及使用Honmaple社区程序.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline6"&gt;1. 如何安装及使用&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1.1. 安装需要的package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;1.2. 配置config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline3"&gt;1.3. 注释下面代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline4"&gt;1.4. 初始化数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline5"&gt;1.5. 创建管理员账户&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline8"&gt;2. 本地搭建&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline7"&gt;2.1. 登陆并进入后台&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline13"&gt;3. 服务端搭建&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline9"&gt;3.1. 配置nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline10"&gt;3.2. 配置supervior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline11"&gt;3.3. 配置gunicorn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline12"&gt;3.4. 启动&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;如何安装及使用&lt;a id="orgheadline6"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;安装需要的package&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install -r requirements.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置config&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;查看配置详细介绍&lt;/p&gt;
&lt;h2&gt;注释下面代码&lt;a id="orgheadline3"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;因为如果不注释的话 &lt;strong&gt;初始化数据库&lt;/strong&gt; 会报错&lt;/p&gt;
&lt;p&gt;文件位置: &lt;strong&gt;maple/topic/forms.py&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;category = SelectField(
    _(&amp;#39;Category:&amp;#39;),
    choices=[(b.id, b.board + &amp;#39;   --&amp;#39; + b.parent_board)
             for b in Board.query.all()],
    coerce=int)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;初始化数据库&lt;a id="orgheadline4"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manage.py db init
python manage.py db migrate -m &amp;quot;first migrate&amp;quot;
python manage.py db upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok,将第三步中注释的内容恢复&lt;/p&gt;
&lt;h2&gt;创建管理员账户&lt;a id="orgheadline5"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manager.py create_user
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;本地搭建&lt;a id="orgheadline8"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;h2&gt;登陆并进入后台&lt;a id="orgheadline7"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manager.py runserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Visit &lt;a href="http://forums.localhost:5000/admin"&gt;http://forums.localhost:5000/admin&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;服务端搭建&lt;a id="orgheadline13"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;参考 &lt;a href="http://flask.pocoo.org/docs/0.11/deploying/wsgi-standalone/"&gt;http://flask.pocoo.org/docs/0.11/deploying/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以我的配置为例:&lt;/p&gt;
&lt;h2&gt;配置nginx&lt;a id="orgheadline9"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;access_log&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;error_log&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;proxy_pass&lt;/span&gt;         &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;8000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;proxy_redirect&lt;/span&gt;     &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;Host&lt;/span&gt;                 &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Real&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;IP&lt;/span&gt;            &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Forwarded&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;For&lt;/span&gt;      &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Forwarded&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Proto&lt;/span&gt;    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置supervior&lt;a id="orgheadline10"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[program:forums]&lt;/span&gt;
&lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;www&lt;/span&gt;
&lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/home/www/forums/venv/bin/gunicorn run:app -c /home/www/forums/gunicorn.conf&lt;/span&gt;
&lt;span class="na"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/home/www/forums&lt;/span&gt;
&lt;span class="na"&gt;autostart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;autorestart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;stdout_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/home/www/forums/logs/gunicorn_supervisor.log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置gunicorn&lt;a id="orgheadline11"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;workers = 2
bind = &amp;#39;127.0.0.1:8000&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;启动&lt;a id="orgheadline12"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;确定配置无误后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;supervisord -c /etc/supervisord.conf
supervisorctl -c /etc/supervisord.conf reload
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="flask"></category></entry><entry><title>virtualbox中使用U盘等usb设备</title><link href="http://honmaple.org/articles/2016/07/virtualbox%E4%B8%AD%E4%BD%BF%E7%94%A8U%E7%9B%98%E7%AD%89usb%E8%AE%BE%E5%A4%87.html" rel="alternate"></link><published>2016-07-15T00:00:00+08:00</published><updated>2016-07-15T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-15:articles/2016/07/virtualbox中使用U盘等usb设备.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline4"&gt;1. 安装VirtualBox Extension Pack&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1.1. 下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;1.2. 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline3"&gt;1.3. 卸载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline5"&gt;2. 启用usb设备&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;主系统:archlinux + virtualbox 5.0.24-1&lt;/p&gt;
&lt;p&gt;虚拟机:windows&lt;/p&gt;
&lt;h1&gt;安装VirtualBox Extension Pack&lt;a id="orgheadline4"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;下载&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;先从官网下载扩展包 &lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;https://www.virtualbox.org/wiki/Downloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; :版本要一致&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;└──╼ pacman -Qi virtualbox
名字           : virtualbox
版本           : 5.0.24-1
描述           : Powerful x86 virtualization for enterprise as well as home use
架构           : x86_64
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所以下载 &lt;strong&gt;5.0&lt;/strong&gt; 版本的pack&lt;/p&gt;
&lt;h2&gt;安装&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;参考 &lt;a href="https://wiki.archlinux.org/index.php/VirtualBox_(%25E7%25AE%2580%25E4%25BD%2593%25E4%25B8%25AD%25E6%2596%2587)"&gt;https://wiki.archlinux.org/index.php/VirtualBox&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-5.0.24-108355.vbox-extpack
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装不一致的版本会&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;└──╼ sudo VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-5.1.0-108711.vbox-extpack
0%...
Progress state: NS_ERROR_FAILURE
VBoxManage: error: Failed to install &amp;quot;/home/jianglin/VirtualBox VMs/extpack/Oracle_VM_VirtualBox_Extension_Pack-5.1.0-108711.vbox-extpack&amp;quot;
VBoxManage: error: VBoxExtPackRegister returned VERR_VERSION_MISMATCH, pReg=0000000000000000 ErrInfo=&amp;#39;VirtualBox version mismatch - expected 5.1 got 5.0&amp;#39;
VBoxManage: error: Details: code NS_ERROR_FAILURE (0x80004005), component ExtPackManagerWrap, interface IExtPackManager
VBoxManage: error: Context: &amp;quot;RTEXITCODE handleExtPack(HandlerArg*)&amp;quot; at line 1158 of file VBoxManageMisc.cpp
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;卸载&lt;a id="orgheadline3"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;参考 &lt;a href="https://www.virtualbox.org/manual/ch08.html#vboxmanage-extpack"&gt;https://www.virtualbox.org/manual/ch08.html#vboxmanage-extpack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不是&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;└──╼ sudo VBoxManage extpack uninstall Oracle_VM_VirtualBox_Extension_Pack-5.0.24-108355.vbox-extpack
 0%...
 Progress state: NS_ERROR_FAILURE
 VBoxManage: error: Failed to uninstall &amp;quot;Oracle_VM_VirtualBox_Extension_Pack-5.0.24-108355.vbox-extpack&amp;quot;
 VBoxManage: error: Invalid extension pack name specified
 VBoxManage: error: Details: code NS_ERROR_FAILURE (0x80004005), component ExtPackManagerWrap, interface IExtPackManager
 VBoxManage: error: Context: &amp;quot;RTEXITCODE handleExtPack(HandlerArg*)&amp;quot; at line 1199 of file VBoxManageMisc.cpp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;而是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;└──╼ sudo VBoxManage extpack uninstall &amp;quot;Oracle VM VirtualBox Extension Pack&amp;quot;
0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%
Successfully uninstalled &amp;quot;Oracle VM VirtualBox Extension Pack&amp;quot;.
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;启用usb设备&lt;a id="orgheadline5"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;虚拟机需要 &lt;strong&gt;关机&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置-&amp;gt;USB设备-&amp;gt;启用USB控制器-&amp;gt;勾选3.0&lt;/p&gt;
&lt;p&gt;开机:顶部 &lt;strong&gt;设备&lt;/strong&gt; 里选择 &lt;strong&gt;USB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;OK,就这样&lt;/p&gt;</summary><category term="linux"></category><category term="virtualbox"></category></entry><entry><title>centos7安装python3及pip3</title><link href="http://honmaple.org/articles/2016/07/centos7%E5%AE%89%E8%A3%85python3%E5%8F%8Apip3.html" rel="alternate"></link><published>2016-07-07T00:00:00+08:00</published><updated>2016-07-07T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-07:articles/2016/07/centos7安装python3及pip3.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1. 安装python3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;2. 安装pip3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;安装python3&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;安装python3很简单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载源码并且编译&lt;/li&gt;
&lt;li&gt;安装epel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里采用第二种方法:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install epel-release
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装完成之后,yum list python3*,你就可以看见 &lt;strong&gt;python34&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install python34
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;安装pip3&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/6587507/how-to-install-pip-with-python-3"&gt;参考问题&lt;/a&gt;
如果在上述安装 *python3*时采用了第二种方法,pip默认未安装,而且无法通过`yum install python34-pip`来安装&lt;/p&gt;
&lt;p&gt;正确的方法应该是:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install python34-setuptools
easy_install-3.4 pip # 这里可能有一些出入,总之是使用python3的easy_install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok,就这样&lt;/p&gt;</summary><category term="python"></category><category term="python3"></category><category term="pip"></category><category term="pip3"></category></entry><entry><title>记录pip安装报的错.org</title><link href="http://honmaple.org/articles/2016/07/%E8%AE%B0%E5%BD%95pip%E5%AE%89%E8%A3%85%E6%8A%A5%E7%9A%84%E9%94%99.org.html" rel="alternate"></link><published>2016-07-07T00:00:00+08:00</published><updated>2016-07-07T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-07-07:articles/2016/07/记录pip安装报的错.org.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1. Pillow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;2. misaka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline3"&gt;3. psycopg2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Pillow&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;jpeg&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="n"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;explicitly&lt;/span&gt; &lt;span class="n"&gt;disabled&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jpeg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aborting&lt;/span&gt;

    &lt;span class="o"&gt;----------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Command&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/***/***/venv/bin/python3.4 -u -c &amp;quot;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;tokenize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/tmp/pip-build-k9djbrwk/Pillow/setup.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tokenize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;open&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;exec&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; install --record /tmp/pip-i_zr9z4a-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/***/***/venv/include/site/python3.4/Pillow&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;k9djbrwk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Pillow&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;解决办法:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# yum install libjpeg-turbo-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其实这个办法也不太准确,
参考 &lt;a href="http://pillow.readthedocs.org/en/latest/installation.html"&gt;pillow文档&lt;/a&gt; ,安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install libtiff-devel libjpeg-devel libzip-devel freetype-devel lcms2-devel libwebp-devel tcl-devel tk-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;misaka&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Setup&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;exited&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip3 install misaka
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Setup&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;exited&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上 &lt;strong&gt;google&lt;/strong&gt; 搜了半天,结果都是 &lt;strong&gt;python-devel&lt;/strong&gt; 没装，实际上我的已经装上了，
我以为是因为我自己编译安装的python3没有安装python3-devel,又搜了半天，什么也没搜到，
后来心血来潮使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;easy_install misaka
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不用多说，还是报错，但是报错原因成了 &lt;strong&gt;No package 'libffi' found&lt;/strong&gt; ,好吧，
yum list libffi\*之后，发现libffi已安装，但是libffi-devel未安装，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install libffi-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;试一试，结果。。。成功了&lt;/p&gt;
&lt;h3&gt;psycopg2&lt;a id="orgheadline3"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;psycopg2安装之前需要安装 &lt;strong&gt;postgresql-devel&lt;/strong&gt; ,此外,正确的安装方式是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;PATH=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;:/usr/pgsql-9.3/bin/ pip install psycopg2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;注意postgresql目录&lt;/em&gt;&lt;/p&gt;</summary><category term="python"></category><category term="pip"></category></entry><entry><title>emacs解决windowns文件乱码</title><link href="http://honmaple.org/articles/2016/06/emacs%E8%A7%A3%E5%86%B3windowns%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81.html" rel="alternate"></link><published>2016-06-22T00:00:00+08:00</published><updated>2016-06-22T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-06-22:articles/2016/06/emacs解决windowns文件乱码.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1. 换系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;2. 修改language环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline3"&gt;3. 重新以gb2312的编码载入文件(推荐)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;最近在看windows文件时总是乱码，查了资料后才知道windowns下的编码为 &lt;strong&gt;gb2312&lt;/strong&gt; ,
而linux下的编码为 &lt;strong&gt;utf-8&lt;/strong&gt; ,所以打开文件会乱码&lt;/p&gt;
&lt;p&gt;如何解决?&lt;/p&gt;
&lt;h3&gt;换系统&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这不是废话吗!&lt;/p&gt;
&lt;h3&gt;修改language环境&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在配置文件中加入这么一行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(set-language-environment &amp;#39;Chinese-GB)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启就行,结果····打开 linux下的文件乱码&lt;/p&gt;
&lt;h3&gt;重新以gb2312的编码载入文件(推荐)&lt;a id="orgheadline3"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/pfanaya/article/details/6205640"&gt;参考这里&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;M-x revert-buffer-with-coding-system
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;选择chinese-gb2312,确认载入(不需要重启)&lt;/p&gt;
&lt;p&gt;ok,是不是很简单&lt;/p&gt;</summary><category term="linux"></category><category term="emacs"></category></entry><entry><title>黑客丛林之旅</title><link href="http://honmaple.org/articles/2016/06/%E9%BB%91%E5%AE%A2%E4%B8%9B%E6%9E%97%E4%B9%8B%E6%97%85.html" rel="alternate"></link><published>2016-06-21T00:00:00+08:00</published><updated>2016-06-21T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.org,2016-06-21:articles/2016/06/黑客丛林之旅.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline1"&gt;1. 第一关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline2"&gt;2. 第二关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline3"&gt;3. 第三关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline4"&gt;4. 第四关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline5"&gt;5. 第五关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline6"&gt;6. 第六关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline7"&gt;7. 第七关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline8"&gt;8. 第八关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline10"&gt;9. 第九关&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orgheadline9"&gt;9.1. 修改 &lt;b&gt;user-agent&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgheadline11"&gt;10. 第十关&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;无意间看到，试了一下,结果&lt;a href="http://www.fj543.com/hack/"&gt;http://www.fj543.com/hack/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;第一关&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;没什么好说的,查看源码&lt;/p&gt;
&lt;p&gt;&lt;img alt="img" src="http://7xs8ln.com1.z0.glb.clouddn.com/one_2016-06-21_21-59-19.png" /&gt;&lt;/p&gt;
&lt;h3&gt;第二关&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;还是查看源码,结果发现&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;onSubmit=&amp;quot;return chkPassword()&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ok,f12进入 &lt;strong&gt;console&lt;/strong&gt;,输入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function chkPassword(){
alert(&amp;#39;adas&amp;#39;);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;覆盖原有js&lt;/p&gt;
&lt;h3&gt;第三关&lt;a id="orgheadline3"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这关我也没想到，后来百度之，原来是cookie的原因&lt;/p&gt;
&lt;p&gt;还是进 &lt;strong&gt;console&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;document.cookie=&amp;quot;login=yes&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;第四关&lt;a id="orgheadline4"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="img" src="http://7xs8ln.com1.z0.glb.clouddn.com/fourth_2016-06-21_22-01-37.png" /&gt;
看到这里是不是很熟悉，摩尔斯密码,google一下
对应的密码就是 &lt;strong&gt;iamok&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;第五关&lt;a id="orgheadline5"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;根据提示,密文为成 &lt;strong&gt;YmFzZTY0aXNvaw==&lt;/strong&gt; 或 &lt;strong&gt;ad93c1d102ae60f4&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一个很熟悉为base64加密,第二个为md5加密,解密后的密文为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    └──╼ base64 -d
YmFzZTY0aXNvaw==
(C-D)base64isok
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;第六关&lt;a id="orgheadline6"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;what?这是什么,实在是想不出来,百度一下, 原来&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;password = sum(port)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;密码为各数据库port之和&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;password = MSSQL(1433)+MySQL(3306)+Oracle(1521) = 6260
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;第七关&lt;a id="orgheadline7"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="img" src="http://7xs8ln.com1.z0.glb.clouddn.com/seven_2016-06-21_22-03-39.png" /&gt;&lt;/p&gt;
&lt;p&gt;很明显,考察的是对图片的处理,但是我不会,不会，会&amp;#x2026;.&lt;/p&gt;
&lt;p&gt;文本打开,拉到最后面你会发现“爸鼻我们去哪儿”(vim打开乱码,emacs打开还是图片,C-c C-c转换后乱码)
feh打开，发现"8b"
OK,key应该就是 &lt;strong&gt;8bwmqne&lt;/strong&gt;
（待会儿试试将emacs的编码转成windows的）&lt;/p&gt;
&lt;h3&gt;第八关&lt;a id="orgheadline8"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;社工,百度&lt;/p&gt;
&lt;p&gt;其实只要右上角，查看作者介绍就能知道
吴世昌的弟弟叫吴其昌,网名 &lt;strong&gt;fj573&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;第九关&lt;a id="orgheadline10"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;提示语&lt;/strong&gt; ：使用IE 5.43版本的浏览器访问?level=9token可以得到令牌。(Use IE 5.43 version to browse ?level=9token)&lt;/p&gt;
&lt;p&gt;直接访问 &lt;a href="http://www.fj543.com/hack/?level=9token"&gt;9token&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;得到提示:您的浏览器不是IE 5.43版本！(Your browser is not IE 5.43)
OK，知道了，这关考察 &lt;strong&gt;user-agent&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;修改 &lt;strong&gt;user-agent&lt;/strong&gt;&lt;a id="orgheadline9"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;f12，关闭按钮旁边 &lt;strong&gt;More tools&lt;/strong&gt; 选择 &lt;strong&gt;Network conditions&lt;/strong&gt;
选择IE7,将MSIE 7.0改成MSIE 5.43.
\注意\:直接点击无法复制,选择Nerwork,刷新后随意点一个查看 &lt;strong&gt;Headers&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;第十关&lt;a id="orgheadline11"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;需要下载运行文件，算了&lt;/p&gt;</summary><category term="Linux"></category><category term="web"></category><category term="security"></category></entry><entry><title>flask时间格式化</title><link href="http://honmaple.org/articles/2016/06/flask%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96.html" rel="alternate"></link><published>2016-06-15T00:00:00+08:00</published><updated>2016-06-15T00:00:00+08:00</updated><author><name>2016-06-15 23:46:00</name></author><id>tag:honmaple.org,2016-06-15:articles/2016/06/flask时间格式化.html</id><summary type="html">&lt;p&gt;后端通过filter注册&lt;/p&gt;
&lt;p&gt;[参考资料]&lt;/p&gt;
&lt;p&gt;在前端显示为该问题 "几分钟前发表或几天前发表"&lt;/p&gt;
&lt;p&gt;后端通过filter注册&lt;/p&gt;
&lt;p&gt;&lt;a href="http://flask.pocoo.org/snippets/33/"&gt;参考资料&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;设计需求&lt;a id="orgheadline1"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果问题发表超过 &lt;strong&gt;10天&lt;/strong&gt; ,则显示为 &lt;em&gt;%Y-%m-%d %H:%M&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果小于 &lt;strong&gt;10天&lt;/strong&gt; ，但是大于 &lt;strong&gt;1天&lt;/strong&gt; ，则显示为 &lt;em&gt;n天前&lt;/em&gt; 发表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果小于 &lt;strong&gt;1天&lt;/strong&gt; ，但是大于 &lt;strong&gt;1小时&lt;/strong&gt; ，则显示为 &lt;em&gt;n小时前&lt;/em&gt; 发表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果小于 &lt;strong&gt;1小时&lt;/strong&gt; ，但是大于 &lt;strong&gt;90秒&lt;/strong&gt; ，则显示为 &lt;em&gt;n分钟前&lt;/em&gt; 发表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果小于 &lt;strong&gt;90秒&lt;/strong&gt; ，则显示为 &lt;em&gt;刚刚&lt;/em&gt; 发表&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;具体实现&lt;a id="orgheadline2"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;diff.days&lt;/code&gt; 和 &lt;code&gt;diff.seconds&lt;/code&gt; 实现&lt;/p&gt;
&lt;p&gt;比如，大于10天&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;if diff.days &amp;gt; 10:
    return dt.strftime(&amp;#39;%Y-%m-%d %H:%M&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;大于90秒,小于1小时&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;if diff.seconds &amp;lt;= 3600 and diff.seconds &amp;gt; 90:
    periods = ((diff.seconds / 60, &amp;quot;minute&amp;quot;, &amp;quot;minutes&amp;quot;), )
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;具体代码&lt;a id="orgheadline3"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def timesince(dt, default=&amp;quot;just now&amp;quot;):
    now = datetime.now()
    diff = now - dt
    if diff.days &amp;gt; 10:
        return dt.strftime(&amp;#39;%Y-%m-%d %H:%M&amp;#39;)
    if diff.days &amp;lt;= 10 and diff.days &amp;gt; 0:
        periods = ((diff.days, &amp;quot;day&amp;quot;, &amp;quot;days&amp;quot;), )
    if diff.days &amp;lt;= 0 and diff.seconds &amp;gt; 3600:
        periods = ((diff.seconds / 3600, &amp;quot;hour&amp;quot;, &amp;quot;hours&amp;quot;), )
    if diff.seconds &amp;lt;= 3600 and diff.seconds &amp;gt; 90:
        periods = ((diff.seconds / 60, &amp;quot;minute&amp;quot;, &amp;quot;minutes&amp;quot;), )
    if diff.seconds &amp;lt;= 90:
        return default

    for period, singular, plural in periods:

        if period:
            return &amp;quot;%d %s ago&amp;quot; % (period, singular if period == 1 else
                                    plural)

    return default
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok,之后就可以&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;app.jinja_env.filters[&amp;#39;timesince&amp;#39;] = timesince
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来实现几分钟前发表的功能了&lt;/p&gt;</summary><category term="python"></category><category term="flask"></category><category term="datetime"></category></entry></feed>