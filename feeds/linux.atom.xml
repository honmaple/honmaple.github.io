<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>honmaple's blog - Linux</title><link href="https://honmaple.me/" rel="alternate"></link><link href="http://127.0.0.1:8000/feeds/linux.atom.xml" rel="self"></link><id>https://honmaple.me/</id><updated>2019-03-07T01:50:02+08:00</updated><subtitle>风落花语风落天，花落风雨花落田.</subtitle><entry><title>web-mode自定义fold函数以适应indent-region</title><link href="https://honmaple.me/articles/2018/11/web-mode%E8%87%AA%E5%AE%9A%E4%B9%89fold%E5%87%BD%E6%95%B0%E4%BB%A5%E9%80%82%E5%BA%94indent-region.html" rel="alternate"></link><published>2018-11-24T23:35:14+08:00</published><updated>2018-11-25T12:48:34+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-11-24:/articles/2018/11/web-mode自定义fold函数以适应indent-region.html</id><summary type="html">

&lt;p&gt;&lt;code&gt;web-mode&lt;/code&gt;有一个内置的&lt;code&gt;web-mode-fold-or-unfold&lt;/code&gt;函数，但这个函数有一个问题，当存在&lt;b&gt;fold&lt;/b&gt;时，使用&lt;code&gt;indent-region&lt;/code&gt;会得到错误的缩进，想要得到正确的缩进，必须先 &lt;code&gt;unfold&lt;/code&gt;, 比如&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;col-xs-3 col-sm-3&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sidebar&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;navigation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">

&lt;p&gt;&lt;code&gt;web-mode&lt;/code&gt;有一个内置的&lt;code&gt;web-mode-fold-or-unfold&lt;/code&gt;函数，但这个函数有一个问题，当存在&lt;b&gt;fold&lt;/b&gt;时，使用&lt;code&gt;indent-region&lt;/code&gt;会得到错误的缩进，想要得到正确的缩进，必须先 &lt;code&gt;unfold&lt;/code&gt;, 比如&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;col-xs-3 col-sm-3&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sidebar&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;navigation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;as&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当把&lt;b&gt;div#sidebar&lt;/b&gt;使用&lt;code&gt;web-mode-fold-or-unfold&lt;/code&gt;折叠起来, 然后使用&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/indent-buffer&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;Format buffer with `indent-region`.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;save-excursion&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;indent-region&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;展开后就会变成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- sidebar --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;col-xs-3 col-sm-3&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sidebar&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;navigation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;as&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这与期望的效果不符(不知道是不是只有我碰到，还是这可能是一个&lt;b&gt;bug&lt;/b&gt;),  我去看了一下&lt;code&gt;web-mode-fold-or-unfold&lt;/code&gt;的实现, 它使用的是&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;put-text-property&lt;/span&gt; &lt;span class="nv"&gt;beg-inside&lt;/span&gt; &lt;span class="nv"&gt;end-inside&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;invisible&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来隐藏折叠部分， &lt;b&gt;我不太清楚为什么使用put-text-property会使indent-region缩进有问题，有知道的可以告知一下&lt;/b&gt;，但我平时在其他项目中都是使用 &lt;code&gt;hs-toggle-hiding&lt;/code&gt; 来折叠代码， &lt;code&gt;hs-toggle-hiding&lt;/code&gt;能很好的与&lt;code&gt;indent-region&lt;/code&gt;配合&lt;/p&gt;

&lt;p&gt;由于&lt;code&gt;web-mode-fold-or-unfold&lt;/code&gt;这个函数太长，不想占用我自己的配置， 所以魔改了一下&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;fset&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;maple/put-text-property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;symbol-function&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;put-text-property&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/web-mode-put-text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="nv"&gt;q&lt;/span&gt; &lt;span class="nv"&gt;prop&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;eq&lt;/span&gt; &lt;span class="nv"&gt;prop&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;invisible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;hs-make-overlay&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="nv"&gt;q&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/put-text-property&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="nv"&gt;q&lt;/span&gt; &lt;span class="nv"&gt;prop&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/web-mode-fold-or-unfold&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cl-letf&lt;/span&gt; &lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nf"&gt;symbol-function&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;put-text-property&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;maple/web-mode-put-text&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;web-mode-fold-or-unfold&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;把&lt;code&gt;put-text-property&lt;/code&gt;临时修改成&lt;code&gt;hs-make-overlay&lt;/code&gt;,这样&lt;b&gt;web-mode&lt;/b&gt;折叠后就能正确地使用&lt;code&gt;maple/indent-buffer&lt;/code&gt;了&lt;/p&gt;

&lt;p&gt;来源:&lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/lisp/init-web.el"&gt;honmaple's init-web.el&lt;/a&gt;&lt;/p&gt;</content><category term="linux"></category><category term="emacs"></category><category term="elisp"></category></entry><entry><title>maple-imenu——类似tagbar的emacs插件</title><link href="https://honmaple.me/articles/2018/10/maple-imenu%E2%80%94%E2%80%94%E7%B1%BB%E4%BC%BCtagbar%E7%9A%84emacs%E6%8F%92%E4%BB%B6.html" rel="alternate"></link><published>2018-10-18T22:27:05+08:00</published><updated>2018-10-19T11:13:06+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-10-18:/articles/2018/10/maple-imenu——类似tagbar的emacs插件.html</id><summary type="html">
&lt;p&gt;这几天参考&lt;code&gt;imenu-list&lt;/code&gt;重写了一个类似 vim 中&lt;code&gt;tagbar&lt;/code&gt;的插件 &lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/maple/maple-imenu.el"&gt;maple-imenu&lt;/a&gt;,  其实之前我一直在使用另一个类似的插件—— &lt;b&gt;imenu-list&lt;/b&gt;, 虽然&lt;b&gt;imenu-list&lt;/b&gt;已经足够使用了, 但它和&lt;b&gt;golden-ratio&lt;/b&gt;搭配起来很难受， &lt;b&gt;golden-ratio&lt;/b&gt; 我是常开的, 但&lt;b&gt;imenu-list&lt;/b&gt;也会偶尔使用(浏览及讲解代码必备，否则查找某个函数和变量时很难受的)&lt;/p&gt;

&lt;p&gt;原本我想要自定义一下&lt;b&gt;imenu-list&lt;/b&gt;，但看了源码之后, 发现很多地方都不符合我的需求， 而且需要改动的地方越来越多，最后不如自己重写&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何使用
&lt;p&gt;下载&lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/maple/maple-imenu.el"&gt;文件&lt;/a&gt;复制到 &lt;code&gt;$HOME/.emacs.d/site-lisp/maple-imenu&lt;/code&gt; 目录, 然后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;maple-imenu&lt;/span&gt;
  &lt;span class="nb"&gt;:load-path&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;site-lisp/maple-imenu&amp;quot;&lt;/span&gt;
  &lt;span class="nb"&gt;:commands&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple-imenu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;:config&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;with-eval-after-load …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">
&lt;p&gt;这几天参考&lt;code&gt;imenu-list&lt;/code&gt;重写了一个类似 vim 中&lt;code&gt;tagbar&lt;/code&gt;的插件 &lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/maple/maple-imenu.el"&gt;maple-imenu&lt;/a&gt;,  其实之前我一直在使用另一个类似的插件—— &lt;b&gt;imenu-list&lt;/b&gt;, 虽然&lt;b&gt;imenu-list&lt;/b&gt;已经足够使用了, 但它和&lt;b&gt;golden-ratio&lt;/b&gt;搭配起来很难受， &lt;b&gt;golden-ratio&lt;/b&gt; 我是常开的, 但&lt;b&gt;imenu-list&lt;/b&gt;也会偶尔使用(浏览及讲解代码必备，否则查找某个函数和变量时很难受的)&lt;/p&gt;

&lt;p&gt;原本我想要自定义一下&lt;b&gt;imenu-list&lt;/b&gt;，但看了源码之后, 发现很多地方都不符合我的需求， 而且需要改动的地方越来越多，最后不如自己重写&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何使用
&lt;p&gt;下载&lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/maple/maple-imenu.el"&gt;文件&lt;/a&gt;复制到 &lt;code&gt;$HOME/.emacs.d/site-lisp/maple-imenu&lt;/code&gt; 目录, 然后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;maple-imenu&lt;/span&gt;
  &lt;span class="nb"&gt;:load-path&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;site-lisp/maple-imenu&amp;quot;&lt;/span&gt;
  &lt;span class="nb"&gt;:commands&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple-imenu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;:config&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;evil&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;evil-make-overriding-map&lt;/span&gt; &lt;span class="nv"&gt;maple-imenu-mode-map&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;normal&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;M-x&lt;/span&gt; &lt;span class="nv"&gt;maple-imenu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


  &lt;div class="row"&gt;
    &lt;div class="col-md-6"&gt;
      &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2018/10/maple-imenu-1.png-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2018/10/maple-imenu-1.png-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="col-md-6"&gt;
     &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2018/10/maple-imenu-2.png-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2018/10/maple-imenu-2.png-thumb" class="lazyload" /&gt;&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;相关变量
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;maple-imenu-buffer&lt;/code&gt;
&lt;p&gt;maple-imenu buffer name, default &lt;code&gt;*maple-imenu*&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maple-imenu-displayed-buffer&lt;/code&gt;
&lt;p&gt;displayed buffer name, default &lt;code&gt;nil&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maple-imenu-overlays&lt;/code&gt;
&lt;p&gt;save overlay info, toggle open or close entry&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maple-imenu-width&lt;/code&gt;
&lt;p&gt;maple-imenu window size, default &lt;code&gt;25&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maple-imenu-padding&lt;/code&gt;
&lt;p&gt;maple-imenu prefix padding, default &lt;code&gt;2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maple-imenu-position&lt;/code&gt;
&lt;p&gt;maple-imenu window display position, default &lt;code&gt;'right&lt;/code&gt;, or &lt;code&gt;'left&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maple-imenu-arrow&lt;/code&gt;
&lt;p&gt;open or close arrow, default &lt;code&gt;("▾" . "▸")&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maple-imenu-auto-update&lt;/code&gt;
&lt;p&gt;auto update when &lt;code&gt;t&lt;/code&gt;, after save every time&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;相比较&lt;b&gt;imenu-list&lt;/b&gt;
&lt;p&gt;➊ 代码和逻辑我认为与 imenu-list 比起来更加通俗易懂&lt;/p&gt;

&lt;p&gt;➋ window fixed, 至少与&lt;b&gt;golden-ratio&lt;/b&gt;搭配不那么难受&lt;/p&gt;

&lt;p&gt;➌ 更多我可以控制和自定义的地方&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="linux"></category><category term="emacs"></category></entry><entry><title>使用blog-mode管理笔记</title><link href="https://honmaple.me/articles/2018/10/%E4%BD%BF%E7%94%A8blog-mode%E7%AE%A1%E7%90%86%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><published>2018-10-18T21:59:33+08:00</published><updated>2018-10-19T00:40:09+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-10-18:/articles/2018/10/使用blog-mode管理笔记.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-97146681"&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-88735449"&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-2179527"&gt;快捷键&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/honmaple/dotfiles/tree/master/emacs.d/site-lisp/blog-mode"&gt;blog-mode&lt;/a&gt;, 一个基于&lt;code&gt;tabulated-list&lt;/code&gt;的emacs笔记管理插件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id="org-97146681"&gt;前言&lt;/h3&gt;
&lt;p&gt;很早之前我一直在使用&lt;code&gt;blog-admin&lt;/code&gt;作为博客笔记的管理工具, 虽然没有用社区维护的 &lt;a href="https://github.com/CodeFalling/blog-admin"&gt;CodeFalling/blog-admin&lt;/a&gt;, 而是用我自己修改的&lt;a href="https://github.com/honmaple/dotfiles/tree/master/emacs.d/site-lisp/blog-admin"&gt;honmaple/blog-admin&lt;/a&gt;, 毕竟我使用的&lt;b&gt;pelican&lt;/b&gt;, 是一个很小众的静态博客生成工具, 为了适应&lt;b&gt;pelican&lt;/b&gt;, 也为了适应自己平时的使用, 所以自己修改了一个版本&lt;/p&gt;

&lt;p&gt;但最近一是闲来没事，二是&lt;b&gt;blog-admin&lt;/b&gt;使用的是&lt;b&gt;ctable&lt;/b&gt;，中英文对齐上有些问题(虽然早就解决了), 三是觉得&lt;b&gt;blog-admin&lt;/b&gt;有很多我不需要的代码, 而且看到那一长串的配置。。。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;blog-admin-backend-type&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;pelican&lt;/span&gt;
      &lt;span class="nv"&gt;blog-admin-backend-new-post-in-drafts&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="c1"&gt;;; create new post in drafts by …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-97146681"&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-88735449"&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-2179527"&gt;快捷键&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/honmaple/dotfiles/tree/master/emacs.d/site-lisp/blog-mode"&gt;blog-mode&lt;/a&gt;, 一个基于&lt;code&gt;tabulated-list&lt;/code&gt;的emacs笔记管理插件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id="org-97146681"&gt;前言&lt;/h3&gt;
&lt;p&gt;很早之前我一直在使用&lt;code&gt;blog-admin&lt;/code&gt;作为博客笔记的管理工具, 虽然没有用社区维护的 &lt;a href="https://github.com/CodeFalling/blog-admin"&gt;CodeFalling/blog-admin&lt;/a&gt;, 而是用我自己修改的&lt;a href="https://github.com/honmaple/dotfiles/tree/master/emacs.d/site-lisp/blog-admin"&gt;honmaple/blog-admin&lt;/a&gt;, 毕竟我使用的&lt;b&gt;pelican&lt;/b&gt;, 是一个很小众的静态博客生成工具, 为了适应&lt;b&gt;pelican&lt;/b&gt;, 也为了适应自己平时的使用, 所以自己修改了一个版本&lt;/p&gt;

&lt;p&gt;但最近一是闲来没事，二是&lt;b&gt;blog-admin&lt;/b&gt;使用的是&lt;b&gt;ctable&lt;/b&gt;，中英文对齐上有些问题(虽然早就解决了), 三是觉得&lt;b&gt;blog-admin&lt;/b&gt;有很多我不需要的代码, 而且看到那一长串的配置。。。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;blog-admin-backend-type&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;pelican&lt;/span&gt;
      &lt;span class="nv"&gt;blog-admin-backend-new-post-in-drafts&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="c1"&gt;;; create new post in drafts by default&lt;/span&gt;
      &lt;span class="nv"&gt;blog-admin-backend-new-post-with-same-name-dir&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="c1"&gt;;; create same-name directory with new post&lt;/span&gt;
      &lt;span class="nv"&gt;blog-admin-backend-path&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/git/pelican&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;blog-admin-backend-pelican-config-file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pelicanconf.py&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;blog-admin-backend-pelican-posts-dir&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;content/org&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;blog-admin-backend-pelican-org-mode-dir&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;content/org&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;blog-admin-backend-pelican-markdown-dir&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;content/markdown&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;blog-admin-backend-pelican-drafts-dir&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;content/draft&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;blog-admin-backend-after-new-post-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;find-file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/add-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;blog-admin-mode-hook&lt;/span&gt;
  &lt;span class="nb"&gt;:if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;display-graphic-p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;;; (set-face-attribute &amp;#39;variable-pitch nil :font &amp;quot;-Sony-Sony Fixed-normal-normal-normal-*-16-*-*-*-c-80-iso10646-1&amp;quot;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;set-face-attribute&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;variable-pitch&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="nb"&gt;:font&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Inconsolata 12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;buffer-face-mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查找资料后锁定了&lt;b&gt;tabulated-list&lt;/b&gt;, 毕竟默认的emacs包管理器使用的就是&lt;b&gt;tabulated-list&lt;/b&gt;, 最终参考&lt;code&gt;package.el.gz&lt;/code&gt;, 自己写了一个&lt;code&gt;blog-mode&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2018/10/blog-mode.png-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2018/10/blog-mode.png-thumb" class="lazyload" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="org-88735449"&gt;配置&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;blog-mode&lt;/span&gt;
  &lt;span class="nb"&gt;:load-path&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;site-lisp/blog-mode&amp;quot;&lt;/span&gt;
  &lt;span class="nb"&gt;:commands&lt;/span&gt; &lt;span class="nv"&gt;blog-start&lt;/span&gt;
  &lt;span class="nb"&gt;:config&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;blog-root-path&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/git/pelican&amp;quot;&lt;/span&gt;   &lt;span class="c1"&gt;;; 文章根目录&lt;/span&gt;
        &lt;span class="nv"&gt;blog-org-path&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;content/org&amp;quot;&lt;/span&gt;      &lt;span class="c1"&gt;;; org文件保存目录&lt;/span&gt;
        &lt;span class="nv"&gt;blog-md-path&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;content/markdown&amp;quot;&lt;/span&gt;  &lt;span class="c1"&gt;;; markdown文件保存目录&lt;/span&gt;
        &lt;span class="nv"&gt;blog-draft-path&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;content/draft&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;; 草稿文件保存目录&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="org-2179527"&gt;快捷键&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt; 新建文章
&lt;p&gt;新建文章以&lt;code&gt;.org&lt;/code&gt;或&lt;code&gt;.md&lt;/code&gt;结尾, 默认会保存在&lt;code&gt;blog-draft-path&lt;/code&gt;目录下&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt; 刷新列表&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 发布与未发布切换
&lt;p&gt;这个其实是目录的切换, 未发布的放到&lt;code&gt;blog-draft-path&lt;/code&gt;目录下, 已发布的&lt;b&gt;org&lt;/b&gt;文件放到&lt;code&gt;blog-org-path&lt;/code&gt;目录, &lt;b&gt;markdown&lt;/b&gt;文件放到&lt;code&gt;blog-md-path&lt;/code&gt;目录&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt; 删除当前文章&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f&lt;/code&gt; 筛选文章
&lt;p&gt;筛选&lt;b&gt;title&lt;/b&gt;和&lt;b&gt;category&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RET&lt;/code&gt; (鼠标左键)
&lt;ul&gt;
&lt;li&gt;点击&lt;b&gt;title&lt;/b&gt;: 打开文件&lt;/li&gt;
&lt;li&gt;点击&lt;b&gt;publish&lt;/b&gt;: 发布与未发布切换&lt;/li&gt;
&lt;li&gt;点击&lt;b&gt;category&lt;/b&gt;: 筛选当前分类
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="linux"></category><category term="emacs"></category></entry><entry><title>elasticsearch笔记</title><link href="https://honmaple.me/articles/2018/09/elasticsearch%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><published>2018-09-19T14:42:46+08:00</published><updated>2019-02-12T14:22:34+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-09-19:/articles/2018/09/elasticsearch笔记.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-11244948"&gt;elasticsearch&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-54291645"&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-69210871"&gt;优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-80687756"&gt;重启&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-25545075"&gt;踩坑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-44144789"&gt;kibana&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-54291645"&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-69210871"&gt;优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-25545075"&gt;踩坑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-11244948"&gt;elasticsearch&lt;/h2&gt;
&lt;h3 id="org-54291645"&gt;安装&lt;/h3&gt;
&lt;h3 id="org-69210871"&gt;优化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;关闭swap&lt;/li&gt;
&lt;li&gt;unlimit调整&lt;/li&gt;
&lt;li&gt;使用ssd&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="org-80687756"&gt;重启&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X PUT &lt;span class="s2"&gt;&amp;quot;localhost:9200/_cluster/settings&amp;quot;&lt;/span&gt; -H &lt;span class="s1"&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -d&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;quot;persistent&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;cluster.routing.allocation.enable&amp;quot;: &amp;quot;none&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;  }&lt;/span&gt;
&lt;span class="s1"&gt;}&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
curl -X POST &lt;span class="s2"&gt;&amp;quot;localhost:9200/_flush/synced&amp;quot;&lt;/span&gt;
supervisorctl restart elasticsearch
curl -X …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-11244948"&gt;elasticsearch&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-54291645"&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-69210871"&gt;优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-80687756"&gt;重启&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-25545075"&gt;踩坑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-44144789"&gt;kibana&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-54291645"&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-69210871"&gt;优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-25545075"&gt;踩坑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-11244948"&gt;elasticsearch&lt;/h2&gt;
&lt;h3 id="org-54291645"&gt;安装&lt;/h3&gt;
&lt;h3 id="org-69210871"&gt;优化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;关闭swap&lt;/li&gt;
&lt;li&gt;unlimit调整&lt;/li&gt;
&lt;li&gt;使用ssd&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="org-80687756"&gt;重启&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X PUT &lt;span class="s2"&gt;&amp;quot;localhost:9200/_cluster/settings&amp;quot;&lt;/span&gt; -H &lt;span class="s1"&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -d&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;quot;persistent&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;cluster.routing.allocation.enable&amp;quot;: &amp;quot;none&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;  }&lt;/span&gt;
&lt;span class="s1"&gt;}&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
curl -X POST &lt;span class="s2"&gt;&amp;quot;localhost:9200/_flush/synced&amp;quot;&lt;/span&gt;
supervisorctl restart elasticsearch
curl -X GET &lt;span class="s2"&gt;&amp;quot;localhost:9200/_cat/health&amp;quot;&lt;/span&gt;
curl -X PUT &lt;span class="s2"&gt;&amp;quot;localhost:9200/_cluster/settings&amp;quot;&lt;/span&gt; -H &lt;span class="s1"&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -d&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;quot;persistent&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;cluster.routing.allocation.enable&amp;quot;: null&lt;/span&gt;
&lt;span class="s1"&gt;  }&lt;/span&gt;
&lt;span class="s1"&gt;}&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="org-25545075"&gt;踩坑&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;滚动重启
&lt;p&gt;重启前&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPUT http://192.168.67.14:9200/_cluster/settings -d &lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;transient&amp;quot; : {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;cluster.routing.allocation.enable&amp;quot; : &amp;quot;none&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;重启后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPUT http://192.168.67.14:9200/_cluster/settings -d &lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;transient&amp;quot; : {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;cluster.routing.allocation.enable&amp;quot; : &amp;quot;all&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;修改index.number_of_shards&lt;/li&gt;
&lt;li&gt;磁盘损坏
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPOST &lt;span class="s1"&gt;&amp;#39;http://192.168.60.32:9200/_cluster/reroute&amp;#39;&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;commands&amp;quot; : [ {&lt;/span&gt;
&lt;span class="s1"&gt;              &amp;quot;allocate&amp;quot; : {&lt;/span&gt;
&lt;span class="s1"&gt;                  &amp;quot;index&amp;quot; : &amp;quot;.marvel-2018.10.10&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;                  &amp;quot;shard&amp;quot; : 0,&lt;/span&gt;
&lt;span class="s1"&gt;                  &amp;quot;node&amp;quot; : &amp;quot;1.7.5-192.168.67.14&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;                  &amp;quot;allow_primary&amp;quot; : true&lt;/span&gt;
&lt;span class="s1"&gt;              }&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        ]&lt;/span&gt;
&lt;span class="s1"&gt;    }&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;unassigned shards
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://127.0.0.1:9200/_cat/shards?v &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep UNASSIGNED
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://127.0.0.1:9200/_nodes/process?pretty
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPOST &lt;span class="s1"&gt;&amp;#39;http://192.168.60.32:9200/_cluster/reroute&amp;#39;&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;commands&amp;quot; : [ {&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;allocate&amp;quot; : {&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;index&amp;quot; : &amp;quot;logstash-xxx-up-2019.01.29&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;shard&amp;quot; : 9,&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;node&amp;quot; : &amp;quot;kzI0751OSJBcx_wmLQ&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;allow_primary&amp;quot; : true&lt;/span&gt;
&lt;span class="s1"&gt;                }&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        ]&lt;/span&gt;
&lt;span class="s1"&gt;    }&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;修改@timestamp类型
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPUT &lt;span class="s2"&gt;&amp;quot;http://127.0.0.1:9200/_template/uplog&amp;quot;&lt;/span&gt; -H &lt;span class="s1"&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -H &lt;span class="s1"&gt;&amp;#39;Host: elasticsearch.morgans&amp;#39;&lt;/span&gt; -d&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;quot;index_patterns&amp;quot;: [&amp;quot;uplog-*&amp;quot;],&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;quot;settings&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;index.number_of_replicas&amp;quot;: 0&lt;/span&gt;
&lt;span class="s1"&gt;  },&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;quot;mappings&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;_default_&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;properties&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;@timestamp&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;type&amp;quot;: &amp;quot;date&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;doc_values&amp;quot;: true&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        }&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;  }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="org-44144789"&gt;kibana&lt;/h2&gt;
&lt;h3 id="org-54291645"&gt;安装&lt;/h3&gt;
&lt;h3 id="org-69210871"&gt;优化&lt;/h3&gt;
&lt;h3 id="org-25545075"&gt;踩坑&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;保存时kibana报错 &lt;code&gt;Visualization Editor: blocked by: [FORBIDDEN/12/index read-only&lt;/code&gt;
&lt;p&gt;参考 &lt;a href="https://github.com/elastic/kibana/issues/13685"&gt;https://github.com/elastic/kibana/issues/13685&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPUT -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; http://127.0.0.1:9200/.kibana/_settings -d &lt;span class="s1"&gt;&amp;#39;{&amp;quot;index.blocks.read_only_allow_delete&amp;quot;: null}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;</content><category term="linux"></category><category term="elasticsearch"></category><category term="devops"></category></entry><entry><title>ansible笔记</title><link href="https://honmaple.me/articles/2018/09/ansible%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><published>2018-09-04T10:53:51+08:00</published><updated>2018-10-24T19:29:35+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-09-04:/articles/2018/09/ansible笔记.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-17703971"&gt;ansible动态解析inventory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-98284113"&gt;ansible自定义模块传递list变量会变成字符串&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-17703971"&gt;ansible动态解析inventory&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;ansible&lt;/b&gt;调用inventory模块时总会调用一个文件或脚本来进行处理, 但我想要动态的解析inventory, 即直接传入一个字符串而不是文件, 直接调用ansible的接口来进行解析（不同格式的inventory也可以手动解析，比如yaml格式可以使用pyyaml解析，不过直接使用ansible接口会更方便一些）&lt;/p&gt;

&lt;p&gt;但问题是&lt;b&gt;ansible&lt;/b&gt;没有直接可供调用的接口, 不过可以直接查看ansible源码，找到相应的解析函数，封装一下即可&lt;/p&gt;

&lt;p&gt;查找源码, 根据 &lt;code&gt;InventoryManager&lt;/code&gt; 传递的&lt;b&gt;source&lt;/b&gt;变量找到&lt;code&gt;parse_sources&lt;/code&gt;这个函数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InventoryManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_sources&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39; iterate over inventory sources and parse each one to populate it&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_setup_inventory_plugins …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-17703971"&gt;ansible动态解析inventory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-98284113"&gt;ansible自定义模块传递list变量会变成字符串&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-17703971"&gt;ansible动态解析inventory&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;ansible&lt;/b&gt;调用inventory模块时总会调用一个文件或脚本来进行处理, 但我想要动态的解析inventory, 即直接传入一个字符串而不是文件, 直接调用ansible的接口来进行解析（不同格式的inventory也可以手动解析，比如yaml格式可以使用pyyaml解析，不过直接使用ansible接口会更方便一些）&lt;/p&gt;

&lt;p&gt;但问题是&lt;b&gt;ansible&lt;/b&gt;没有直接可供调用的接口, 不过可以直接查看ansible源码，找到相应的解析函数，封装一下即可&lt;/p&gt;

&lt;p&gt;查找源码, 根据 &lt;code&gt;InventoryManager&lt;/code&gt; 传递的&lt;b&gt;source&lt;/b&gt;变量找到&lt;code&gt;parse_sources&lt;/code&gt;这个函数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InventoryManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_sources&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39; iterate over inventory sources and parse each one to populate it&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_setup_inventory_plugins&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后再根据&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_setup_inventory_plugins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39; sets up loaded inventory plugins for usage &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;inventory_loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PluginLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;InventoryModule&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ansible.plugins.inventory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_INVENTORY_PLUGIN_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;inventory_plugins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;找到对应的解析&lt;b&gt;plugin&lt;/b&gt;, 我使用的是&lt;b&gt;ini&lt;/b&gt;格式的inventory, 所以自定义一下&lt;code&gt;ansible.plugins.inventory.ini.InventoryModule&lt;/code&gt;这个模块即可&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ansible.plugins.inventory.ini&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;InventoryModule&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ansible.inventory.data&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;InventoryData&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ansible.parsing.dataloader&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DataLoader&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ansible.module_utils._text&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;to_text&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ansible.template&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Templar&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InventoryCustomModule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InventoryModule&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mine_parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b_data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataLoader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;InventoryData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;templar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Templar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;to_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;surrogate_or_strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;UnicodeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;b_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b_COMMENT_MARKERS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;surrogate_or_strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;b&gt;如何使用&lt;/b&gt;:
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s1"&gt;[MY-HOST]&lt;/span&gt;
&lt;span class="s1"&gt;MY_HOST-1 ansible_ssh_host=127.0.0.1&lt;/span&gt;
&lt;span class="s1"&gt;MY_HOST-2 ansible_ssh_host=127.0.0.2&lt;/span&gt;
&lt;span class="s1"&gt;MY_HOST-3 ansible_ssh_host=127.0.0.3&lt;/span&gt;
&lt;span class="s1"&gt;MY_HOST-4 ansible_ssh_host=127.0.0.4&lt;/span&gt;

&lt;span class="s1"&gt;[MY-HOST:vars]&lt;/span&gt;
&lt;span class="s1"&gt;vip=127.0.0.10&lt;/span&gt;
&lt;span class="s1"&gt;ppp=test&lt;/span&gt;

&lt;span class="s1"&gt;[MY-HOST1]&lt;/span&gt;
&lt;span class="s1"&gt;MY_HOST1-1 ansible_ssh_host=127.0.0.11&lt;/span&gt;
&lt;span class="s1"&gt;MY_HOST1-2 ansible_ssh_host=127.0.0.12&lt;/span&gt;

&lt;span class="s1"&gt;[MY-HOST:children]&lt;/span&gt;
&lt;span class="s1"&gt;MY-HOST1&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;InventoryCustomModule&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mine_parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inventory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;child_groups&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;结果&lt;/b&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(ungrouped, [], {})
(all, [ungrouped], {})
(MY-HOST, [MY-HOST1], {u&amp;#39;vip&amp;#39;: u&amp;#39;127.0.0.10&amp;#39;, u&amp;#39;ppp&amp;#39;: u&amp;#39;test&amp;#39;})
(MY_HOST-1, {u&amp;#39;ansible_ssh_host&amp;#39;: u&amp;#39;127.0.0.1&amp;#39;, &amp;#39;inventory_file&amp;#39;: None, &amp;#39;inventory_dir&amp;#39;: None})
(MY_HOST-2, {u&amp;#39;ansible_ssh_host&amp;#39;: u&amp;#39;127.0.0.2&amp;#39;, &amp;#39;inventory_file&amp;#39;: None, &amp;#39;inventory_dir&amp;#39;: None})
(MY_HOST-3, {u&amp;#39;ansible_ssh_host&amp;#39;: u&amp;#39;127.0.0.3&amp;#39;, &amp;#39;inventory_file&amp;#39;: None, &amp;#39;inventory_dir&amp;#39;: None})
(MY_HOST-4, {u&amp;#39;ansible_ssh_host&amp;#39;: u&amp;#39;127.0.0.4&amp;#39;, &amp;#39;inventory_file&amp;#39;: None, &amp;#39;inventory_dir&amp;#39;: None})
(MY-HOST1, [], {})
(MY_HOST1-1, {u&amp;#39;ansible_ssh_host&amp;#39;: u&amp;#39;127.0.0.11&amp;#39;, &amp;#39;inventory_file&amp;#39;: None, &amp;#39;inventory_dir&amp;#39;: None})
(MY_HOST1-2, {u&amp;#39;ansible_ssh_host&amp;#39;: u&amp;#39;127.0.0.12&amp;#39;, &amp;#39;inventory_file&amp;#39;: None, &amp;#39;inventory_dir&amp;#39;: None})
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看出已经没什么大的问题了, 但有一个点, &lt;b&gt;all&lt;/b&gt;组下的groups列表只有&lt;code&gt;ungrouped&lt;/code&gt;, 正常情况下&lt;code&gt;MY-HOST&lt;/code&gt;组也应该继承&lt;code&gt;all&lt;/code&gt;组, &lt;del&gt;可能是还需要一些其他的操作吧&lt;/del&gt;，继续翻源码，找到了&lt;code&gt;InventoryData&lt;/code&gt;的&lt;code&gt;reconcile_inventory&lt;/code&gt;方法, 修改一下即可&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;InventoryCustomModule&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mine_parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inventory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reconcile_inventory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="org-98284113"&gt;ansible自定义模块传递list变量会变成字符串&lt;/h2&gt;
&lt;p&gt;我自定义了一个模块，需要传入一个&lt;b&gt;list&lt;/b&gt;变量&lt;code&gt;group_names&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ansible.module_utils.basic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AnsibleModule&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AnsibleModule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;argument_spec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;group_names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;required&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
        &lt;span class="p"&gt;}))&lt;/span&gt;

    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;group_names&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;group_names&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;
    &lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fail_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但发现传入的变量最后变成的&lt;code&gt;str type&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FAILED! =&amp;gt; {&amp;quot;changed&amp;quot;: false, &amp;quot;failed&amp;quot;: true, &amp;quot;msg&amp;quot;: {&amp;quot;group_names&amp;quot;: &amp;quot;[&amp;#39;test&amp;#39;]&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;&amp;lt;type &amp;#39;str&amp;#39;&amp;gt;&amp;quot;}}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最后查找资料后才知道, 传递的变量需要增加&lt;code&gt;type&lt;/code&gt;参数, 否则都是&lt;b&gt;str&lt;/b&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AnsibleModule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;argument_spec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;group_names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;required&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


</content><category term="linux"></category><category term="python"></category><category term="ansible"></category><category term="devops"></category></entry><entry><title>如何保持一个干净的系统</title><link href="https://honmaple.me/articles/2018/07/%E5%A6%82%E4%BD%95%E4%BF%9D%E6%8C%81%E4%B8%80%E4%B8%AA%E5%B9%B2%E5%87%80%E7%9A%84%E7%B3%BB%E7%BB%9F.html" rel="alternate"></link><published>2018-07-11T10:42:19+08:00</published><updated>2018-09-13T15:28:35+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-07-11:/articles/2018/07/如何保持一个干净的系统.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-12861548"&gt;python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-37676032"&gt;golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1819888"&gt;lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-30938782"&gt;javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;由于工作需要经常会使用多种语言, 比如 python, golang, lua, javascript等, 各种语言都有自己的包管理器，像python的包管理器&lt;b&gt;pip&lt;/b&gt;, lua的包管理器&lt;b&gt;luarocks&lt;/b&gt;。。。&lt;/p&gt;

&lt;p&gt;每个包管理器安装package的方式，位置都不相同，对于一个有洁癖的人来说,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls ~/ -al
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;后各种各样的&lt;code&gt;.something&lt;/code&gt;简直是场灾难, 所以保持一个干净的系统是非常必要的, 比如把相关语言的package都放到一个目录(我选择放到&lt;code&gt;$HOME/repo/{language}&lt;/code&gt;)下&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;请不要使用root用户，或者sudo来安装非必要的软件包&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id="org-12861548"&gt;python&lt;/h3&gt;
&lt;p&gt;我的&lt;b&gt;python&lt;/b&gt;环境是&lt;code&gt;pip+virtualenv+virtualenvwrapper&lt;/code&gt;, &lt;b&gt;pip&lt;/b&gt;可以有多种使用方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;sudo&lt;/b&gt;
&lt;p&gt;&lt;b&gt;sudo&lt;/b&gt;安装的package放到&lt;code&gt;/usr/lib64 …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-12861548"&gt;python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-37676032"&gt;golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1819888"&gt;lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-30938782"&gt;javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;由于工作需要经常会使用多种语言, 比如 python, golang, lua, javascript等, 各种语言都有自己的包管理器，像python的包管理器&lt;b&gt;pip&lt;/b&gt;, lua的包管理器&lt;b&gt;luarocks&lt;/b&gt;。。。&lt;/p&gt;

&lt;p&gt;每个包管理器安装package的方式，位置都不相同，对于一个有洁癖的人来说,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls ~/ -al
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;后各种各样的&lt;code&gt;.something&lt;/code&gt;简直是场灾难, 所以保持一个干净的系统是非常必要的, 比如把相关语言的package都放到一个目录(我选择放到&lt;code&gt;$HOME/repo/{language}&lt;/code&gt;)下&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;请不要使用root用户，或者sudo来安装非必要的软件包&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id="org-12861548"&gt;python&lt;/h3&gt;
&lt;p&gt;我的&lt;b&gt;python&lt;/b&gt;环境是&lt;code&gt;pip+virtualenv+virtualenvwrapper&lt;/code&gt;, &lt;b&gt;pip&lt;/b&gt;可以有多种使用方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;sudo&lt;/b&gt;
&lt;p&gt;&lt;b&gt;sudo&lt;/b&gt;安装的package放到&lt;code&gt;/usr/lib64/python-{verison}&lt;/code&gt;目录下, 这可能会与系统的包管理器所安装的python package冲突, 比如&lt;b&gt;docker&lt;/b&gt;可以使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S docker
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;也可以使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install docker
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但更新系统包时可能有冲突导致无法更新&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;--user&lt;/b&gt;(-U)
&lt;p&gt;使用本地安装，不需要&lt;b&gt;sudo&lt;/b&gt;权限, 安装的package会放到&lt;code&gt;$HOME/.local&lt;/code&gt;目录下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;virtualenv&lt;/b&gt;
&lt;p&gt;python的各种依赖包环境分离靠的就是&lt;b&gt;virtualenv&lt;/b&gt;, 它会把安装的&lt;b&gt;package&lt;/b&gt;放到&lt;code&gt;$WORKON_HOME&lt;/code&gt;这个环境变量下, 我平时也主要使用这个，但一些常用的package, 像http,docker-compose,pelican等, 我不想在使用时还得&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;workon {virtualenv name}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后才能使用, 太麻烦&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最有效的方法是搭配&lt;code&gt;--user&lt;/code&gt;和&lt;code&gt;virtualenv&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置&lt;code&gt;--user&lt;/code&gt;的安装目录
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PYTHONUSERBASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/python
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;virtualenv&lt;/code&gt;的安装目录
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/python/virtualenv
&lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/python/bin/virtualenvwrapper.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;PATH&lt;/code&gt;变量
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/python/bin
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后无论是&lt;code&gt;pip install package --user&lt;/code&gt;还是&lt;b&gt;mkvirtualenv&lt;/b&gt;后&lt;code&gt;pip install package&lt;/code&gt;, 所安装的package都会放到&lt;code&gt;$HOME/repo/python&lt;/code&gt;目录下&lt;/p&gt;

&lt;h3 id="org-37676032"&gt;golang&lt;/h3&gt;
&lt;p&gt;与python同理&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;设置&lt;code&gt;GOPATH&lt;/code&gt;变量
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/golang
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;PATH&lt;/code&gt;变量
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/python/bin:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/golang/bin
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="org-1819888"&gt;lua&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;设置&lt;b&gt;luarocks&lt;/b&gt;安装默认参数
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;luarocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;luarocks --tree=$HOME/repo/lua&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;LUA_PATH&lt;/code&gt;与&lt;code&gt;LUA_CPATH&lt;/code&gt;变量
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LUA_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/repo/lua/share/lua/5.3/?.lua;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/repo/lua/share/lua/5.3/?/init.lua;&lt;/span&gt;&lt;span class="nv"&gt;$LUA_PATH&lt;/span&gt;&lt;span class="s2"&gt;;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LUA_CPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/repo/lua/lib/lua/5.3/?.so;&lt;/span&gt;&lt;span class="nv"&gt;$LUA_CPATH&lt;/span&gt;&lt;span class="s2"&gt;;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;PATH&lt;/code&gt;变量
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/python/bin:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/golang/bin:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/lua/bin
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="org-30938782"&gt;javascript&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;设置&lt;code&gt;NODE_PATH&lt;/code&gt;变量
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;NODE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/npm
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;PATH&lt;/code&gt;变量
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/python/bin:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/golang/bin:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/lua/bin:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/repo/npm/.bin
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后, 把相关代码放到&lt;code&gt;$HOME/.bashrc&lt;/code&gt;中, 就可以享受一个相对干净的系统了&lt;/p&gt;</content><category term="linux"></category><category term="archlinux"></category></entry><entry><title>自定义helm式的ivy</title><link href="https://honmaple.me/articles/2018/06/%E8%87%AA%E5%AE%9A%E4%B9%89helm%E5%BC%8F%E7%9A%84ivy.html" rel="alternate"></link><published>2018-06-14T15:46:18+08:00</published><updated>2018-06-28T19:44:24+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-06-14:/articles/2018/06/自定义helm式的ivy.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-56827192"&gt;吐嘈一: counsel-find-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-46223305"&gt;吐嘈二: tab 键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-77342320"&gt;吐嘈三: 记忆多个按键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-39855294"&gt;吐嘈四: 模糊搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-77747879"&gt;吐嘈五: 候选词按使用频率排序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-60253486"&gt;吐嘈六: minibuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-73104572"&gt;吐嘈七: dired 中复制或重命名文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-22512558"&gt;吐嘈八: sudo edit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-31590745"&gt;吐嘈九: counsel-ag 默认不会使用已选的单词&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-16912421"&gt;总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;在 &lt;b&gt;n&lt;/b&gt; 个月前, 我曾写过 &lt;a href="https://honmaple.me/articles/2018/01/helm与ivy简单对比.html"&gt;helm与ivy简单对比&lt;/a&gt;, 并吐嘈了&lt;code&gt;ivy&lt;/code&gt;细节打磨不够，以至于我切换到&lt;code&gt;ivy&lt;/code&gt;不到几天后,
又回到了&lt;code&gt;helm&lt;/code&gt;的拥抱, 但在&lt;b&gt;n&lt;/b&gt;个月后，本着&lt;b&gt;生命不止，折腾不息&lt;/b&gt;的精神, “狠狠地”的折腾了一把 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-56827192"&gt;吐嘈一: counsel-find-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-46223305"&gt;吐嘈二: tab 键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-77342320"&gt;吐嘈三: 记忆多个按键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-39855294"&gt;吐嘈四: 模糊搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-77747879"&gt;吐嘈五: 候选词按使用频率排序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-60253486"&gt;吐嘈六: minibuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-73104572"&gt;吐嘈七: dired 中复制或重命名文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-22512558"&gt;吐嘈八: sudo edit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-31590745"&gt;吐嘈九: counsel-ag 默认不会使用已选的单词&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-16912421"&gt;总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;在 &lt;b&gt;n&lt;/b&gt; 个月前, 我曾写过 &lt;a href="https://honmaple.me/articles/2018/01/helm与ivy简单对比.html"&gt;helm与ivy简单对比&lt;/a&gt;, 并吐嘈了&lt;code&gt;ivy&lt;/code&gt;细节打磨不够，以至于我切换到&lt;code&gt;ivy&lt;/code&gt;不到几天后,
又回到了&lt;code&gt;helm&lt;/code&gt;的拥抱, 但在&lt;b&gt;n&lt;/b&gt;个月后，本着&lt;b&gt;生命不止，折腾不息&lt;/b&gt;的精神, “狠狠地”的折腾了一把&lt;code&gt;ivy&lt;/code&gt;, 让&lt;code&gt;ivy&lt;/code&gt;也能像&lt;code&gt;helm&lt;/code&gt;一样“如丝般润滑”，适应我平时的操作&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="org-56827192"&gt;吐嘈一: counsel-find-file&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我在&lt;b&gt;dired&lt;/b&gt;中移动文件, 即使已经设置了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;:map&lt;/span&gt; &lt;span class="nv"&gt;counsel-find-file-map&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C-h&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;counsel-up-directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但&lt;code&gt;C-h&lt;/code&gt;返回上级目录还是无效&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;无意中从&lt;b&gt;spacemacs&lt;/b&gt;中找到了解决办法(我电脑上常备 spacemacs 的配置，当看到 spacemacs 有什么更新都会切换过去尝试一番, 遇到适合自己的配置会"参考"一下, 哈), spacemacs 并没有遇到上述问题，在经过查找后，发现有这个一行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;define-key&lt;/span&gt; &lt;span class="nv"&gt;ivy-minibuffer-map&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kbd&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C-h&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kbd&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;DEL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;转换成我自己的配置就是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;:map&lt;/span&gt; &lt;span class="nv"&gt;ivy-minibuffer-map&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C-h&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;backspace&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-46223305"&gt;吐嘈二: tab 键&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;tab&lt;/b&gt; 键我只想要&lt;b&gt;complete&lt;/b&gt;， 而不是&lt;b&gt;complete and done&lt;/b&gt;, 虽然&lt;code&gt;ivy&lt;/code&gt;提供了另外的选项&lt;code&gt;ivy-partial-or-done&lt;/code&gt;,但不是我想要的效果,尤其是把&lt;b&gt;aaa.py&lt;/b&gt;重命名为&lt;b&gt;aaa.py.bak&lt;/b&gt;时&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;关于这一条，真的是“狠狠”地折腾了一把, 最终以&lt;b&gt;胜利&lt;/b&gt;告终&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/ivy-done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ivy-partial-or-done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;delete-minibuffer-contents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;ivy-text&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ivy-state-current&lt;/span&gt; &lt;span class="nv"&gt;ivy-last&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="nv"&gt;ivy-text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;eq&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ivy-state-collection&lt;/span&gt; &lt;span class="nv"&gt;ivy-last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;read-file-name-internal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;dir&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ivy-expand-file-if-directory&lt;/span&gt; &lt;span class="nv"&gt;ivy-text&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ivy--cd&lt;/span&gt; &lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;主要思路就是插入当前选中项, 如果是&lt;code&gt;read-file-name-internal&lt;/code&gt;(文件操作), 并且选中项是一个目录，则列出这个目录的文件，避免选中&lt;b&gt;tab&lt;/b&gt;两次才能列出文件, 这样一来，第一次&lt;b&gt;tab&lt;/b&gt;就是&lt;b&gt;complete&lt;/b&gt;, 第二次&lt;b&gt;tab&lt;/b&gt;才是&lt;b&gt;done&lt;/b&gt;, 最终效果超出预期(V 字手)&lt;/p&gt;

&lt;h2 id="org-77342320"&gt;吐嘈三: 记忆多个按键&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;ivy 有这样一个问题,它不会像 helm 一样在第一行显示用户输入的字符，在 ivy 的很多 issue 中都有人提了这个问题，如果当前目录下有名为&lt;b&gt;aaa&lt;/b&gt;的目录,这是我想要创建一个&lt;b&gt;aaa.py&lt;/b&gt;的文件，ivy 会列出 aaa 这个目录，那是我该怎么创建 aaa.py 文件。方法是一个新的命令&lt;code&gt;ivy-immediate-done&lt;/code&gt;,而不是&lt;code&gt;ivy-alt-done&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;现在的&lt;b&gt;ivy&lt;/b&gt;已经支持可选择用户输入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;ivy-use-selectable-prompt&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-39855294"&gt;吐嘈四: 模糊搜索&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在 helm 中我可以很容易的使用模糊搜索，ivy 中也一样，只要简单的设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;ivy-re-builders-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;ivy--regex-fuzzy&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但 ivy 中有这样一个问题，空格键不能在模糊匹配中使用，/汗，作为从 helm 转入 ivy 的人，经常会不经意间在输入时按下空格键，然后，What? ivy 中搜索变成空了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;其实我想要混合使用空格与非空格, 但最终还是没能找到解决办法, 因为我已经适应的使用空格分隔, 所以暂时使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;ivy-re-builders-alist&lt;/span&gt;
&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;   &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;ivy--regex-ignore-order&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-77747879"&gt;吐嘈五: 候选词按使用频率排序&lt;/h2&gt;
&lt;p&gt;这个。。。&lt;/p&gt;

&lt;h2 id="org-60253486"&gt;吐嘈六: minibuffer&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;helm 从当前 buffer 中弹出 helm-buffer 是多么明智的选择，视野不会移动到当前 buffer 以外的地方，尤其是在屏幕较大的时候, 而 ivy 使用 minibuffer 总是从屏幕左下方弹出&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;经过多次试验， 最终也找到的解决办法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; custom ivy display function&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;defvar&lt;/span&gt; &lt;span class="nv"&gt;maple/ivy-format-padding&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/ivy-read-around&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;-ivy-read&lt;/span&gt; &lt;span class="kp"&gt;&amp;amp;rest&lt;/span&gt; &lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;Advice ivy-read `-IVY-READ` `ARGS`.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;maple/ivy-format-padding&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;make-string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;window-left-column&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="sc"&gt;?\s&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setcar&lt;/span&gt; &lt;span class="nv"&gt;args&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="nv"&gt;maple/ivy-format-padding&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;car&lt;/span&gt; &lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="nv"&gt;-ivy-read&lt;/span&gt; &lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/ivy-format-function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cands&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;Transform CANDS into a string for minibuffer.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ivy--format-function-generic&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="nv"&gt;maple/ivy-format-padding&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ivy--add-face&lt;/span&gt; &lt;span class="nv"&gt;str&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;ivy-current-match&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="nv"&gt;maple/ivy-format-padding&lt;/span&gt; &lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="nv"&gt;cands&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;advice-add&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;ivy-read&lt;/span&gt; &lt;span class="nb"&gt;:around&lt;/span&gt; &lt;span class="nf"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;maple/ivy-read-around&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;ivy-count-format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
      &lt;span class="nv"&gt;ivy-format-function&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;maple/ivy-format-function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;主要思路就是在各个&lt;b&gt;collections&lt;/b&gt;前添加空格, 空格宽度为 &lt;code&gt;(window-left-column)&lt;/code&gt;, &lt;code&gt;window-left-column&lt;/code&gt; 按照 help 文档来说就是&lt;b&gt;Return left column of window WINDOW&lt;/b&gt;, 与屏幕左边缘的距离; 然后自定义 &lt;code&gt;ivy-format-function&lt;/code&gt;,即可, 需要注意的一点, 不仅&lt;b&gt;collections&lt;/b&gt;前需要添加空格, &lt;b&gt;prompt&lt;/b&gt;前也需要添加空格&lt;/p&gt;

&lt;p&gt;最终效果
&lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2018/06/ivy-minibuffer.png-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2018/06/ivy-minibuffer.png-thumb" class="lazyload" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="org-73104572"&gt;吐嘈七: dired 中复制或重命名文件&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我之前想要复制或重命名一个文件，只要进入&lt;b&gt;dired&lt;/b&gt;中按&lt;code&gt;C&lt;/code&gt;或&lt;code&gt;R&lt;/code&gt;，然后选择目标就行，但不知道为什么，使用 ivy 时复制重命名总是报错，不成功&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;经过测试, 现在的&lt;b&gt;ivy&lt;/b&gt;表现正常&lt;/p&gt;

&lt;h2 id="org-22512558"&gt;吐嘈八: sudo edit&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;使用&lt;b&gt;ivy&lt;/b&gt;时, &lt;code&gt;sudo edit&lt;/code&gt; 不成功&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前已正常&lt;/p&gt;

&lt;h2 id="org-31590745"&gt;吐嘈九: counsel-ag 默认不会使用已选的单词&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;counsel-ag&lt;/b&gt;, 默认不会使用已选的单词, 想要查找已选单词, 需要在激活&lt;code&gt;counsel-ag&lt;/code&gt;后使用&lt;code&gt;M-n&lt;/code&gt;, 很麻烦，不像&lt;b&gt;helm&lt;/b&gt;默认就可以选择&lt;b&gt;region&lt;/b&gt;里的单词, 另外&lt;code&gt;counsel-ag&lt;/code&gt;默认会使用含&lt;b&gt;.git&lt;/b&gt;目录的目录作为根目录进行查找, 这与&lt;code&gt;counsel-projectile-ag&lt;/code&gt;功能上有些冲突了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;解决办法很简单, &lt;code&gt;defadvice counsel-ag&lt;/code&gt; 即可&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/counsel-ag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;-counsel-ag&lt;/span&gt; &lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;initial-input&lt;/span&gt; &lt;span class="nv"&gt;initial-directory&lt;/span&gt; &lt;span class="nv"&gt;extra-ag-args&lt;/span&gt; &lt;span class="nv"&gt;ag-prompt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;initial-input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;region-active-p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;initial-input&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-substring-no-properties&lt;/span&gt;
                         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;region-beginning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;region-end&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;unless&lt;/span&gt; &lt;span class="nv"&gt;initial-directory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;initial-directory&lt;/span&gt; &lt;span class="nv"&gt;default-directory&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;funcall&lt;/span&gt; &lt;span class="nv"&gt;-counsel-ag&lt;/span&gt; &lt;span class="nv"&gt;initial-input&lt;/span&gt; &lt;span class="nv"&gt;initial-directory&lt;/span&gt; &lt;span class="nv"&gt;extra-ag-args&lt;/span&gt; &lt;span class="nv"&gt;ag-prompt&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;advice-add&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;counsel-ag&lt;/span&gt; &lt;span class="nb"&gt;:around&lt;/span&gt; &lt;span class="nf"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;maple/counsel-ag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-16912421"&gt;总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;说一说为什么想要折腾&lt;b&gt;ivy&lt;/b&gt;:
&lt;ol&gt;
&lt;li&gt;在使用&lt;b&gt;helm&lt;/b&gt;时, 首次打开会很慢(我在打开 emacs 后,习惯使用&lt;code&gt;helm-recentf&lt;/code&gt;打开最近文件, 但不知道为什么，第一次会非常慢)；另外, 打开 emacs 后， 必须先使用&lt;code&gt;helm-recentf&lt;/code&gt;才能激活&lt;b&gt;helm&lt;/b&gt;, 如果使用其它&lt;b&gt;helm&lt;/b&gt;命令, 比如&lt;code&gt;helm-M-x&lt;/code&gt;或者&lt;code&gt;helm-projectile&lt;/code&gt;只会使用默认的&lt;b&gt;ido&lt;/b&gt;， 并不能激活&lt;b&gt;helm&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;helm&lt;/b&gt;真的为用户做出太多选择， 想要自定义非常难, 即使成功也不是从源头解决，而是用了取巧的办法
&lt;/li&gt;
&lt;li&gt;速度，不知道是不是我的感觉错误，最新版本的&lt;b&gt;helm&lt;/b&gt;速度慢了很多
&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;还得吐嘈&lt;b&gt;ivy&lt;/b&gt;:
&lt;p&gt;&lt;b&gt;ivy&lt;/b&gt; 细节上果然打磨不够, 不过经过调(折)教(腾), 大致上和我之前使用&lt;b&gt;helm&lt;/b&gt;的习惯一样了&lt;/p&gt;

&lt;p&gt;最终吐嘈点: &lt;b&gt;ivy-occur&lt;/b&gt;, &lt;code&gt;ivy-occur&lt;/code&gt; 使用了&lt;b&gt;wgrep&lt;/b&gt;作为多文件编辑, 但说实话, 我觉得很难用, 和&lt;b&gt;helm-ag&lt;/b&gt;自己实现的&lt;b&gt;helm-ag-edit&lt;/b&gt;比起来更是难受, 一会就要切换一下&lt;code&gt;ivy-wgrep-change-to-wgrep-mode&lt;/code&gt;, 不切用不了, 这个等有时间再折腾吧!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ok,就这样&lt;/p&gt;

</content><category term="linux"></category><category term="emacs"></category></entry><entry><title>git笔记</title><link href="https://honmaple.me/articles/2018/03/git%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><published>2018-03-01T16:25:38+08:00</published><updated>2019-03-07T01:50:02+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-03-01:/articles/2018/03/git笔记.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-50953256"&gt;git修改提交作者和邮箱&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-52016602"&gt;合并多个commit历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-8817443"&gt;git删除远程分支已经被删除的本地分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1715151"&gt;合并pull request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-50953256"&gt;git修改提交作者和邮箱&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;提交前
&lt;p&gt;如果代码未提交,则可以&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config  user.name &lt;span class="s2"&gt;&amp;quot;Author Name&amp;quot;&lt;/span&gt;
git config  user.email &lt;span class="s2"&gt;&amp;quot;Author Email&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;提交后
&lt;p&gt;如果代码已经提交,或者已经push到remote(只能修改最近一次提交)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git commit --amend --author&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NewAuthor &amp;lt;NewEmail@address.com&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改全部&lt;b&gt;commit&lt;/b&gt;,需要使用脚本 &lt;a href="https://help.github.com/articles/changing-author-info/"&gt;参考github官方&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

git filter-branch --env-filter &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;OLD_EMAIL=&amp;quot;your-old-email@example.com …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-50953256"&gt;git修改提交作者和邮箱&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-52016602"&gt;合并多个commit历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-8817443"&gt;git删除远程分支已经被删除的本地分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1715151"&gt;合并pull request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-50953256"&gt;git修改提交作者和邮箱&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;提交前
&lt;p&gt;如果代码未提交,则可以&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config  user.name &lt;span class="s2"&gt;&amp;quot;Author Name&amp;quot;&lt;/span&gt;
git config  user.email &lt;span class="s2"&gt;&amp;quot;Author Email&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;提交后
&lt;p&gt;如果代码已经提交,或者已经push到remote(只能修改最近一次提交)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git commit --amend --author&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NewAuthor &amp;lt;NewEmail@address.com&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改全部&lt;b&gt;commit&lt;/b&gt;,需要使用脚本 &lt;a href="https://help.github.com/articles/changing-author-info/"&gt;参考github官方&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

git filter-branch --env-filter &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;OLD_EMAIL=&amp;quot;your-old-email@example.com&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;CORRECT_NAME=&amp;quot;Your Correct Name&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;CORRECT_EMAIL=&amp;quot;your-correct-email@example.com&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;if [ &amp;quot;$GIT_COMMITTER_EMAIL&amp;quot; = &amp;quot;$OLD_EMAIL&amp;quot; ]&lt;/span&gt;
&lt;span class="s1"&gt;then&lt;/span&gt;
&lt;span class="s1"&gt;    export GIT_COMMITTER_NAME=&amp;quot;$CORRECT_NAME&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    export GIT_COMMITTER_EMAIL=&amp;quot;$CORRECT_EMAIL&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;fi&lt;/span&gt;
&lt;span class="s1"&gt;if [ &amp;quot;$GIT_AUTHOR_EMAIL&amp;quot; = &amp;quot;$OLD_EMAIL&amp;quot; ]&lt;/span&gt;
&lt;span class="s1"&gt;then&lt;/span&gt;
&lt;span class="s1"&gt;    export GIT_AUTHOR_NAME=&amp;quot;$CORRECT_NAME&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    export GIT_AUTHOR_EMAIL=&amp;quot;$CORRECT_EMAIL&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;fi&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; --tag-name-filter cat -- --branches --tags
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;b&gt;.git&lt;/b&gt;同级目录下运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sh git.sh
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后使用&lt;code&gt;--force&lt;/code&gt; push到远程&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="org-52016602"&gt;合并多个commit历史&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git rebase -i commit_id
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用 &lt;b&gt;magit&lt;/b&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;magit-status
ll
# move to commit id
r-ii
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="org-8817443"&gt;git删除远程分支已经被删除的本地分支&lt;/h2&gt;
&lt;p&gt;也不知道为什么， google了很久也没找到答案，明明题目已经清楚的问&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如何删除远程分支已经被删除的本地分支?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可下面一群人在答&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如何删除本地分支已经被删除的远程分支?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;瞎答&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;最后还是只能靠自己&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 先清理远程分支, 即删除本地分支已经被删除的远程分支&lt;/span&gt;
git fetch -p
&lt;span class="c1"&gt;# 找到存在的远程分支&lt;/span&gt;
git branch -r &lt;span class="p"&gt;|&lt;/span&gt; grep -v HEAD &lt;span class="p"&gt;|&lt;/span&gt; awk -F &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &amp;gt; /tmp/test.txt
&lt;span class="c1"&gt;# 清理本地分支&lt;/span&gt;
git branch -a &lt;span class="p"&gt;|&lt;/span&gt; grep -v &lt;span class="s1"&gt;&amp;#39;\*&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;  egrep -v -f /tmp/test.txt &lt;span class="p"&gt;|&lt;/span&gt; xargs git branch -d
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意: &lt;b&gt;不要使用&lt;/b&gt; &lt;code&gt;xargs git branch -D&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="org-1715151"&gt;合并pull request&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git fetch origin pull/3/head:pr
git checkou pr
&lt;/pre&gt;&lt;/div&gt;
</content><category term="linux"></category><category term="git"></category></entry><entry><title>docker笔记</title><link href="https://honmaple.me/articles/2018/02/docker%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><published>2018-02-23T23:19:55+08:00</published><updated>2018-02-23T23:33:13+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-02-23:/articles/2018/02/docker笔记.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-73285490"&gt;docker删除硬盘残留的文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-84340943"&gt;docker构建时禁用缓存&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-73285490"&gt;docker删除硬盘残留的文件&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;docker rmi ...&lt;/code&gt; 或者 &lt;code&gt;docker image rm ...&lt;/code&gt; 并不能将镜像完全删除，还会一直占用硬盘空间&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker system prune
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;该命令不会删除已存在镜像(不管是否正在运行)&lt;/p&gt;

&lt;p&gt;(硬盘一下子多个好几个G, 心情不错)&lt;/p&gt;

&lt;h3 id="org-84340943"&gt;docker构建时禁用缓存&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;dockerfile&lt;/b&gt; 中有多个 RUN 或者 ADD .. 命令时, 每个 RUN 都会创建一个 image, 下一个 image 会以上一个为基础（缓存）继续构建,&lt;/p&gt;

&lt;p&gt;可以使用 &lt;code&gt;docker images -a&lt;/code&gt; 看到很多 &lt;b&gt;&amp;lt;none&amp;gt;&lt;/b&gt; 的 image&lt;/p&gt;

&lt;p&gt;不过作为一名有洁癖的coder, 这种情况不能忍&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-73285490"&gt;docker删除硬盘残留的文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-84340943"&gt;docker构建时禁用缓存&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-73285490"&gt;docker删除硬盘残留的文件&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;docker rmi ...&lt;/code&gt; 或者 &lt;code&gt;docker image rm ...&lt;/code&gt; 并不能将镜像完全删除，还会一直占用硬盘空间&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker system prune
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;该命令不会删除已存在镜像(不管是否正在运行)&lt;/p&gt;

&lt;p&gt;(硬盘一下子多个好几个G, 心情不错)&lt;/p&gt;

&lt;h3 id="org-84340943"&gt;docker构建时禁用缓存&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;dockerfile&lt;/b&gt; 中有多个 RUN 或者 ADD .. 命令时, 每个 RUN 都会创建一个 image, 下一个 image 会以上一个为基础（缓存）继续构建,&lt;/p&gt;

&lt;p&gt;可以使用 &lt;code&gt;docker images -a&lt;/code&gt; 看到很多 &lt;b&gt;&amp;lt;none&amp;gt;&lt;/b&gt; 的 image&lt;/p&gt;

&lt;p&gt;不过作为一名有洁癖的coder, 这种情况不能忍&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker build --no-cache -t hello .
&lt;/pre&gt;&lt;/div&gt;

</content><category term="linux"></category><category term="docker"></category></entry><entry><title>emacs自动更新文件头</title><link href="https://honmaple.me/articles/2018/01/emacs%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%96%87%E4%BB%B6%E5%A4%B4.html" rel="alternate"></link><published>2018-01-09T16:00:45+08:00</published><updated>2018-01-14T16:42:06+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-01-09:/articles/2018/01/emacs自动更新文件头.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-10626316"&gt;自动更新Last Updated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-71116359"&gt;自动更新Filename&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-81365469"&gt;自动更新Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;前面已经说过，可以使用&lt;b&gt;auto-insert&lt;/b&gt;自动添加文件头，今天来说一说自动更新文件头，比如说每次保存时自动更新&lt;b&gt;last updated&lt;/b&gt;字段&lt;/p&gt;


&lt;h3 id="org-10626316"&gt;自动更新Last Updated&lt;/h3&gt;
&lt;p&gt;如果使用的是header2,直接设置相关的变量就可，假如使用的是&lt;b&gt;auto-insert&lt;/b&gt;，同样也可以使用emacs内置的&lt;b&gt;time-stamp&lt;/b&gt;对Last Updated进行自动更新&lt;/p&gt;

&lt;p&gt;time-stamp默认使用&lt;code&gt;Time-stamp:&lt;/code&gt;,如果要对&lt;code&gt;Last Updated&lt;/code&gt;进行自动更新，只需要简单的设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-active&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-line-limit&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-start&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[lL]ast[ -][uU]pdate[ \t]*:?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-end&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-10626316"&gt;自动更新Last Updated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-71116359"&gt;自动更新Filename&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-81365469"&gt;自动更新Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;前面已经说过，可以使用&lt;b&gt;auto-insert&lt;/b&gt;自动添加文件头，今天来说一说自动更新文件头，比如说每次保存时自动更新&lt;b&gt;last updated&lt;/b&gt;字段&lt;/p&gt;


&lt;h3 id="org-10626316"&gt;自动更新Last Updated&lt;/h3&gt;
&lt;p&gt;如果使用的是header2,直接设置相关的变量就可，假如使用的是&lt;b&gt;auto-insert&lt;/b&gt;，同样也可以使用emacs内置的&lt;b&gt;time-stamp&lt;/b&gt;对Last Updated进行自动更新&lt;/p&gt;

&lt;p&gt;time-stamp默认使用&lt;code&gt;Time-stamp:&lt;/code&gt;,如果要对&lt;code&gt;Last Updated&lt;/code&gt;进行自动更新，只需要简单的设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-active&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-line-limit&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-start&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[lL]ast[ -][uU]pdate[ \t]*:?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-end&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; %#A %Y-%02m-%02d %02H:%02M:%02S (%Z)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;before-save-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;time-stamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就能在每次保存时自动更新相应的字段了&lt;/p&gt;

&lt;h3 id="org-71116359"&gt;自动更新Filename&lt;/h3&gt;
&lt;p&gt;之前遇到过，使用&lt;b&gt;auto-insert&lt;/b&gt;在每次创建新文件时自动添加了文件头，但后面文件名被修改了，文件头里的文件名却不会自动更改，基于这个原因需要自己实现一个函数(我没有找到可以使用的已经存在的package)&lt;/p&gt;

&lt;p&gt;先理一理逻辑: 只需要查找当前文件前几行信息，如果找到&lt;code&gt;File Name:&lt;/code&gt;字段，获取字段信息，与当前文件名进行对比，如果不一致则替换为当前文件名,直接给出代码吧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;查找当前文件前几行
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;save-excursion&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-min&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;;;跳转到开头&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;;; 查找&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;1+&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;forward-line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;获取当前文件名
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;查找File Name
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;looking-at&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.*\\(File Name:\\)\\(.*\\)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;对文件名进行比对与替换
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-beginning&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-end&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string=&lt;/span&gt; &lt;span class="nv"&gt;文件名&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;match-string&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;delete-region&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="nv"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即可得到相关的完整函数(完整函数后面再讲)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="org-81365469"&gt;自动更新Email&lt;/h3&gt;
&lt;p&gt;工作和平时使用的邮箱不一样，我虽然设置了&lt;i&gt;at_home&lt;/i&gt;变量区分工作与平时的邮箱,但不是每次我都记得要更新这个变量，所以有了这个需要，自动将文件头里的email信息更改为平时所用的邮箱，大致逻辑与自动更新Filename相同，所以我写了一个&lt;b&gt;macro&lt;/b&gt;来自动生成相关的代码&lt;/p&gt;

&lt;p&gt;直接给出代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/header-update-action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;A.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-beginning&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-end&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string=&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;match-string&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;delete-region&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="nv"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/header-update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;regex&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;B.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;save-excursion&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-min&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;looking-at&lt;/span&gt; &lt;span class="nv"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update-action&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;1+&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;forward-line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defmacro&lt;/span&gt; &lt;span class="nv"&gt;maple/header-update-engine&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="nv"&gt;regex&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt; &lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;C.&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;intern&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;maple/header-update-%s&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
     &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Update %s with regex.&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样，我就可以调用&lt;b&gt;macro&lt;/b&gt;来生成代码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动更新Filename
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update-engine&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;quot;.*\\(File Name:\\)\\(.*\\)&amp;quot;&lt;/span&gt;
                            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;生成一个&lt;code&gt;maple/header-update-filename&lt;/code&gt;的函数,只要调用它即可更新文件名信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;自动更新email
&lt;p&gt;同样的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update-engine&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;quot;.*\\(Email:\\)\\(.*\\)&amp;quot;&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;quot;youemail@gmail.com&amp;quot;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;生成一个可供调用的&lt;code&gt;maple/header-update-email&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果想要添加其它功能，只要使用&lt;code&gt;maple/header-update-engine&lt;/code&gt;即可&lt;/p&gt;

&lt;p&gt;相关的配置可以在我的&lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/header/header.el"&gt;github&lt;/a&gt;上找到&lt;/p&gt;</content><category term="linux"></category><category term="emacs"></category></entry></feed>