<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>honmaple's blog</title><link href="http://honmaple.me/" rel="alternate"></link><link href="http://honmaple.me/feeds/all-en.atom.xml" rel="self"></link><id>http://honmaple.me/</id><updated>2017-10-31T11:10:21+08:00</updated><entry><title>open-falcon-v2部署</title><link href="http://honmaple.me/articles/2017/10/open-falcon-v2%E9%83%A8%E7%BD%B2.html" rel="alternate"></link><published>2017-10-31T11:10:21+08:00</published><updated>2017-10-31T11:10:21+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-10-31:/articles/2017/10/open-falcon-v2部署.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-54291645"&gt;安装&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-22318689"&gt;基本环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-58765622"&gt;安装后端&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-82826634"&gt;安装前端&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1234751"&gt;分布式安装&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-84858492"&gt;agent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-21443341"&gt;transfer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43444989"&gt;graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-78433550"&gt;api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-90548256"&gt;hbs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-90422157"&gt;judge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43751629"&gt;nodata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43069453"&gt;aggregator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-24554933"&gt;task&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-14563488"&gt;具体安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-54291645"&gt;安装&lt;/h3&gt;
&lt;h4 id="org-22318689"&gt;基本环境&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;安装redis,mysql&lt;/li&gt;
&lt;li&gt;初始化mysql表结构
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git clone https://github.com/open-falcon/falcon-plus.git
&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp/falcon-plus/scripts/mysql/db_schema/
mysql -h &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 -u root -p &amp;lt; 1_uic-db-schema …&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-54291645"&gt;安装&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-22318689"&gt;基本环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-58765622"&gt;安装后端&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-82826634"&gt;安装前端&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1234751"&gt;分布式安装&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-84858492"&gt;agent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-21443341"&gt;transfer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43444989"&gt;graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-78433550"&gt;api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-90548256"&gt;hbs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-90422157"&gt;judge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43751629"&gt;nodata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43069453"&gt;aggregator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-24554933"&gt;task&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-14563488"&gt;具体安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-54291645"&gt;安装&lt;/h3&gt;
&lt;h4 id="org-22318689"&gt;基本环境&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;安装redis,mysql&lt;/li&gt;
&lt;li&gt;初始化mysql表结构
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git clone https://github.com/open-falcon/falcon-plus.git
&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp/falcon-plus/scripts/mysql/db_schema/
mysql -h &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 -u root -p &amp;lt; 1_uic-db-schema.sql
mysql -h &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 -u root -p &amp;lt; 2_portal-db-schema.sql
mysql -h &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 -u root -p &amp;lt; 3_dashboard-db-schema.sql
mysql -h &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 -u root -p &amp;lt; 4_graph-db-schema.sql
mysql -h &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 -u root -p &amp;lt; 5_alarms-db-schema.sql
rm -rf /tmp/falcon-plus/
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;获取二进制包
&lt;p&gt;因为可能需要对open-falcon进行定制，所以采用编译形式
注: &lt;b&gt;请确认安装好golang环境&lt;/b&gt;,详细golang环境部署请&lt;a href="https://google.com"&gt;google&lt;/a&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/src/github.com/open-falcon/falcon-plus/
&lt;span class="c1"&gt;# make all modules&lt;/span&gt;
make all
&lt;span class="c1"&gt;# pack all modules&lt;/span&gt;
make pack
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-58765622"&gt;安装后端&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;创建工作目录并解压open-falcon
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /usr/local/open-falcon
tar -xzvf open-falcon-v0.2.0.tar.gz -C /usr/local/open-falcon
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;修改配置文件&lt;/li&gt;
&lt;li&gt;启动open-falcon
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/open-falcon
./open-falcon start
&lt;span class="c1"&gt;# 检查所有模块的启动状况&lt;/span&gt;
./open-falcon check
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-82826634"&gt;安装前端&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;创建工作目录
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir /usr/local/falcon-front
&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/falcon-front
git clone https://github.com/open-falcon/dashboard.git
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;安装依赖包
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install -y python-virtualenv
yum install -y python-devel
yum install -y openldap-devel
yum install -y mysql-devel


&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/falcon-front/dashboard/
&lt;span class="c1"&gt;# 这里安装python虚拟环境&lt;/span&gt;
virtualenv ./env
./env/bin/pip install -r pip_requirements.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;修改配置
&lt;p&gt;&lt;code&gt;rrd/config.py&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./control start &lt;span class="c1"&gt;# 可用supervisor托管&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="org-1234751"&gt;分布式安装&lt;/h3&gt;
&lt;p&gt;根据已有文档&lt;a href="https://book.open-falcon.org/zh_0_2/distributed_install/agent.html"&gt;官方文档&lt;/a&gt;
agent需要部署到每一台被监控的机器上&lt;/p&gt;
&lt;h4 id="org-84858492"&gt;agent&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;配置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;debug&amp;quot;: true,  # 控制一些debug信息的输出，生产环境通常设置为false
    &amp;quot;hostname&amp;quot;: &amp;quot;&amp;quot;, # agent采集了数据发给transfer，endpoint就设置为了hostname，默认通过`hostname`获取，如果配置中配置了hostname，就用配置中的
    &amp;quot;ip&amp;quot;: &amp;quot;&amp;quot;, # agent与hbs心跳的时候会把自己的ip地址发给hbs，agent会自动探测本机ip，如果不想让agent自动探测，可以手工修改该配置
    &amp;quot;plugin&amp;quot;: {
        &amp;quot;enabled&amp;quot;: false, # 默认不开启插件机制
        &amp;quot;dir&amp;quot;: &amp;quot;./plugin&amp;quot;,  # 把放置插件脚本的git repo clone到这个目录
        &amp;quot;git&amp;quot;: &amp;quot;https://github.com/open-falcon/plugin.git&amp;quot;, # 放置插件脚本的git repo地址
        &amp;quot;logs&amp;quot;: &amp;quot;./logs&amp;quot; # 插件执行的log，如果插件执行有问题，可以去这个目录看log
    },
    &amp;quot;heartbeat&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,  # 此处enabled要设置为true
        &amp;quot;addr&amp;quot;: &amp;quot;127.0.0.1:6030&amp;quot;, # hbs的地址，端口是hbs的rpc端口
        &amp;quot;interval&amp;quot;: 60, # 心跳周期，单位是秒
        &amp;quot;timeout&amp;quot;: 1000 # 连接hbs的超时时间，单位是毫秒
    },
    &amp;quot;transfer&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;addrs&amp;quot;: [
            &amp;quot;127.0.0.1:18433&amp;quot;
        ],  # transfer的地址，端口是transfer的rpc端口, 可以支持写多个transfer的地址，agent会保证HA
        &amp;quot;interval&amp;quot;: 60, # 采集周期，单位是秒，即agent一分钟采集一次数据发给transfer
        &amp;quot;timeout&amp;quot;: 1000 # 连接transfer的超时时间，单位是毫秒
    },
    &amp;quot;http&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,  # 是否要监听http端口
        &amp;quot;listen&amp;quot;: &amp;quot;:1988&amp;quot;,
        &amp;quot;backdoor&amp;quot;: false
    },
    &amp;quot;collector&amp;quot;: {
        &amp;quot;ifacePrefix&amp;quot;: [&amp;quot;eth&amp;quot;, &amp;quot;em&amp;quot;], # 默认配置只会采集网卡名称前缀是eth、em的网卡流量，配置为空就会采集所有的，lo的也会采集。可以从/proc/net/dev看到各个网卡的流量信息
        &amp;quot;mountPoint&amp;quot;: []
    },
    &amp;quot;default_tags&amp;quot;: {
    },
    &amp;quot;ignore&amp;quot;: {  # 默认采集了200多个metric，可以通过ignore设置为不采集
        &amp;quot;cpu.busy&amp;quot;: true,
        &amp;quot;df.bytes.free&amp;quot;: true,
        &amp;quot;df.bytes.total&amp;quot;: true,
        &amp;quot;df.bytes.used&amp;quot;: true,
        &amp;quot;df.bytes.used.percent&amp;quot;: true,
        &amp;quot;df.inodes.total&amp;quot;: true,
        &amp;quot;df.inodes.free&amp;quot;: true,
        &amp;quot;df.inodes.used&amp;quot;: true,
        &amp;quot;df.inodes.used.percent&amp;quot;: true,
        &amp;quot;mem.memtotal&amp;quot;: true,
        &amp;quot;mem.memused&amp;quot;: true,
        &amp;quot;mem.memused.percent&amp;quot;: true,
        &amp;quot;mem.memfree&amp;quot;: true,
        &amp;quot;mem.swaptotal&amp;quot;: true,
        &amp;quot;mem.swapused&amp;quot;: true,
        &amp;quot;mem.swapfree&amp;quot;: true
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 修改配置后&lt;/span&gt;
./open-falcon start agent
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-21443341"&gt;transfer&lt;/h4&gt;
&lt;p&gt;transfer是数据转发服务。它接收agent上报的数据，然后按照哈希规则进行数据分片、并将分片后的数据分别push给graph&amp;judge等组件。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;如果为&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="err"&gt;，日志中会打印&lt;/span&gt;&lt;span class="n"&gt;debug信息&lt;/span&gt;

&lt;span class="n"&gt;minStep&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;允许上报的数据最小间隔，默认为&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="err"&gt;秒&lt;/span&gt;

&lt;span class="n"&gt;http&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;表示是否开启该&lt;/span&gt;&lt;span class="n"&gt;http端口&lt;/span&gt;&lt;span class="err"&gt;，该端口为控制端口，主要用来对&lt;/span&gt;&lt;span class="n"&gt;transfer发送控制命令&lt;/span&gt;&lt;span class="err"&gt;、统计命令、&lt;/span&gt;&lt;span class="n"&gt;debug命令等&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;表示监听的&lt;/span&gt;&lt;span class="n"&gt;http端口&lt;/span&gt;

&lt;span class="n"&gt;rpc&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;表示是否开启该&lt;/span&gt;&lt;span class="n"&gt;jsonrpc数据接收端口&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Agent发送数据使用的就是该端口&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;表示监听的&lt;/span&gt;&lt;span class="n"&gt;http端口&lt;/span&gt;

&lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="err"&gt;#即将被废弃&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="err"&gt;请避免使用&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;表示是否开启该&lt;/span&gt;&lt;span class="n"&gt;telnet方式的数据接收端口&lt;/span&gt;&lt;span class="err"&gt;，这是为了方便用户一行行的发送数据给&lt;/span&gt;&lt;span class="n"&gt;transfer&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;表示监听的&lt;/span&gt;&lt;span class="n"&gt;http端口&lt;/span&gt;

&lt;span class="n"&gt;judge&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;表示是否开启向&lt;/span&gt;&lt;span class="n"&gt;judge发送数据&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;数据转发的批量大小，可以加快发送速度，建议保持默认值&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;connTimeout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;单位是毫秒，与后端建立连接的超时时间，可以根据网络质量微调，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;callTimeout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;单位是毫秒，发送数据给后端的超时时间，可以根据网络质量微调，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pingMethod&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;后端提供的&lt;/span&gt;&lt;span class="n"&gt;ping接口&lt;/span&gt;&lt;span class="err"&gt;，用来探测连接是否可用，必须保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;maxConns&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;连接池相关配置，最大连接数，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;maxIdle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;连接池相关配置，最大空闲连接数，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;replicas&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;这是一致性&lt;/span&gt;&lt;span class="n"&gt;hash算法需要的节点副本数量&lt;/span&gt;&lt;span class="err"&gt;，建议不要变更，保持默认即可&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;value形式的字典&lt;/span&gt;&lt;span class="err"&gt;，表示后端的&lt;/span&gt;&lt;span class="n"&gt;judge列表&lt;/span&gt;&lt;span class="err"&gt;，其中&lt;/span&gt;&lt;span class="n"&gt;key代表后端judge名字&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;value代表的是具体的ip&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;

&lt;span class="n"&gt;graph&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;表示是否开启向&lt;/span&gt;&lt;span class="n"&gt;graph发送数据&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;数据转发的批量大小，可以加快发送速度，建议保持默认值&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;connTimeout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;单位是毫秒，与后端建立连接的超时时间，可以根据网络质量微调，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;callTimeout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;单位是毫秒，发送数据给后端的超时时间，可以根据网络质量微调，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pingMethod&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;后端提供的&lt;/span&gt;&lt;span class="n"&gt;ping接口&lt;/span&gt;&lt;span class="err"&gt;，用来探测连接是否可用，必须保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;maxConns&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;连接池相关配置，最大连接数，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;maxIdle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;连接池相关配置，最大空闲连接数，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;replicas&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;这是一致性&lt;/span&gt;&lt;span class="n"&gt;hash算法需要的节点副本数量&lt;/span&gt;&lt;span class="err"&gt;，建议不要变更，保持默认即可&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;value形式的字典&lt;/span&gt;&lt;span class="err"&gt;，表示后端的&lt;/span&gt;&lt;span class="n"&gt;graph列表&lt;/span&gt;&lt;span class="err"&gt;，其中&lt;/span&gt;&lt;span class="n"&gt;key代表后端graph名字&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;value代表的是具体的ip&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;多个地址用逗号隔开&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transfer会将同一份数据发送至各个地址&lt;/span&gt;&lt;span class="err"&gt;，利用这个特性可以实现数据的多重备份&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;tsdb&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;表示是否开启向&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="n"&gt;tsdb发送数据&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;数据转发的批量大小，可以加快发送速度&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;connTimeout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;单位是毫秒，与后端建立连接的超时时间，可以根据网络质量微调，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;callTimeout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;单位是毫秒，发送数据给后端的超时时间，可以根据网络质量微调，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;maxConns&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;连接池相关配置，最大连接数，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;maxIdle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;连接池相关配置，最大空闲连接数，建议保持默认&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;retry&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;连接后端的重试次数和发送数据的重试次数&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tsdb地址或者tsdb集群vip地址&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;通过&lt;/span&gt;&lt;span class="n"&gt;tcp连接tsdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 修改配置后&lt;/span&gt;
./open-falcon start transfer
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-43444989"&gt;graph&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;配置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;debug&amp;quot;: false, //true or false, 是否开启debug日志
    &amp;quot;http&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true, //true or false, 表示是否开启该http端口，该端口为控制端口，主要用来对graph发送控制命令、统计命令、debug命令
        &amp;quot;listen&amp;quot;: &amp;quot;0.0.0.0:6071&amp;quot; //表示监听的http端口
    },
    &amp;quot;rpc&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true, //true or false, 表示是否开启该rpc端口，该端口为数据接收端口
        &amp;quot;listen&amp;quot;: &amp;quot;0.0.0.0:6070&amp;quot; //表示监听的rpc端口
    },
    &amp;quot;rrd&amp;quot;: {
        &amp;quot;storage&amp;quot;: &amp;quot;./data/6070&amp;quot; // 历史数据的文件存储路径（如有必要，请修改为合适的路）
    },
    &amp;quot;db&amp;quot;: {
        &amp;quot;dsn&amp;quot;: &amp;quot;root:@tcp(127.0.0.1:3306)/graph?loc=Local&amp;amp;parseTime=true&amp;quot;, //MySQL的连接信息，默认用户名是root，密码为空，host为127.0.0.1，database为graph（如有必要，请修改)
        &amp;quot;maxIdle&amp;quot;: 4  //MySQL连接池配置，连接池允许的最大连接数，保持默认即可
    },
    &amp;quot;callTimeout&amp;quot;: 5000,  //RPC调用超时时间，单位ms
    &amp;quot;migrate&amp;quot;: {  //扩容graph时历史数据自动迁移
        &amp;quot;enabled&amp;quot;: false,  //true or false, 表示graph是否处于数据迁移状态
        &amp;quot;concurrency&amp;quot;: 2, //数据迁移时的并发连接数，建议保持默认
        &amp;quot;replicas&amp;quot;: 500, //这是一致性hash算法需要的节点副本数量，建议不要变更，保持默认即可（必须和transfer的配置中保持一致）
        &amp;quot;cluster&amp;quot;: { //未扩容前老的graph实例列表
            &amp;quot;graph-00&amp;quot; : &amp;quot;127.0.0.1:6070&amp;quot;
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 修改配置后&lt;/span&gt;
./open-falcon start graph
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-78433550"&gt;api&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;配置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;log_level&amp;quot;: &amp;quot;debug&amp;quot;,
    &amp;quot;db&amp;quot;: {  //数据库相关的连接配置信息
        &amp;quot;faclon_portal&amp;quot;: &amp;quot;root:@tcp(127.0.0.1:3306)/falcon_portal?charset=utf8&amp;amp;parseTime=True&amp;amp;loc=Local&amp;quot;,
        &amp;quot;graph&amp;quot;: &amp;quot;root:@tcp(127.0.0.1:3306)/graph?charset=utf8&amp;amp;parseTime=True&amp;amp;loc=Local&amp;quot;,
        &amp;quot;uic&amp;quot;: &amp;quot;root:@tcp(127.0.0.1:3306)/uic?charset=utf8&amp;amp;parseTime=True&amp;amp;loc=Local&amp;quot;,
        &amp;quot;dashboard&amp;quot;: &amp;quot;root:@tcp(127.0.0.1:3306)/dashboard?charset=utf8&amp;amp;parseTime=True&amp;amp;loc=Local&amp;quot;,
        &amp;quot;alarms&amp;quot;: &amp;quot;root:@tcp(127.0.0.1:3306)/alarms?charset=utf8&amp;amp;parseTime=True&amp;amp;loc=Local&amp;quot;,
        &amp;quot;db_bug&amp;quot;: true
    },
    &amp;quot;graphs&amp;quot;: {  // graph模块的部署列表信息
        &amp;quot;cluster&amp;quot;: {
            &amp;quot;graph-00&amp;quot;: &amp;quot;127.0.0.1:6070&amp;quot;
        },
        &amp;quot;max_conns&amp;quot;: 100,
        &amp;quot;max_idle&amp;quot;: 100,
        &amp;quot;conn_timeout&amp;quot;: 1000,
        &amp;quot;call_timeout&amp;quot;: 5000,
        &amp;quot;numberOfReplicas&amp;quot;: 500
    },
    &amp;quot;metric_list_file&amp;quot;: &amp;quot;./api/data/metric&amp;quot;,
    &amp;quot;web_port&amp;quot;: &amp;quot;:8080&amp;quot;,  // http监听端口
    &amp;quot;access_control&amp;quot;: true, // 如果设置为false，那么任何用户都可以具备管理员权限
    &amp;quot;salt&amp;quot;: &amp;quot;pleaseinputwhichyouareusingnow&amp;quot;,  //数据库加密密码的时候的salt
    &amp;quot;skip_auth&amp;quot;: false, //如果设置为true，那么访问api就不需要经过认证
    &amp;quot;default_token&amp;quot;: &amp;quot;default-token-used-in-server-side&amp;quot;,  //用于服务端各模块间的访问授权
    &amp;quot;gen_doc&amp;quot;: false,
    &amp;quot;gen_doc_path&amp;quot;: &amp;quot;doc/module.html&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 修改配置后&lt;/span&gt;
./open-falcon start api
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-90548256"&gt;hbs&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;配置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;debug&amp;quot;: true,
    &amp;quot;database&amp;quot;: &amp;quot;root:password@tcp(127.0.0.1:3306)/falcon_portal?loc=Local&amp;amp;parseTime=true&amp;quot;, # Portal的数据库地址
    &amp;quot;hosts&amp;quot;: &amp;quot;&amp;quot;, # portal数据库中有个host表，如果表中数据是从其他系统同步过来的，此处配置为sync，否则就维持默认，留空即可
    &amp;quot;maxIdle&amp;quot;: 100,
    &amp;quot;listen&amp;quot;: &amp;quot;:6030&amp;quot;, # hbs监听的rpc地址
    &amp;quot;trustable&amp;quot;: [&amp;quot;&amp;quot;],
    &amp;quot;http&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;listen&amp;quot;: &amp;quot;0.0.0.0:6031&amp;quot; # hbs监听的http地址
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 修改配置后&lt;/span&gt;
./open-falcon start hbs
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-90422157"&gt;judge&lt;/h4&gt;
&lt;p&gt;Judge用于告警判断，agent将数据push给Transfer，Transfer不但会转发给Graph组件来绘图，还会转发给Judge用于判断是否触发告警&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;debug&amp;quot;: true,
    &amp;quot;debugHost&amp;quot;: &amp;quot;nil&amp;quot;,
    &amp;quot;remain&amp;quot;: 11,
    &amp;quot;http&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;listen&amp;quot;: &amp;quot;0.0.0.0:6081&amp;quot;
    },
    &amp;quot;rpc&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;listen&amp;quot;: &amp;quot;0.0.0.0:6080&amp;quot;
    },
    &amp;quot;hbs&amp;quot;: {
        &amp;quot;servers&amp;quot;: [&amp;quot;127.0.0.1:6030&amp;quot;], # hbs最好放到lvs vip后面，所以此处最好配置为vip:port
        &amp;quot;timeout&amp;quot;: 300,
        &amp;quot;interval&amp;quot;: 60
    },
    &amp;quot;alarm&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;minInterval&amp;quot;: 300, # 连续两个报警之间至少相隔的秒数，维持默认即可
        &amp;quot;queuePattern&amp;quot;: &amp;quot;event:p%v&amp;quot;,
        &amp;quot;redis&amp;quot;: {
            &amp;quot;dsn&amp;quot;: &amp;quot;127.0.0.1:6379&amp;quot;, # 与alarm、sender使用一个redis
            &amp;quot;maxIdle&amp;quot;: 5,
            &amp;quot;connTimeout&amp;quot;: 5000,
            &amp;quot;readTimeout&amp;quot;: 5000,
            &amp;quot;writeTimeout&amp;quot;: 5000
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 修改配置后&lt;/span&gt;
./open-falcon start judge
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-43751629"&gt;nodata&lt;/h4&gt;
&lt;p&gt;nodata用于检测监控数据的上报异常&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;debug&amp;quot;: true,
    &amp;quot;http&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;listen&amp;quot;: &amp;quot;0.0.0.0:6090&amp;quot;
    },
    &amp;quot;plus_api&amp;quot;:{
        &amp;quot;connectTimeout&amp;quot;: 500,
        &amp;quot;requestTimeout&amp;quot;: 2000,
        &amp;quot;addr&amp;quot;: &amp;quot;http://127.0.0.1:8080&amp;quot;,  #falcon-plus api模块的运行地址
        &amp;quot;token&amp;quot;: &amp;quot;default-token-used-in-server-side&amp;quot;  #用于和falcon-plus api模块的交互认证token
    },
    &amp;quot;config&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;dsn&amp;quot;: &amp;quot;root:@tcp(127.0.0.1:3306)/falcon_portal?loc=Local&amp;amp;parseTime=true&amp;amp;wait_timeout=604800&amp;quot;,
        &amp;quot;maxIdle&amp;quot;: 4
    },
    &amp;quot;collector&amp;quot;:{
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;batch&amp;quot;: 200,
        &amp;quot;concurrent&amp;quot;: 10
    },
    &amp;quot;sender&amp;quot;:{
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;connectTimeout&amp;quot;: 500,
        &amp;quot;requestTimeout&amp;quot;: 2000,
        &amp;quot;transferAddr&amp;quot;: &amp;quot;127.0.0.1:6060&amp;quot;,  #transfer的http监听地址,一般形如&amp;quot;domain.transfer.service:6060&amp;quot;
        &amp;quot;batch&amp;quot;: 500
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 修改配置后&lt;/span&gt;
./open-falcon start nodata
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-43069453"&gt;aggregator&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;配置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;debug&amp;quot;: true,
    &amp;quot;http&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;listen&amp;quot;: &amp;quot;0.0.0.0:6055&amp;quot;
    },
    &amp;quot;database&amp;quot;: {
        &amp;quot;addr&amp;quot;: &amp;quot;root:@tcp(127.0.0.1:3306)/falcon_portal?loc=Local&amp;amp;parseTime=true&amp;quot;,
        &amp;quot;idle&amp;quot;: 10,
        &amp;quot;ids&amp;quot;: [1, -1],
        &amp;quot;interval&amp;quot;: 55
    },
    &amp;quot;api&amp;quot;: {
        &amp;quot;connect_timeout&amp;quot;: 500,
        &amp;quot;request_timeout&amp;quot;: 2000,
        &amp;quot;plus_api&amp;quot;: &amp;quot;http://127.0.0.1:8080&amp;quot;,  #falcon-plus api模块的运行地址
        &amp;quot;plus_api_token&amp;quot;: &amp;quot;default-token-used-in-server-side&amp;quot;, #和falcon-plus api 模块交互的认证token
        &amp;quot;push_api&amp;quot;: &amp;quot;http://127.0.0.1:1988/v1/push&amp;quot;  #push数据的http接口，这是agent提供的接口
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 修改配置后&lt;/span&gt;
./open-falcon start aggregator
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="org-24554933"&gt;task&lt;/h4&gt;
&lt;p&gt;task是监控系统一个必要的定时任务辅助模块&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;编译
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# update common lib
cd $GOPATH/src/github.com/open-falcon/common
git pull

# compile
cd $GOPATH/src/github.com/open-falcon/task
go get ./...
./control build
./control pack
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;配置
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;如果为&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="err"&gt;，日志中会打印&lt;/span&gt;&lt;span class="n"&gt;debug信息&lt;/span&gt;

&lt;span class="n"&gt;http&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;表示是否开启该&lt;/span&gt;&lt;span class="n"&gt;http端口&lt;/span&gt;&lt;span class="err"&gt;，该端口为控制端口，主要用来对&lt;/span&gt;&lt;span class="n"&gt;task发送控制命令&lt;/span&gt;&lt;span class="err"&gt;、统计命令、&lt;/span&gt;&lt;span class="n"&gt;debug命令等&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;表示&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server监听的端口&lt;/span&gt;

&lt;span class="n"&gt;index&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;表示是否开启索引更新任务&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;dsn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;索引服务的&lt;/span&gt;&lt;span class="n"&gt;MySQL的连接信息&lt;/span&gt;&lt;span class="err"&gt;，默认用户名是&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;，密码为空，&lt;/span&gt;&lt;span class="n"&gt;host为127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;database为graph&lt;/span&gt;&lt;span class="err"&gt;（如有必要，请修改）&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;maxIdle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MySQL连接池配置&lt;/span&gt;&lt;span class="err"&gt;，连接池允许的最大空闲连接数，保持默认即可&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;后端&lt;/span&gt;&lt;span class="n"&gt;graph索引更新的定时任务描述&lt;/span&gt;&lt;span class="err"&gt;。一条记录的形如&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;graph地址:执行周期描述&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;，通过设置不同的执行周期，来实现负载在时间上的均衡。&lt;/span&gt;
        &lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="err"&gt;后端部署了两个&lt;/span&gt;&lt;span class="n"&gt;graph实例&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;cluster可以配置为&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;cluster&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;test.hostname01:6071&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0 0 0 ? * 0-5&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;   &lt;span class="c1"&gt;//周0-5,每天的00:00:00,开始执行索引全量更新;&amp;quot;0 0 0 ? * 0-5&amp;quot;为quartz表达式&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;test.hostname02:6071&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0 30 0 ? * 0-5&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;//周0-5,每天的00:30:00,开始执行索引全量更新&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;autoDelete&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;是否自动删除垃圾索引。默认为&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;

&lt;span class="n"&gt;collector&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;表示是否开启&lt;/span&gt;&lt;span class="n"&gt;falcon的自身状态采集任务&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;destUrl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;监控数据的&lt;/span&gt;&lt;span class="n"&gt;push地址&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="err"&gt;默认为本机的&lt;/span&gt;&lt;span class="mi"&gt;1988&lt;/span&gt;&lt;span class="err"&gt;接口&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;srcUrlFmt&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;监控数据采集的&lt;/span&gt;&lt;span class="n"&gt;url格式&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;s将由机器名或域名替换&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;falcon后端服务列表&lt;/span&gt;&lt;span class="err"&gt;，用具体的&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;module,hostname:port&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;表示，&lt;/span&gt;&lt;span class="n"&gt;module取值可以为graph&lt;/span&gt;&lt;span class="err"&gt;、&lt;/span&gt;&lt;span class="n"&gt;transfer&lt;/span&gt;&lt;span class="err"&gt;、&lt;/span&gt;&lt;span class="n"&gt;task等&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./control start
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="org-14563488"&gt;具体安装&lt;/h3&gt;</content><category term="linux"></category><category term="open-falcon"></category><category term="devops"></category></entry><entry><title>为pelican增加上一篇下一篇功能</title><link href="http://honmaple.me/articles/2017/10/%E4%B8%BApelican%E5%A2%9E%E5%8A%A0%E4%B8%8A%E4%B8%80%E7%AF%87%E4%B8%8B%E4%B8%80%E7%AF%87%E5%8A%9F%E8%83%BD.html" rel="alternate"></link><published>2017-10-22T22:40:28+08:00</published><updated>2017-10-22T22:40:28+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-10-22:/articles/2017/10/为pelican增加上一篇下一篇功能.html</id><summary type="html">

&lt;p&gt;功能实现很简单, &lt;b&gt;pelican&lt;/b&gt;也有类似的插件实现 &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/neighbors"&gt;https://github.com/getpelican/pelican-plugins/tree/master/neighbors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;不过自己实现起来更爽不是吗? 而且类似&lt;b&gt;prev_article_in_category&lt;/b&gt;和&lt;b&gt;prev_article_in_subcategory&lt;/b&gt;的功能我并不需要&lt;/p&gt;

&lt;p&gt;首先参考&lt;b&gt;pelican&lt;/b&gt;的文档,基础实现
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_neighbors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generator&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;....&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;register&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;signals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;article_generator_finalized&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add_neighbors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;然后在&lt;b&gt;generator.articles&lt;/b&gt;列表上进行操作,为article增加&lt;b&gt;previous_article&lt;/b&gt;和&lt;b&gt;next_article&lt;/b&gt;对象&lt;/p&gt;

&lt;p&gt;先进行排序(按时间)
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;generator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;
&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</summary><content type="html">

&lt;p&gt;功能实现很简单, &lt;b&gt;pelican&lt;/b&gt;也有类似的插件实现 &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/neighbors"&gt;https://github.com/getpelican/pelican-plugins/tree/master/neighbors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;不过自己实现起来更爽不是吗? 而且类似&lt;b&gt;prev_article_in_category&lt;/b&gt;和&lt;b&gt;prev_article_in_subcategory&lt;/b&gt;的功能我并不需要&lt;/p&gt;

&lt;p&gt;首先参考&lt;b&gt;pelican&lt;/b&gt;的文档,基础实现
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_neighbors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generator&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;....&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;register&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;signals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;article_generator_finalized&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add_neighbors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;然后在&lt;b&gt;generator.articles&lt;/b&gt;列表上进行操作,为article增加&lt;b&gt;previous_article&lt;/b&gt;和&lt;b&gt;next_article&lt;/b&gt;对象&lt;/p&gt;

&lt;p&gt;先进行排序(按时间)
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;generator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;
&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;然后可以使用&lt;b&gt;iter&lt;/b&gt;关键字,把列表变成生成器,使用next()( &lt;code&gt;python2用a.next(),python3用a.__next__()&lt;/code&gt;)获取下一个可迭代对象&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pre_article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;articles_iter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;next_article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;articles_iter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;previous_article&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pre_article&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;next_article&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_article&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pre_article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，在模板template中增加相关html代码，示例:
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{% if article.previous_article %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;previous&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/{{ article.previous_article.url }}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Previous article: {{ article.previous_article.title }}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fa fa-chevron-left&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    {{ article.previous_article.title }}
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}
{% if article.next_article %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;next&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/{{ article.next_article.url }}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Next article: {{ article.previous_article.title }}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    {{ article.next_article.title }}
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fa fa-chevron-right&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;ok,就这样&lt;/p&gt;</content><category term="python"></category><category term="pelican"></category></entry><entry><title>时间format输出格式参考</title><link href="http://honmaple.me/articles/2017/10/%E6%97%B6%E9%97%B4format%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F%E5%8F%82%E8%80%83.html" rel="alternate"></link><published>2017-10-19T16:59:15+08:00</published><updated>2017-10-19T16:59:15+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-10-19:/articles/2017/10/时间format输出格式参考.html</id><summary type="html">
&lt;blockquote&gt;
&lt;p&gt;date --help&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;%%&lt;/td&gt;&lt;td&gt;一个文字的 %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%a&lt;/td&gt;&lt;td&gt;当前locale 的星期名缩写(例如： 日，代表星期日)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%A&lt;/td&gt;&lt;td&gt;当前locale 的星期名全称 (如：星期日)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%b&lt;/td&gt;&lt;td&gt;当前locale 的月名缩写 (如：一，代表一月)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%B&lt;/td&gt;&lt;td&gt;当前locale 的月名全称 (如：一月)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%c&lt;/td&gt;&lt;td&gt;当前locale 的日期和时间 (如：2005年3月3日 星期四 23:05:25)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%C&lt;/td&gt;&lt;td&gt;世纪；比如 %Y，通常为省略当前年份的后两位数字(例如：20)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%d&lt;/td&gt;&lt;td&gt;按月计的日期(例如：01)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%D&lt;/td&gt;&lt;td&gt;按月计的日期；等于%m …&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><content type="html">
&lt;blockquote&gt;
&lt;p&gt;date --help&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;%%&lt;/td&gt;&lt;td&gt;一个文字的 %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%a&lt;/td&gt;&lt;td&gt;当前locale 的星期名缩写(例如： 日，代表星期日)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%A&lt;/td&gt;&lt;td&gt;当前locale 的星期名全称 (如：星期日)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%b&lt;/td&gt;&lt;td&gt;当前locale 的月名缩写 (如：一，代表一月)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%B&lt;/td&gt;&lt;td&gt;当前locale 的月名全称 (如：一月)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%c&lt;/td&gt;&lt;td&gt;当前locale 的日期和时间 (如：2005年3月3日 星期四 23:05:25)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%C&lt;/td&gt;&lt;td&gt;世纪；比如 %Y，通常为省略当前年份的后两位数字(例如：20)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%d&lt;/td&gt;&lt;td&gt;按月计的日期(例如：01)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%D&lt;/td&gt;&lt;td&gt;按月计的日期；等于%m/%d/%y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%e&lt;/td&gt;&lt;td&gt;按月计的日期，添加空格，等于%_d&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%F&lt;/td&gt;&lt;td&gt;完整日期格式，等价于 %Y-%m-%d&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%g&lt;/td&gt;&lt;td&gt;ISO-8601 格式年份的最后两位 (参见%G)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%G&lt;/td&gt;&lt;td&gt;ISO-8601 格式年份 (参见%V)，一般只和 %V 结合使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%h&lt;/td&gt;&lt;td&gt;等于%b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%H&lt;/td&gt;&lt;td&gt;小时(00-23)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%I&lt;/td&gt;&lt;td&gt;小时(00-12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%j&lt;/td&gt;&lt;td&gt;按年计的日期(001-366)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%k&lt;/td&gt;&lt;td&gt;hour, space padded ( 0..23); same as %_H&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%l&lt;/td&gt;&lt;td&gt;hour, space padded ( 1..12); same as %_I&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%m&lt;/td&gt;&lt;td&gt;month (01..12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%M&lt;/td&gt;&lt;td&gt;minute (00..59)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%n&lt;/td&gt;&lt;td&gt;a newline&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%N&lt;/td&gt;&lt;td&gt;nanoseconds (000000000..999999999)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%p&lt;/td&gt;&lt;td&gt;locale's equivalent of either AM or PM; blank if not known&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%P&lt;/td&gt;&lt;td&gt;like %p, but lower case&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%q&lt;/td&gt;&lt;td&gt;quarter of year (1..4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%r&lt;/td&gt;&lt;td&gt;locale's 12-hour clock time (e.g., 11:11:04 PM)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%R&lt;/td&gt;&lt;td&gt;24-hour hour and minute; same as %H:%M&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%s&lt;/td&gt;&lt;td&gt;seconds since 1970-01-01 00:00:00 UTC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%S&lt;/td&gt;&lt;td&gt;秒(00-60)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%t&lt;/td&gt;&lt;td&gt;输出制表符 Tab&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%T&lt;/td&gt;&lt;td&gt;时间，等于%H:%M:%S&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%u&lt;/td&gt;&lt;td&gt;星期，1 代表星期一&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%U&lt;/td&gt;&lt;td&gt;一年中的第几周，以周日为每星期第一天(00-53)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%V&lt;/td&gt;&lt;td&gt;ISO-8601 格式规范下的一年中第几周，以周一为每星期第一天(01-53)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%w&lt;/td&gt;&lt;td&gt;一星期中的第几日(0-6)，0 代表周一&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%W&lt;/td&gt;&lt;td&gt;一年中的第几周，以周一为每星期第一天(00-53)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%x&lt;/td&gt;&lt;td&gt;当前locale 下的日期描述 (如：12/31/99)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%X&lt;/td&gt;&lt;td&gt;当前locale 下的时间描述 (如：23:13:48)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%y&lt;/td&gt;&lt;td&gt;年份最后两位数位 (00-99)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%Y&lt;/td&gt;&lt;td&gt;年份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%z +hhmm&lt;/td&gt;&lt;td&gt;数字时区(例如，-0400)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%:z +hh:mm&lt;/td&gt;&lt;td&gt;数字时区(例如，-04:00)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%::z +hh:mm:ss&lt;/td&gt;&lt;td&gt;数字时区(例如，-04:00:00)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%:::z&lt;/td&gt;&lt;td&gt;数字时区带有必要的精度 (例如，-04，+05:30)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%Z&lt;/td&gt;&lt;td&gt;按字母表排序的时区缩写 (例如，EDT)&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href="http://www.cplusplus.com/reference/ctime/strftime/"&gt;http://www.cplusplus.com/reference/ctime/strftime/&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;specifier&lt;/th&gt;&lt;th&gt;Replaced by&lt;/th&gt;&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%a&lt;/td&gt;&lt;td&gt;Abbreviated weekday name *&lt;/td&gt;&lt;td&gt;Thu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%A&lt;/td&gt;&lt;td&gt;Full weekday name *&lt;/td&gt;&lt;td&gt;Thursday&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%b&lt;/td&gt;&lt;td&gt;Abbreviated month name *&lt;/td&gt;&lt;td&gt;Aug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%B&lt;/td&gt;&lt;td&gt;Full month name *&lt;/td&gt;&lt;td&gt;August&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%c&lt;/td&gt;&lt;td&gt;Date and time representation *&lt;/td&gt;&lt;td&gt;Thu Aug 23 14:55:02 2001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%C&lt;/td&gt;&lt;td&gt;Year divided by 100 and truncated to integer (00-99)&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%d&lt;/td&gt;&lt;td&gt;Day of the month, zero-padded (01-31)&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%D&lt;/td&gt;&lt;td&gt;Short MM/DD/YY date, equivalent to %m/%d/%y&lt;/td&gt;&lt;td&gt;08/23/01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%e&lt;/td&gt;&lt;td&gt;Day of the month, space-padded ( 1-31)&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%F&lt;/td&gt;&lt;td&gt;Short YYYY-MM-DD date, equivalent to %Y-%m-%d&lt;/td&gt;&lt;td&gt;2001-08-23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%g&lt;/td&gt;&lt;td&gt;Week-based year, last two digits (00-99)&lt;/td&gt;&lt;td&gt;01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%G&lt;/td&gt;&lt;td&gt;Week-based year&lt;/td&gt;&lt;td&gt;2001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%h&lt;/td&gt;&lt;td&gt;Abbreviated month name * (same as %b)&lt;/td&gt;&lt;td&gt;Aug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%H&lt;/td&gt;&lt;td&gt;Hour in 24h format (00-23)&lt;/td&gt;&lt;td&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%I&lt;/td&gt;&lt;td&gt;Hour in 12h format (01-12)&lt;/td&gt;&lt;td&gt;02&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%j&lt;/td&gt;&lt;td&gt;Day of the year (001-366)&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%m&lt;/td&gt;&lt;td&gt;Month as a decimal number (01-12)&lt;/td&gt;&lt;td&gt;08&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%M&lt;/td&gt;&lt;td&gt;Minute (00-59)&lt;/td&gt;&lt;td&gt;55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%n&lt;/td&gt;&lt;td&gt;New-line character ('\n')&lt;/td&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%p&lt;/td&gt;&lt;td&gt;AM or PM designation&lt;/td&gt;&lt;td&gt;PM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%r&lt;/td&gt;&lt;td&gt;12-hour clock time *&lt;/td&gt;&lt;td&gt;02:55:02 pm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%R&lt;/td&gt;&lt;td&gt;24-hour HH:MM time, equivalent to %H:%M&lt;/td&gt;&lt;td&gt;14:55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%S&lt;/td&gt;&lt;td&gt;Second (00-61)&lt;/td&gt;&lt;td&gt;02&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%t&lt;/td&gt;&lt;td&gt;Horizontal-tab character ('\t')&lt;/td&gt;&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%T&lt;/td&gt;&lt;td&gt;ISO 8601 time format (HH:MM:SS), equivalent to %H:%M:%S&lt;/td&gt;&lt;td&gt;14:55:02&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%u&lt;/td&gt;&lt;td&gt;ISO 8601 weekday as number with Monday as 1 (1-7)&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%U&lt;/td&gt;&lt;td&gt;Week number with the first Sunday as the first day of week one (00-53)&lt;/td&gt;&lt;td&gt;33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%V&lt;/td&gt;&lt;td&gt;ISO 8601 week number (01-53)&lt;/td&gt;&lt;td&gt;34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%w&lt;/td&gt;&lt;td&gt;Weekday as a decimal number with Sunday as 0 (0-6)&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%W&lt;/td&gt;&lt;td&gt;Week number with the first Monday as the first day of week one (00-53)&lt;/td&gt;&lt;td&gt;34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%x&lt;/td&gt;&lt;td&gt;Date representation *&lt;/td&gt;&lt;td&gt;08/23/01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%X&lt;/td&gt;&lt;td&gt;Time representation *&lt;/td&gt;&lt;td&gt;14:55:02&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%y&lt;/td&gt;&lt;td&gt;Year, last two digits (00-99)&lt;/td&gt;&lt;td&gt;01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%Y&lt;/td&gt;&lt;td&gt;Year&lt;/td&gt;&lt;td&gt;2001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%z&lt;/td&gt;&lt;td&gt;ISO 8601 offset from UTC in timezone (1 minute=1, 1 hour=100),If timezone cannot be determined, no characters&lt;/td&gt;&lt;td&gt;+100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%Z&lt;/td&gt;&lt;td&gt;Timezone name or abbreviation *,if timezone cannot be determined, no characters&lt;/td&gt;&lt;td&gt;CDT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%%&lt;/td&gt;&lt;td&gt;A % sign&lt;/td&gt;&lt;td&gt;%&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;</content><category term="date"></category></entry><entry><title>lua中匪夷所思的table长度</title><link href="http://honmaple.me/articles/2017/10/lua%E4%B8%AD%E5%8C%AA%E5%A4%B7%E6%89%80%E6%80%9D%E7%9A%84table%E9%95%BF%E5%BA%A6.html" rel="alternate"></link><published>2017-10-10T00:00:00+08:00</published><updated>2017-10-10T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-10-10:/articles/2017/10/lua中匪夷所思的table长度.html</id><summary type="html">
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 3&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 3&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;6&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 3&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 3&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;6&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Lua 5.3.4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;输出就是这么匪夷所思,所以, &lt;b&gt;不要在Lua的table中使用nil值，如果一个元素要删除，直接remove&lt;/b&gt;&lt;/p&gt;</content><category term="lua"></category></entry><entry><title>ansible快速部署加速方案</title><link href="http://honmaple.me/articles/2017/10/ansible%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E5%8A%A0%E9%80%9F%E6%96%B9%E6%A1%88.html" rel="alternate"></link><published>2017-10-08T00:00:00+08:00</published><updated>2017-10-08T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-10-08:/articles/2017/10/ansible快速部署加速方案.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-2847809"&gt;加速&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-40828725"&gt;问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-49851788"&gt;方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-2901432"&gt;目标&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-81793856"&gt;web界面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43254016"&gt;任务队列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;ansible是基于Python的 &lt;b&gt;自动化部署&lt;/b&gt; 方案,但是目前只是通过命令行
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ansible -i hosts all -a &amp;#39;uptime&amp;#39;
# or
ansible-playbook -i hosts playbook.yml -e &amp;#39;args&amp;#39; -t deploy
&lt;/pre&gt;&lt;/div&gt;

实现自动化部署.&lt;/p&gt;

&lt;p&gt;长此以往，虽然可以实现所谓的自动化，但产品业务线多且杂的情况下，项目很难维护，更不用说以文件为存储的表现形式很差,针对目前使用ansible的经验以及使用中的困难,可以针对性的提出一些解决方案&lt;/p&gt;

&lt;h3 id="org-2847809"&gt;加速&lt;/h3&gt;

&lt;h4 id="org-40828725"&gt;问题&lt;/h4&gt;
&lt;p&gt;自动化部署其中最大的障碍就是 &lt;b&gt;网络&lt;/b&gt; 的原因&lt;/p&gt;

&lt;p&gt;其中需要通过网络上传一些模板文件,有的甚至还需要上传一些压缩包,虽然说几MB的东西很快就能上传成功，但如果把这上传文件所需要的2秒乘以上百，上千台主机呢,更不用说ansible的表现形式就是一个任务一个任务的往下执行,假如在上传模板这一步卡住 …&lt;/p&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-2847809"&gt;加速&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-40828725"&gt;问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-49851788"&gt;方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-2901432"&gt;目标&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-81793856"&gt;web界面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43254016"&gt;任务队列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;ansible是基于Python的 &lt;b&gt;自动化部署&lt;/b&gt; 方案,但是目前只是通过命令行
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ansible -i hosts all -a &amp;#39;uptime&amp;#39;
# or
ansible-playbook -i hosts playbook.yml -e &amp;#39;args&amp;#39; -t deploy
&lt;/pre&gt;&lt;/div&gt;

实现自动化部署.&lt;/p&gt;

&lt;p&gt;长此以往，虽然可以实现所谓的自动化，但产品业务线多且杂的情况下，项目很难维护，更不用说以文件为存储的表现形式很差,针对目前使用ansible的经验以及使用中的困难,可以针对性的提出一些解决方案&lt;/p&gt;

&lt;h3 id="org-2847809"&gt;加速&lt;/h3&gt;

&lt;h4 id="org-40828725"&gt;问题&lt;/h4&gt;
&lt;p&gt;自动化部署其中最大的障碍就是 &lt;b&gt;网络&lt;/b&gt; 的原因&lt;/p&gt;

&lt;p&gt;其中需要通过网络上传一些模板文件,有的甚至还需要上传一些压缩包,虽然说几MB的东西很快就能上传成功，但如果把这上传文件所需要的2秒乘以上百，上千台主机呢,更不用说ansible的表现形式就是一个任务一个任务的往下执行,假如在上传模板这一步卡住(等待所有服务器上传成功),这时某台未模板化的服务器的某服务需要重启，是不是会出问题呢&lt;/p&gt;

&lt;h4 id="org-49851788"&gt;方案&lt;/h4&gt;
&lt;p&gt;针对这一问题,目前想到的解决方案如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;适当增加fork数&lt;/b&gt;
&lt;p&gt;目前fork数默认为50，可以适当增加&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;大文件使用内网(外网)下载&lt;/b&gt;
&lt;p&gt;从部署机上上传文件可能会出现这样那样的问题，尤其是上传到国外服务器时经常会出现ansible playbook的任务卡住问题(其实是正在以几KB/s的龟速运行)，所以其中大于xxMB的文件(压缩包)全部使用从远程服务器上下载方式,并且全部进行加密处理&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;把超过几百台服务器的节点分组多进程运行&lt;/b&gt;
&lt;p&gt;服务器一旦多了，对应任务的等待时间也就多了，所以将500台的节点分为十组，每组50台,使用多进程分别同时运行，这样可以有效减少任务等待时间,需要注意每组运行失败的服务器。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;把经常出问题或者网络不太好的节点放到最后运行&lt;/b&gt;
&lt;p&gt;像中国移动以及香港，国外的某些节点在运行ansible playbook的时候总会或多或少的出些问题,这些节点可以考虑放到最后,并且需要找出问题原因进行优化&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="org-2901432"&gt;目标&lt;/h3&gt;

&lt;h4 id="org-81793856"&gt;web界面&lt;/h4&gt;
&lt;p&gt;使用过ansible的同学一定知道ansible-tower，它是ansible的web方式部署，通过web界面就可以添加删除任务,并且运行ansible playbook,可惜，它是收费的 /捂脸&lt;/p&gt;

&lt;h4 id="org-43254016"&gt;任务队列&lt;/h4&gt;
&lt;p&gt;把ansible playbook放到任务队列里，由消费者去消费对应的任务&lt;/p&gt;

&lt;p&gt;未完待续...&lt;/p&gt;</content><category term="linux"></category><category term="ansible"></category></entry><entry><title>ansible-playbook中tasks单进程</title><link href="http://honmaple.me/articles/2017/09/ansible-playbook%E4%B8%ADtasks%E5%8D%95%E8%BF%9B%E7%A8%8B.html" rel="alternate"></link><published>2017-09-19T00:00:00+08:00</published><updated>2017-09-19T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-09-19:/articles/2017/09/ansible-playbook中tasks单进程.html</id><summary type="html">
&lt;p&gt;之前有一个需求,ansible-playbook中需要某一步单步执行,也就是说在有多台服务器时,某个任务只能一台服务器执行完后,另一台服务器才能执行,否者对应集群的服务会出问题&lt;/p&gt;

&lt;p&gt;这是一个很简单的需求,ansible中也有对应的实现, &lt;code&gt;--fork 1&lt;/code&gt; 或者 使用 &lt;code&gt;serial&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但是如果有人忘记加 &lt;code&gt;--fork 1&lt;/code&gt; 了呢，而且该任务是在子任务中，使用 &lt;b&gt;include&lt;/b&gt; 加载, &lt;code&gt;serial&lt;/code&gt; 关键字无法在某一特定任务中使用,只能与 &lt;b&gt;hosts&lt;/b&gt; 同级&lt;/p&gt;

&lt;p&gt;所幸，在这里 &lt;a href="https://www.bountysource.com/issues/26342862-support-for-serial-on-an-individual-task"&gt;https://www.bountysource.com/issues/26342862-support-for-serial-on-an-individual-task&lt;/a&gt; 找到了解决办法,使用 &lt;b&gt;delegate_to&lt;/b&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
  &lt;span class="c1"&gt;# serial: 1 would be the proper solution here, but …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">
&lt;p&gt;之前有一个需求,ansible-playbook中需要某一步单步执行,也就是说在有多台服务器时,某个任务只能一台服务器执行完后,另一台服务器才能执行,否者对应集群的服务会出问题&lt;/p&gt;

&lt;p&gt;这是一个很简单的需求,ansible中也有对应的实现, &lt;code&gt;--fork 1&lt;/code&gt; 或者 使用 &lt;code&gt;serial&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但是如果有人忘记加 &lt;code&gt;--fork 1&lt;/code&gt; 了呢，而且该任务是在子任务中，使用 &lt;b&gt;include&lt;/b&gt; 加载, &lt;code&gt;serial&lt;/code&gt; 关键字无法在某一特定任务中使用,只能与 &lt;b&gt;hosts&lt;/b&gt; 同级&lt;/p&gt;

&lt;p&gt;所幸，在这里 &lt;a href="https://www.bountysource.com/issues/26342862-support-for-serial-on-an-individual-task"&gt;https://www.bountysource.com/issues/26342862-support-for-serial-on-an-individual-task&lt;/a&gt; 找到了解决办法,使用 &lt;b&gt;delegate_to&lt;/b&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
  &lt;span class="c1"&gt;# serial: 1 would be the proper solution here, but that can only be set on play level&lt;/span&gt;
  &lt;span class="c1"&gt;# upstream issue: https://github.com/ansible/ansible/issues/12170&lt;/span&gt;
  &lt;span class="n"&gt;run_once&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;
  &lt;span class="n"&gt;with_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{{play_hosts}}&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;delegate_to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{{ item }}&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/bin/service restart&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="linux"></category><category term="ansible"></category></entry><entry><title>那里有座山</title><link href="http://honmaple.me/articles/2017/09/%E9%82%A3%E9%87%8C%E6%9C%89%E5%BA%A7%E5%B1%B1.html" rel="alternate"></link><published>2017-09-15T00:00:00+08:00</published><updated>2017-09-15T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-09-15:/articles/2017/09/那里有座山.html</id><summary type="html">
&lt;div class="org-center"&gt;
&lt;blockquote&gt;
&lt;p class="org-verse"&gt;
这里有座山&lt;br/&gt;
那里有座山&lt;br/&gt;
你在那里&lt;br/&gt;
我在这里
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;

&lt;div class="org-center"&gt;
&lt;p class="org-verse"&gt;
我们都有着自己的骄傲&lt;br/&gt;
谁都不想为谁低头&lt;br/&gt;
&lt;br/&gt;
这里有座山&lt;br/&gt;
那里有座山&lt;br/&gt;
至少&lt;br/&gt;
我还可以远远的看到你&lt;br/&gt;
&lt;br/&gt;
你在那里&lt;br/&gt;
你在哪里&lt;br/&gt;
而我&lt;br/&gt;
一直都在这里&lt;br/&gt;
&lt;br/&gt;
一直都在这里
&lt;/p&gt;
&lt;/div&gt;</summary><content type="html">
&lt;div class="org-center"&gt;
&lt;blockquote&gt;
&lt;p class="org-verse"&gt;
这里有座山&lt;br/&gt;
那里有座山&lt;br/&gt;
你在那里&lt;br/&gt;
我在这里
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;

&lt;div class="org-center"&gt;
&lt;p class="org-verse"&gt;
我们都有着自己的骄傲&lt;br/&gt;
谁都不想为谁低头&lt;br/&gt;
&lt;br/&gt;
这里有座山&lt;br/&gt;
那里有座山&lt;br/&gt;
至少&lt;br/&gt;
我还可以远远的看到你&lt;br/&gt;
&lt;br/&gt;
你在那里&lt;br/&gt;
你在哪里&lt;br/&gt;
而我&lt;br/&gt;
一直都在这里&lt;br/&gt;
&lt;br/&gt;
一直都在这里
&lt;/p&gt;
&lt;/div&gt;</content><category term="life"></category><category term="love"></category></entry><entry><title>七夕</title><link href="http://honmaple.me/articles/2017/08/%E4%B8%83%E5%A4%95.html" rel="alternate"></link><published>2017-08-30T00:00:00+08:00</published><updated>2017-08-30T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-08-30:/articles/2017/08/七夕.html</id><summary type="html">
&lt;p&gt;14.6 = 13.14 / 0.9&lt;/p&gt;

&lt;p&gt;13.14 = 14.6 * 0.9&lt;/p&gt;

&lt;p&gt;&lt;b&gt;终究是无缘&lt;/b&gt;&lt;/p&gt;</summary><content type="html">
&lt;p&gt;14.6 = 13.14 / 0.9&lt;/p&gt;

&lt;p&gt;13.14 = 14.6 * 0.9&lt;/p&gt;

&lt;p&gt;&lt;b&gt;终究是无缘&lt;/b&gt;&lt;/p&gt;</content><category term="恋"></category></entry><entry><title>redis集群搭建</title><link href="http://honmaple.me/articles/2017/08/redis%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA.html" rel="alternate"></link><published>2017-08-13T00:00:00+08:00</published><updated>2017-08-13T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-08-13:/articles/2017/08/redis集群搭建.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-40969078"&gt;准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-84451951"&gt;创建集群&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-50876275"&gt;测试集群&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.redis.cn/topics/cluster-tutorial.html"&gt;参考资料&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Redis 集群是一个提供在多个Redis间&lt;b&gt;节点间共享数据&lt;/b&gt;的程序集&lt;/p&gt;

&lt;h3 id="org-40969078"&gt;准备&lt;/h3&gt;

&lt;p&gt;集群开始需要运行redis集群实例，而且要让集群正常运作至少需要三个主节点,这里创建六个节点，三个为主节点，三个为从节点,端口号分别为9001,9002,9003,9004,9005,9006&lt;/p&gt;

&lt;p&gt;并创建六个以端口号为名字的目录， 在每个目录中运行一个Redis实例
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p redis/9001
&lt;span class="nb"&gt;cd&lt;/span&gt; redis
mkdir &lt;span class="m"&gt;9002&lt;/span&gt;
mkdir &lt;span class="m"&gt;9003&lt;/span&gt;
mkdir &lt;span class="m"&gt;9004&lt;/span&gt;
mkdir &lt;span class="m"&gt;9005&lt;/span&gt;
mkdir &lt;span class="m"&gt;9006&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;然后将对应的配置&lt;b&gt;redis.conf&lt;/b&gt;放入相应的目录中(记得修改端口号)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;最小配置选项:
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;port 9001 …&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-40969078"&gt;准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-84451951"&gt;创建集群&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-50876275"&gt;测试集群&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.redis.cn/topics/cluster-tutorial.html"&gt;参考资料&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Redis 集群是一个提供在多个Redis间&lt;b&gt;节点间共享数据&lt;/b&gt;的程序集&lt;/p&gt;

&lt;h3 id="org-40969078"&gt;准备&lt;/h3&gt;

&lt;p&gt;集群开始需要运行redis集群实例，而且要让集群正常运作至少需要三个主节点,这里创建六个节点，三个为主节点，三个为从节点,端口号分别为9001,9002,9003,9004,9005,9006&lt;/p&gt;

&lt;p&gt;并创建六个以端口号为名字的目录， 在每个目录中运行一个Redis实例
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p redis/9001
&lt;span class="nb"&gt;cd&lt;/span&gt; redis
mkdir &lt;span class="m"&gt;9002&lt;/span&gt;
mkdir &lt;span class="m"&gt;9003&lt;/span&gt;
mkdir &lt;span class="m"&gt;9004&lt;/span&gt;
mkdir &lt;span class="m"&gt;9005&lt;/span&gt;
mkdir &lt;span class="m"&gt;9006&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;然后将对应的配置&lt;b&gt;redis.conf&lt;/b&gt;放入相应的目录中(记得修改端口号)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;最小配置选项:
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;port 9001
cluster-enabled yes
cluster-config-file node9001.conf
cluster-node-timeout 5000
appendonly yes
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后就可以启动redis实例了
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;redis-server redis/9001/redis.conf
redis-server redis/9002/redis.conf
redis-server redis/9003/redis.conf
redis-server redis/9004/redis.conf
redis-server redis/9005/redis.conf
redis-server redis/9006/redis.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;由于这个过程很简单而且重复,所以我写了一个脚本进行创建:
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@cli.command&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nd"&gt;@click.option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@click.option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-p&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;redis.conf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;port {0}&lt;/span&gt;
&lt;span class="s1"&gt;cluster-enabled yes&lt;/span&gt;
&lt;span class="s1"&gt;cluster-config-file nodes{0}.conf&lt;/span&gt;
&lt;span class="s1"&gt;cluster-node-timeout 5000&lt;/span&gt;
&lt;span class="s1"&gt;appendonly yes&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;redis-server {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id="org-84451951"&gt;创建集群&lt;/h3&gt;
&lt;p&gt;使用redis的官方脚本&lt;a href="https://github.com/antirez/redis/blob/unstable/src/redis-trib.rb"&gt;redis-trib&lt;/a&gt;进行创建
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ruby redis-trib.rb create --replicas &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9004 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9005 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9006
&lt;/pre&gt;&lt;/div&gt;

或者接上面的脚本
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;127.0.0.1:{}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ruby redis-trib.rb create --replicas 1 {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;–replicas 1&lt;/b&gt;:表示为集群中的每个主节点创建一个从节点&lt;/p&gt;

&lt;p&gt;结果如图所示:
&lt;a href="https://images.honmaple.com/images/admin/show/2017/08/150264027839037.png" data-fancybox="image"&gt; &lt;img src="https://images.honmaple.com/images/admin/show/2017/08/150264027839037.png" /&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;输入&lt;b&gt;yes&lt;/b&gt;
最后查看集群是否启动成功
&lt;a href="https://images.honmaple.com/images/admin/show/2017/08/150264059108046.png" data-fancybox="image"&gt; &lt;img src="https://images.honmaple.com/images/admin/show/2017/08/150264059108046.png" /&gt; &lt;/a&gt;&lt;/p&gt;

&lt;h3 id="org-50876275"&gt;测试集群&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;-c&lt;/b&gt; 选项以集群方式启动
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ redis-cli -c -p &lt;span class="m"&gt;7000&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; keys *
  &lt;span class="o"&gt;(&lt;/span&gt;empty list or &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; hello world
  OK
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; get hello
  &lt;span class="s2"&gt;&amp;quot;world&amp;quot;&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; hello1 world1
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;11613&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003
  OK
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003&amp;gt; get hello1
  &lt;span class="s2"&gt;&amp;quot;world1&amp;quot;&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; hello2 world2
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;7486&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002
  OK
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002&amp;gt; get hello2
  &lt;span class="s2"&gt;&amp;quot;world2&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;进入另一个实例&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ redis-cli -c -p &lt;span class="m"&gt;9002&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002&amp;gt; get hello
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;866&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001
  &lt;span class="s2"&gt;&amp;quot;world&amp;quot;&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; get hello1
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;11613&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003
  &lt;span class="s2"&gt;&amp;quot;world1&amp;quot;&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003&amp;gt; get hello2
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;7486&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002
  &lt;span class="s2"&gt;&amp;quot;world2&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok,先这样&lt;/p&gt;</content><category term="linux"></category><category term="redis"></category></entry><entry><title>tornado中session实现</title><link href="http://honmaple.me/articles/2017/08/tornado%E4%B8%ADsession%E5%AE%9E%E7%8E%B0.html" rel="alternate"></link><published>2017-08-06T00:00:00+08:00</published><updated>2017-08-06T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-08-06:/articles/2017/08/tornado中session实现.html</id><summary type="html">
&lt;p&gt;tornado中默认没有session的实现,虽然默认的 &lt;b&gt;set_secure_cookie&lt;/b&gt; 已经足够安全了,但更安全的应该是客户端保存session_id,服务端保存对应的信息&lt;/p&gt;

&lt;p&gt;注:保存在redis中的经测试是可以的,保存在内存中的貌似还不行&lt;/p&gt;


&lt;p&gt;给出源码:&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;uuid&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;uuid4&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;redis&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StrictRedis&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;wraps&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pytz&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;instances&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="nd"&gt;@wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kw&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;cls …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">
&lt;p&gt;tornado中默认没有session的实现,虽然默认的 &lt;b&gt;set_secure_cookie&lt;/b&gt; 已经足够安全了,但更安全的应该是客户端保存session_id,服务端保存对应的信息&lt;/p&gt;

&lt;p&gt;注:保存在redis中的经测试是可以的,保存在内存中的貌似还不行&lt;/p&gt;


&lt;p&gt;给出源码:&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;uuid&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;uuid4&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;redis&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StrictRedis&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;wraps&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pytz&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;instances&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="nd"&gt;@wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kw&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;getinstance&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tz&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;tz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;UTC&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CoreSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__setitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        session[&amp;#39;username&amp;#39;] = &amp;#39;hello&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_or_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nd"&gt;@singleton&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MemorySession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CoreSession&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        self._client = {&amp;#39;session_id1&amp;#39;:{key:value},&lt;/span&gt;
&lt;span class="sd"&gt;                        &amp;#39;session_id2&amp;#39;:{key:value}}&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expires_days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;session:{}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expires_days&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;expires_days&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;is_authenticated&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;expire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expires_days&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remove_expires&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;expire_sessions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;expire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="n"&gt;expire_sessions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="nd"&gt;@singleton&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RedisSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CoreSession&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StrictRedis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;redis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;decode_responses&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expires_days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;session:{}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expires_days&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;expires_days&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;is_authenticated&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expire&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expires_days&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hdel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request_handler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request_handler&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_handler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_secure_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;session&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid4&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_handler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_secure_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;session&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# get cookies is bytes&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RedisSession&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="c1"&gt;# self._session = MemorySession()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__setitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_handler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="python"></category><category term="tornado"></category></entry></feed>