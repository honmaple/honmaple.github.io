<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>honmaple's blog - Linux</title><link href="http://honmaple.me/" rel="alternate"></link><link href="http://honmaple.me/feeds/linux.rss.xml" rel="self"></link><id>http://honmaple.me/</id><updated>2018-03-16T13:50:32+08:00</updated><entry><title>git笔记</title><link href="http://honmaple.me/articles/2018/03/git%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><published>2018-03-01T16:25:38+08:00</published><updated>2018-03-10T23:24:13+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-03-01:/articles/2018/03/git笔记.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-75068376"&gt;git修改提交作者和邮箱&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-75068376"&gt;git修改提交作者和邮箱&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;提交前
&lt;p&gt;如果代码未提交,则可以&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config  user.name &lt;span class="s2"&gt;&amp;quot;Author Name&amp;quot;&lt;/span&gt;
git config  user.email &lt;span class="s2"&gt;&amp;quot;Author Email&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;提交后
&lt;p&gt;如果代码已经提交,或者已经push到remote(只能修改最近一次提交)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git commit --amend --author&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NewAuthor &amp;lt;NewEmail@address.com&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改全部&lt;b&gt;commit&lt;/b&gt;,需要使用脚本 &lt;a href="https://help.github.com/articles/changing-author-info/"&gt;参考github官方&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

git filter-branch --env-filter &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;OLD_EMAIL=&amp;quot;your-old-email@example.com&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;CORRECT_NAME=&amp;quot;Your Correct Name …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-75068376"&gt;git修改提交作者和邮箱&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-75068376"&gt;git修改提交作者和邮箱&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;提交前
&lt;p&gt;如果代码未提交,则可以&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config  user.name &lt;span class="s2"&gt;&amp;quot;Author Name&amp;quot;&lt;/span&gt;
git config  user.email &lt;span class="s2"&gt;&amp;quot;Author Email&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;提交后
&lt;p&gt;如果代码已经提交,或者已经push到remote(只能修改最近一次提交)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git commit --amend --author&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NewAuthor &amp;lt;NewEmail@address.com&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改全部&lt;b&gt;commit&lt;/b&gt;,需要使用脚本 &lt;a href="https://help.github.com/articles/changing-author-info/"&gt;参考github官方&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

git filter-branch --env-filter &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;OLD_EMAIL=&amp;quot;your-old-email@example.com&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;CORRECT_NAME=&amp;quot;Your Correct Name&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;CORRECT_EMAIL=&amp;quot;your-correct-email@example.com&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;if [ &amp;quot;$GIT_COMMITTER_EMAIL&amp;quot; = &amp;quot;$OLD_EMAIL&amp;quot; ]&lt;/span&gt;
&lt;span class="s1"&gt;then&lt;/span&gt;
&lt;span class="s1"&gt;    export GIT_COMMITTER_NAME=&amp;quot;$CORRECT_NAME&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    export GIT_COMMITTER_EMAIL=&amp;quot;$CORRECT_EMAIL&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;fi&lt;/span&gt;
&lt;span class="s1"&gt;if [ &amp;quot;$GIT_AUTHOR_EMAIL&amp;quot; = &amp;quot;$OLD_EMAIL&amp;quot; ]&lt;/span&gt;
&lt;span class="s1"&gt;then&lt;/span&gt;
&lt;span class="s1"&gt;    export GIT_AUTHOR_NAME=&amp;quot;$CORRECT_NAME&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    export GIT_AUTHOR_EMAIL=&amp;quot;$CORRECT_EMAIL&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;fi&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; --tag-name-filter cat -- --branches --tags
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;b&gt;.git&lt;/b&gt;同级目录下运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sh git.sh
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后使用&lt;code&gt;--force&lt;/code&gt; push到远程&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="linux"></category><category term="git"></category></entry><entry><title>docker笔记</title><link href="http://honmaple.me/articles/2018/02/docker%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><published>2018-02-23T23:19:55+08:00</published><updated>2018-02-23T23:33:13+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-02-23:/articles/2018/02/docker笔记.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-73285490"&gt;docker删除硬盘残留的文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-84340943"&gt;docker构建时禁用缓存&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-73285490"&gt;docker删除硬盘残留的文件&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;docker rmi ...&lt;/code&gt; 或者 &lt;code&gt;docker image rm ...&lt;/code&gt; 并不能将镜像完全删除，还会一直占用硬盘空间&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker system prune
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;该命令不会删除已存在镜像(不管是否正在运行)&lt;/p&gt;

&lt;p&gt;(硬盘一下子多个好几个G, 心情不错)&lt;/p&gt;

&lt;h3 id="org-84340943"&gt;docker构建时禁用缓存&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;dockerfile&lt;/b&gt; 中有多个 RUN 或者 ADD .. 命令时, 每个 RUN 都会创建一个 image, 下一个 image 会以上一个为基础（缓存）继续构建,&lt;/p&gt;

&lt;p&gt;可以使用 &lt;code&gt;docker images -a&lt;/code&gt; 看到很多 &lt;b&gt;&amp;lt;none&amp;gt;&lt;/b&gt; 的 image&lt;/p&gt;

&lt;p&gt;不过作为一名有洁癖的coder, 这种情况不能忍&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-73285490"&gt;docker删除硬盘残留的文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-84340943"&gt;docker构建时禁用缓存&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h3 id="org-73285490"&gt;docker删除硬盘残留的文件&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;docker rmi ...&lt;/code&gt; 或者 &lt;code&gt;docker image rm ...&lt;/code&gt; 并不能将镜像完全删除，还会一直占用硬盘空间&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker system prune
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;该命令不会删除已存在镜像(不管是否正在运行)&lt;/p&gt;

&lt;p&gt;(硬盘一下子多个好几个G, 心情不错)&lt;/p&gt;

&lt;h3 id="org-84340943"&gt;docker构建时禁用缓存&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;dockerfile&lt;/b&gt; 中有多个 RUN 或者 ADD .. 命令时, 每个 RUN 都会创建一个 image, 下一个 image 会以上一个为基础（缓存）继续构建,&lt;/p&gt;

&lt;p&gt;可以使用 &lt;code&gt;docker images -a&lt;/code&gt; 看到很多 &lt;b&gt;&amp;lt;none&amp;gt;&lt;/b&gt; 的 image&lt;/p&gt;

&lt;p&gt;不过作为一名有洁癖的coder, 这种情况不能忍&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker build --no-cache -t hello .
&lt;/pre&gt;&lt;/div&gt;

</content><category term="linux"></category><category term="docker"></category></entry><entry><title>emacs自动更新文件头</title><link href="http://honmaple.me/articles/2018/01/emacs%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%96%87%E4%BB%B6%E5%A4%B4.html" rel="alternate"></link><published>2018-01-09T16:00:45+08:00</published><updated>2018-01-14T16:42:06+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-01-09:/articles/2018/01/emacs自动更新文件头.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-10626316"&gt;自动更新Last Updated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-71116359"&gt;自动更新Filename&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-81365469"&gt;自动更新Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;前面已经说过，可以使用&lt;b&gt;auto-insert&lt;/b&gt;自动添加文件头，今天来说一说自动更新文件头，比如说每次保存时自动更新&lt;b&gt;last updated&lt;/b&gt;字段&lt;/p&gt;


&lt;h3 id="org-10626316"&gt;自动更新Last Updated&lt;/h3&gt;
&lt;p&gt;如果使用的是header2,直接设置相关的变量就可，假如使用的是&lt;b&gt;auto-insert&lt;/b&gt;，同样也可以使用emacs内置的&lt;b&gt;time-stamp&lt;/b&gt;对Last Updated进行自动更新&lt;/p&gt;

&lt;p&gt;time-stamp默认使用&lt;code&gt;Time-stamp:&lt;/code&gt;,如果要对&lt;code&gt;Last Updated&lt;/code&gt;进行自动更新，只需要简单的设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-active&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-line-limit&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-start&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[lL]ast[ -][uU]pdate[ \t]*:?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-end&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-10626316"&gt;自动更新Last Updated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-71116359"&gt;自动更新Filename&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-81365469"&gt;自动更新Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;前面已经说过，可以使用&lt;b&gt;auto-insert&lt;/b&gt;自动添加文件头，今天来说一说自动更新文件头，比如说每次保存时自动更新&lt;b&gt;last updated&lt;/b&gt;字段&lt;/p&gt;


&lt;h3 id="org-10626316"&gt;自动更新Last Updated&lt;/h3&gt;
&lt;p&gt;如果使用的是header2,直接设置相关的变量就可，假如使用的是&lt;b&gt;auto-insert&lt;/b&gt;，同样也可以使用emacs内置的&lt;b&gt;time-stamp&lt;/b&gt;对Last Updated进行自动更新&lt;/p&gt;

&lt;p&gt;time-stamp默认使用&lt;code&gt;Time-stamp:&lt;/code&gt;,如果要对&lt;code&gt;Last Updated&lt;/code&gt;进行自动更新，只需要简单的设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-active&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-line-limit&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-start&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[lL]ast[ -][uU]pdate[ \t]*:?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-end&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;time-stamp-format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; %#A %Y-%02m-%02d %02H:%02M:%02S (%Z)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;before-save-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;time-stamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就能在每次保存时自动更新相应的字段了&lt;/p&gt;

&lt;h3 id="org-71116359"&gt;自动更新Filename&lt;/h3&gt;
&lt;p&gt;之前遇到过，使用&lt;b&gt;auto-insert&lt;/b&gt;在每次创建新文件时自动添加了文件头，但后面文件名被修改了，文件头里的文件名却不会自动更改，基于这个原因需要自己实现一个函数(我没有找到可以使用的已经存在的package)&lt;/p&gt;

&lt;p&gt;先理一理逻辑: 只需要查找当前文件前几行信息，如果找到&lt;code&gt;File Name:&lt;/code&gt;字段，获取字段信息，与当前文件名进行对比，如果不一致则替换为当前文件名,直接给出代码吧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;查找当前文件前几行
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;save-excursion&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-min&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;;;跳转到开头&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;;; 查找&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;1+&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;forward-line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;获取当前文件名
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;查找File Name
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;looking-at&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.*\\(File Name:\\)\\(.*\\)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;对文件名进行比对与替换
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-beginning&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-end&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string=&lt;/span&gt; &lt;span class="nv"&gt;文件名&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;match-string&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;delete-region&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="nv"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即可得到相关的完整函数(完整函数后面再讲)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="org-81365469"&gt;自动更新Email&lt;/h3&gt;
&lt;p&gt;工作和平时使用的邮箱不一样，我虽然设置了&lt;i&gt;at_home&lt;/i&gt;变量区分工作与平时的邮箱,但不是每次我都记得要更新这个变量，所以有了这个需要，自动将文件头里的email信息更改为平时所用的邮箱，大致逻辑与自动更新Filename相同，所以我写了一个&lt;b&gt;macro&lt;/b&gt;来自动生成相关的代码&lt;/p&gt;

&lt;p&gt;直接给出代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/header-update-action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;A.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-beginning&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-end&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string=&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;match-string&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;delete-region&lt;/span&gt; &lt;span class="nv"&gt;beg&lt;/span&gt; &lt;span class="nv"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/header-update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;regex&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;B.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;save-excursion&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-min&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;looking-at&lt;/span&gt; &lt;span class="nv"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update-action&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;1+&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;forward-line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defmacro&lt;/span&gt; &lt;span class="nv"&gt;maple/header-update-engine&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="nv"&gt;regex&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt; &lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;C.&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;intern&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;maple/header-update-%s&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
     &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Update %s with regex.&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;line-limit&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样，我就可以调用&lt;b&gt;macro&lt;/b&gt;来生成代码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动更新Filename
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update-engine&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;quot;.*\\(File Name:\\)\\(.*\\)&amp;quot;&lt;/span&gt;
                            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;生成一个&lt;code&gt;maple/header-update-filename&lt;/code&gt;的函数,只要调用它即可更新文件名信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;自动更新email
&lt;p&gt;同样的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/header-update-engine&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;quot;.*\\(Email:\\)\\(.*\\)&amp;quot;&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;quot;youemail@gmail.com&amp;quot;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;生成一个可供调用的&lt;code&gt;maple/header-update-email&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果想要添加其它功能，只要使用&lt;code&gt;maple/header-update-engine&lt;/code&gt;即可&lt;/p&gt;

&lt;p&gt;相关的配置可以在我的&lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/site-lisp/header/header.el"&gt;github&lt;/a&gt;上找到&lt;/p&gt;</content><category term="linux"></category><category term="emacs"></category></entry><entry><title>emacs自动添加文件头</title><link href="http://honmaple.me/articles/2018/01/emacs%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E6%96%87%E4%BB%B6%E5%A4%B4.html" rel="alternate"></link><published>2018-01-08T15:08:51+08:00</published><updated>2018-03-16T13:50:32+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-01-08:/articles/2018/01/emacs自动添加文件头.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-93067416"&gt;基础使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-20215040"&gt;自定义文件头&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1181271"&gt;提取文件头公共信息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;想要在emacs中添加文件头有好几种方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接手打&lt;/li&gt;
&lt;li&gt;使用模板yasnippet&lt;/li&gt;
&lt;li&gt;使用header2&lt;/li&gt;
&lt;li&gt;使用内置的package &lt;b&gt;auto-insert&lt;/b&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;header2可能是最方便的一种自动添加文件头的方式，但我之前使用过，想要自定义自己想要的内容很难，而且白白浪费header2的功能&lt;/p&gt;

&lt;p&gt;今天主要说一说emacs内置里&lt;b&gt;auto-insert&lt;/b&gt;,使用它在创建文件时自动添加文件头信息&lt;/p&gt;

&lt;h3 id="org-93067416"&gt;基础使用&lt;/h3&gt;
&lt;p&gt;直接&lt;code&gt;(auto-insert-mode)&lt;/code&gt;
并且设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(setq auto-insert-query nil) ;; 不提醒
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="org-20215040"&gt;自定义文件头&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;auto-insert-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nv"&gt;python-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Python program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/usr/bin/env python\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# -*- coding: utf-8 -*-\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-93067416"&gt;基础使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-20215040"&gt;自定义文件头&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1181271"&gt;提取文件头公共信息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;想要在emacs中添加文件头有好几种方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接手打&lt;/li&gt;
&lt;li&gt;使用模板yasnippet&lt;/li&gt;
&lt;li&gt;使用header2&lt;/li&gt;
&lt;li&gt;使用内置的package &lt;b&gt;auto-insert&lt;/b&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;header2可能是最方便的一种自动添加文件头的方式，但我之前使用过，想要自定义自己想要的内容很难，而且白白浪费header2的功能&lt;/p&gt;

&lt;p&gt;今天主要说一说emacs内置里&lt;b&gt;auto-insert&lt;/b&gt;,使用它在创建文件时自动添加文件头信息&lt;/p&gt;

&lt;h3 id="org-93067416"&gt;基础使用&lt;/h3&gt;
&lt;p&gt;直接&lt;code&gt;(auto-insert-mode)&lt;/code&gt;
并且设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(setq auto-insert-query nil) ;; 不提醒
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="org-20215040"&gt;自定义文件头&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;auto-insert-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nv"&gt;python-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Python program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/usr/bin/env python\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# -*- coding: utf-8 -*-\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# File Name: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Author: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Email: &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Created: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Last Update: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#          By: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Description: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;c-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;/**************************************************************************\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; File Name: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Author: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Email: &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Created: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Last Update: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;           By: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; Description: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot; **************************************************************************/\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#include&amp;lt;stdio.h&amp;gt;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#include&amp;lt;string.h&amp;gt;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;sh-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Shell script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/bin/bash\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# File Name: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Author: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Email: &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Created: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Last Update: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#          By: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# Description: \n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# **************************************************************************/\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="org-1181271"&gt;提取文件头公共信息&lt;/h3&gt;
&lt;p&gt;之前的模板有很多重复的内容，写一个函数把公共的信息提取出来&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;基础信息
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple//insert-string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;make-string&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="sc"&gt;?*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Copyright © &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;File Name: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-name-nondirectory&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Author: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;user-full-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Email: &amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Created: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d %T (%Z)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Last Update: \n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;         By: \n&amp;quot;&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;Description: \n&amp;quot;&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;make-string&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="sc"&gt;?*&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;插入注释信息
&lt;p&gt;&amp;lt;2018-03-16 五&amp;gt;更新:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/insert-string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;^&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt; &lt;span class="nv"&gt;comment-start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple//insert-string&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;原代码:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;maple/insert-string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt; &lt;span class="nv"&gt;comment-start&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;mapconcat&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;split-string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple//insert-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;更改模板
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;auto-insert-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nv"&gt;ruby-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Ruby program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/usr/bin/env ruby\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# -*- encoding: utf-8 -*-\n&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;python-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Python program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/usr/bin/env python\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;# -*- coding: utf-8 -*-\n&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;c-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;/*&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*/\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#include&amp;lt;stdio.h&amp;gt;\n&amp;quot;&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#include&amp;lt;string.h&amp;gt;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;sh-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Shell script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;#!/bin/bash\n&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;go-mode&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Go program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
         &lt;span class="s"&gt;&amp;quot;/*&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string-trim-left&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maple/insert-string&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*/\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相关的配置可以在我的&lt;a href="https://github.com/honmaple/dotfiles/blob/master/emacs.d/lisp/init-auto-insert.el"&gt;github&lt;/a&gt;上找到&lt;/p&gt;</content><category term="linux"></category><category term="emacs"></category></entry><entry><title>helm与ivy简单对比</title><link href="http://honmaple.me/articles/2018/01/helm%E4%B8%8Eivy%E7%AE%80%E5%8D%95%E5%AF%B9%E6%AF%94.html" rel="alternate"></link><published>2018-01-06T17:31:27+08:00</published><updated>2018-01-26T01:12:26+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2018-01-06:/articles/2018/01/helm与ivy简单对比.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-69389234"&gt;counsel-find-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43876094"&gt;tab键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-80057801"&gt;记忆多个按键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-88766867"&gt;模糊搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1390253"&gt;候选词按使用频率排序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-31058300"&gt;minibuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-94661956"&gt;dired中复制或重命名文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-79565840"&gt;sudo edit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;我为什么放弃ivy回到了helm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;说一说ivy用的不爽的地方吧&lt;/p&gt;

&lt;h3 id="org-69389234"&gt;counsel-find-file&lt;/h3&gt;
&lt;p&gt;counsel-find-file作为最常用的命令,ivy竟然没有把默认的find-file进行覆写，比如我在dired中想要复制文件，我习惯使用&lt;code&gt;C-h&lt;/code&gt;退回上一个目录，但即使我之前已经设置了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;:map&lt;/span&gt; &lt;span class="nv"&gt;counsel-find-file-map&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C-h&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;counsel-up-directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但只有在使用&lt;code&gt;counsel-find-file&lt;/code&gt;时有效,类似dired中是无效的，相比较于&lt;code&gt;helm-find-files&lt;/code&gt;把&lt;code&gt;find-file&lt;/code&gt;进行覆写，无论何时都能使用自己自定义的按键，这很不爽&lt;/p&gt;

&lt;h3 id="org-43876094"&gt;tab键&lt;/h3&gt;
&lt;p&gt;在&lt;b&gt;helm&lt;/b&gt;中，tab仅作为补全使用，想要打开选中项，则需要按一下&lt;code&gt;enter&lt;/code&gt;键,而在&lt;b&gt;ivy&lt;/b&gt;中 …&lt;/p&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-69389234"&gt;counsel-find-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-43876094"&gt;tab键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-80057801"&gt;记忆多个按键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-88766867"&gt;模糊搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-1390253"&gt;候选词按使用频率排序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-31058300"&gt;minibuffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-94661956"&gt;dired中复制或重命名文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-79565840"&gt;sudo edit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;我为什么放弃ivy回到了helm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;说一说ivy用的不爽的地方吧&lt;/p&gt;

&lt;h3 id="org-69389234"&gt;counsel-find-file&lt;/h3&gt;
&lt;p&gt;counsel-find-file作为最常用的命令,ivy竟然没有把默认的find-file进行覆写，比如我在dired中想要复制文件，我习惯使用&lt;code&gt;C-h&lt;/code&gt;退回上一个目录，但即使我之前已经设置了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;:map&lt;/span&gt; &lt;span class="nv"&gt;counsel-find-file-map&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C-h&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;counsel-up-directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但只有在使用&lt;code&gt;counsel-find-file&lt;/code&gt;时有效,类似dired中是无效的，相比较于&lt;code&gt;helm-find-files&lt;/code&gt;把&lt;code&gt;find-file&lt;/code&gt;进行覆写，无论何时都能使用自己自定义的按键，这很不爽&lt;/p&gt;

&lt;h3 id="org-43876094"&gt;tab键&lt;/h3&gt;
&lt;p&gt;在&lt;b&gt;helm&lt;/b&gt;中，tab仅作为补全使用，想要打开选中项，则需要按一下&lt;code&gt;enter&lt;/code&gt;键,而在&lt;b&gt;ivy&lt;/b&gt;中，我不知道开发者怎么想的, &lt;b&gt;我需要记住两个或两个以上的按键&lt;/b&gt;。&lt;/p&gt;

&lt;p&gt;在ivy中，tab键就像命令名称&lt;code&gt;ivy-alt-done&lt;/code&gt;一样，意味着按一下tab,就能得到helm中tab and enter的效果。&lt;/p&gt;

&lt;p&gt;这很方便是不是？&lt;/p&gt;

&lt;p&gt;但是，如果我要在emacs中重命名一个文件，把&lt;b&gt;aaa.py&lt;/b&gt;重命名为&lt;b&gt;aaa.py.bak&lt;/b&gt;，这该怎么办，在helm中我可以很容易的重命名，因为tab只是补全，我在tab后输入&lt;b&gt;.bak&lt;/b&gt;然后enter就行，在ivy中，我得一个字符一个字符手打，或者记住其它按键补全选中项，然后才能重命名&lt;/p&gt;

&lt;h3 id="org-80057801"&gt;记忆多个按键&lt;/h3&gt;
&lt;p&gt;ivy有这样一个问题,它不会像helm一样在第一行显示用户输入的字符，在ivy的很多issue中都有人提了这个问题，如果当前目录下有名为&lt;b&gt;aaa&lt;/b&gt;的目录,这是我想要创建一个&lt;b&gt;aaa.py&lt;/b&gt;的文件，ivy会列出aaa这个目录，那是我该怎么创建aaa.py文件。方法是一个新的命令&lt;code&gt;ivy-immediate-done&lt;/code&gt;,而不是&lt;code&gt;ivy-alt-done&lt;/code&gt;&lt;/p&gt;

&lt;h3 id="org-88766867"&gt;模糊搜索&lt;/h3&gt;
&lt;p&gt;在helm中我可以很容易的使用模糊搜索，ivy中也一样，只要简单的设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;ivy-re-builders-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;ivy--regex-fuzzy&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但ivy中有这样一个问题，空格键不能在模糊匹配中使用，/汗，作为从helm转入ivy的人，经常会不经意间在输入时按下空格键，然后，What? ivy中搜索变成空了&lt;/p&gt;

&lt;h3 id="org-1390253"&gt;候选词按使用频率排序&lt;/h3&gt;
&lt;p&gt;helm默认支持，但在ivy中我需要安装&lt;b&gt;smex&lt;/b&gt;，只安装&lt;b&gt;smex&lt;/b&gt;，又不需要什么配置，文档也没有提供（这是我摸索出来的），有些莫名其妙&lt;/p&gt;

&lt;h3 id="org-31058300"&gt;minibuffer&lt;/h3&gt;
&lt;p&gt;这是我对ivy种草的原因，从&lt;b&gt;minibuffer&lt;/b&gt;中弹出待选项，多么帅气，哪里像helm，使用一个buffer作为弹出框，还带一个"丑丑"的&lt;b&gt;mode-line&lt;/b&gt;，但后面仔细研究后，才发现helm从当前buffer中弹出helm-buffer是多么明智的选择，视野不会移动到当前buffer以外的地方，尤其是在屏幕较大的时候&lt;/p&gt;

   &lt;div class="row"&gt;
     &lt;div class="col-md-6"&gt;
       &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2018/01/helm-buffer.png-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2018/01/helm-buffer.png-thumb" class="lazyload" /&gt;&lt;/a&gt;
     &lt;/div&gt;
     &lt;div class="col-md-6"&gt;
       &lt;a href="https://honmaple.b0.upaiyun.com/images/jpg/2018/01/ivy-minibuffer.png-show" data-fancybox="image"&gt;&lt;img data-src="https://honmaple.b0.upaiyun.com/images/jpg/2018/01/ivy-minibuffer.png-thumb" class="lazyload" /&gt;&lt;/a&gt;
     &lt;/div&gt;
   &lt;/div&gt;

&lt;h3 id="org-94661956"&gt;dired中复制或重命名文件&lt;/h3&gt;
&lt;p&gt;我之前想要复制或重命名一个文件，只要进入&lt;b&gt;dired&lt;/b&gt;中按&lt;code&gt;C&lt;/code&gt;或&lt;code&gt;R&lt;/code&gt;，然后选择目标就行，但不知道为什么，使用ivy时复制重命名总是报错，不成功(后面也没有继续折腾)&lt;/p&gt;

&lt;h3 id="org-79565840"&gt;sudo edit&lt;/h3&gt;
&lt;p&gt;我从&lt;b&gt;spacemacs&lt;/b&gt;中复制了一段代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;file/sudo-edit&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;p&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;fname&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;arg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;read-file-name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;File: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;find-file&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;cond&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;string-match-p&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;^/ssh:&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;with-temp-buffer&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;search-backward&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;last-match-end&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;last-ssh-hostname&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;string-match&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;@\\\([^:|]+\\\)&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt; &lt;span class="nv"&gt;last-match-end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;last-ssh-hostname&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;match-string&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;last-ssh-hostname&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;last-match-end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;match-end&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;|sudo:%s&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;last-ssh-hostname&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-string&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
           &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/sudo:root@localhost:&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;可以很容易地使用&lt;b&gt;sudo&lt;/b&gt;对文件进行进行编辑，但使用ivy时不成功，印象分又&lt;b&gt;-1&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;helm中也有用的不爽的地方，比如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有个header-line是什么鬼
&lt;p&gt;设置了&lt;code&gt;helm-display-header-line&lt;/code&gt;为&lt;code&gt;nil&lt;/code&gt;还是有，字体那么大，背景那么丑，显示出来干嘛，虽然后面设置&lt;code&gt;height&lt;/code&gt;为&lt;code&gt;0.1&lt;/code&gt;解决&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;在mode-line显示help信息干嘛
&lt;p&gt;我已經对helm很熟悉了，不需要这些help info，后面设置&lt;code&gt;spaceline-helm-help-p&lt;/code&gt;为&lt;code&gt;nil&lt;/code&gt;解决&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;multi source
&lt;p&gt;我不知道这对谁有用，反正对我没用&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;...
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，很多人提到的ivy速度要比helm快，这个就仁者见仁，智者见智了，如果说的是启动速度，我的emac配置已经优化为1s内启动，如果是弹出速度，我没有具体对比过，不过就个人而言，helm与ivy弹出速度感觉两者都差不多&lt;/p&gt;

&lt;p&gt;总之，helm大而全，ivy小而精，但helm有过多的为用户做出选择，ivy在细节上打磨的不太够，哪个用得爽就选谁吧，反正我用&lt;b&gt;helm&lt;/b&gt;!&lt;/p&gt;</content><category term="linux"></category><category term="emacs"></category></entry><entry><title>linux笔记</title><link href="http://honmaple.me/articles/2017/12/linux%20tips.html" rel="alternate"></link><published>2017-12-19T17:30:18+08:00</published><updated>2018-03-03T22:11:09+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-12-19:/articles/2017/12/linux tips.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-70878023"&gt;获取文件压缩后的md5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-51704095"&gt;zip打包排除文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-22042672"&gt;linux下gif播放&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-70878023"&gt;获取文件压缩后的md5&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar -cf - action_plugins/ group_vars/ | md5sum
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-51704095"&gt;zip打包排除文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;zip -r -x=.git/* -x=*.pyc ../release.py *
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-22042672"&gt;linux下gif播放&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;feh&lt;/b&gt;只支持静态文件,可用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;animate output.gif
&lt;/pre&gt;&lt;/div&gt;
</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-70878023"&gt;获取文件压缩后的md5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-51704095"&gt;zip打包排除文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-22042672"&gt;linux下gif播放&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;h2 id="org-70878023"&gt;获取文件压缩后的md5&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar -cf - action_plugins/ group_vars/ | md5sum
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-51704095"&gt;zip打包排除文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;zip -r -x=.git/* -x=*.pyc ../release.py *
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-22042672"&gt;linux下gif播放&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;feh&lt;/b&gt;只支持静态文件,可用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;animate output.gif
&lt;/pre&gt;&lt;/div&gt;
</content><category term="linux"></category></entry><entry><title>lua中匪夷所思的table长度</title><link href="http://honmaple.me/articles/2017/10/lua%E4%B8%AD%E5%8C%AA%E5%A4%B7%E6%89%80%E6%80%9D%E7%9A%84table%E9%95%BF%E5%BA%A6.html" rel="alternate"></link><published>2017-10-10T00:00:00+08:00</published><updated>2017-10-10T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-10-10:/articles/2017/10/lua中匪夷所思的table长度.html</id><summary type="html">
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 3&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 3&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;6&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 3&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 3&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;6&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;-- output: 6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Lua 5.3.4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;输出就是这么匪夷所思,所以, &lt;b&gt;不要在Lua的table中使用nil值，如果一个元素要删除，直接remove&lt;/b&gt;&lt;/p&gt;</content><category term="lua"></category></entry><entry><title>ansible快速部署加速方案</title><link href="http://honmaple.me/articles/2017/10/ansible%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E5%8A%A0%E9%80%9F%E6%96%B9%E6%A1%88.html" rel="alternate"></link><published>2017-10-08T00:00:00+08:00</published><updated>2017-10-08T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-10-08:/articles/2017/10/ansible快速部署加速方案.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-78088089"&gt;加速&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-6607177"&gt;问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-6356647"&gt;方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-74917925"&gt;目标&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-17337917"&gt;web界面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-28322063"&gt;任务队列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;ansible是基于Python的 &lt;b&gt;自动化部署&lt;/b&gt; 方案,但是目前只是通过命令行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ansible -i hosts all -a &amp;#39;uptime&amp;#39;
# or
ansible-playbook -i hosts playbook.yml -e &amp;#39;args&amp;#39; -t deploy
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;实现自动化部署.&lt;/p&gt;

&lt;p&gt;长此以往，虽然可以实现所谓的自动化，但产品业务线多且杂的情况下，项目很难维护，更不用说以文件为存储的表现形式很差,针对目前使用ansible的经验以及使用中的困难,可以针对性的提出一些解决方案&lt;/p&gt;

&lt;h2 id="org-78088089"&gt;加速&lt;/h2&gt;

&lt;h3 id="org-6607177"&gt;问题&lt;/h3&gt;
&lt;p&gt;自动化部署其中最大的障碍就是 &lt;b&gt;网络&lt;/b&gt; 的原因&lt;/p&gt;

&lt;p&gt;其中需要通过网络上传一些模板文件,有的甚至还需要上传一些压缩包,虽然说几MB的东西很快就能上传成功，但如果把这上传文件所需要的2秒乘以上百，上千台主机呢,更不用说ansible的表现形式就是一个任务一个任务的往下执行,假如在上传模板这一步卡住 …&lt;/p&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-78088089"&gt;加速&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-6607177"&gt;问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-6356647"&gt;方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-74917925"&gt;目标&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-17337917"&gt;web界面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-28322063"&gt;任务队列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;ansible是基于Python的 &lt;b&gt;自动化部署&lt;/b&gt; 方案,但是目前只是通过命令行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ansible -i hosts all -a &amp;#39;uptime&amp;#39;
# or
ansible-playbook -i hosts playbook.yml -e &amp;#39;args&amp;#39; -t deploy
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;实现自动化部署.&lt;/p&gt;

&lt;p&gt;长此以往，虽然可以实现所谓的自动化，但产品业务线多且杂的情况下，项目很难维护，更不用说以文件为存储的表现形式很差,针对目前使用ansible的经验以及使用中的困难,可以针对性的提出一些解决方案&lt;/p&gt;

&lt;h2 id="org-78088089"&gt;加速&lt;/h2&gt;

&lt;h3 id="org-6607177"&gt;问题&lt;/h3&gt;
&lt;p&gt;自动化部署其中最大的障碍就是 &lt;b&gt;网络&lt;/b&gt; 的原因&lt;/p&gt;

&lt;p&gt;其中需要通过网络上传一些模板文件,有的甚至还需要上传一些压缩包,虽然说几MB的东西很快就能上传成功，但如果把这上传文件所需要的2秒乘以上百，上千台主机呢,更不用说ansible的表现形式就是一个任务一个任务的往下执行,假如在上传模板这一步卡住(等待所有服务器上传成功),这时某台未模板化的服务器的某服务需要重启，是不是会出问题呢&lt;/p&gt;

&lt;h3 id="org-6356647"&gt;方案&lt;/h3&gt;
&lt;p&gt;针对这一问题,目前想到的解决方案如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;适当增加fork数&lt;/b&gt;
&lt;p&gt;目前fork数默认为50，可以适当增加&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;大文件使用内网(外网)下载&lt;/b&gt;
&lt;p&gt;从部署机上上传文件可能会出现这样那样的问题，尤其是上传到国外服务器时经常会出现ansible playbook的任务卡住问题(其实是正在以几KB/s的龟速运行)，所以其中大于xxMB的文件(压缩包)全部使用从远程服务器上下载方式,并且全部进行加密处理&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;把超过几百台服务器的节点分组多进程运行&lt;/b&gt;
&lt;p&gt;服务器一旦多了，对应任务的等待时间也就多了，所以将500台的节点分为十组，每组50台,使用多进程分别同时运行，这样可以有效减少任务等待时间,需要注意每组运行失败的服务器。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;把经常出问题或者网络不太好的节点放到最后运行&lt;/b&gt;
&lt;p&gt;像中国移动以及香港，国外的某些节点在运行ansible playbook的时候总会或多或少的出些问题,这些节点可以考虑放到最后,并且需要找出问题原因进行优化&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="org-74917925"&gt;目标&lt;/h2&gt;

&lt;h3 id="org-17337917"&gt;web界面&lt;/h3&gt;
&lt;p&gt;使用过ansible的同学一定知道ansible-tower，它是ansible的web方式部署，通过web界面就可以添加删除任务,并且运行ansible playbook,可惜，它是收费的 /捂脸&lt;/p&gt;

&lt;h3 id="org-28322063"&gt;任务队列&lt;/h3&gt;
&lt;p&gt;把ansible playbook放到任务队列里，由消费者去消费对应的任务&lt;/p&gt;

&lt;p&gt;未完待续...&lt;/p&gt;</content><category term="linux"></category><category term="ansible"></category></entry><entry><title>ansible-playbook中tasks单进程</title><link href="http://honmaple.me/articles/2017/09/ansible-playbook%E4%B8%ADtasks%E5%8D%95%E8%BF%9B%E7%A8%8B.html" rel="alternate"></link><published>2017-09-19T00:00:00+08:00</published><updated>2017-09-19T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-09-19:/articles/2017/09/ansible-playbook中tasks单进程.html</id><summary type="html">
&lt;p&gt;之前有一个需求,ansible-playbook中需要某一步单步执行,也就是说在有多台服务器时,某个任务只能一台服务器执行完后,另一台服务器才能执行,否者对应集群的服务会出问题&lt;/p&gt;

&lt;p&gt;这是一个很简单的需求,ansible中也有对应的实现, &lt;code&gt;--fork 1&lt;/code&gt; 或者 使用 &lt;code&gt;serial&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但是如果有人忘记加 &lt;code&gt;--fork 1&lt;/code&gt; 了呢，而且该任务是在子任务中，使用 &lt;b&gt;include&lt;/b&gt; 加载, &lt;code&gt;serial&lt;/code&gt; 关键字无法在某一特定任务中使用,只能与 &lt;b&gt;hosts&lt;/b&gt; 同级&lt;/p&gt;

&lt;p&gt;所幸，在这里 &lt;a href="https://www.bountysource.com/issues/26342862-support-for-serial-on-an-individual-task"&gt;https://www.bountysource.com/issues/26342862-support-for-serial-on-an-individual-task&lt;/a&gt; 找到了解决办法,使用 &lt;b&gt;delegate_to&lt;/b&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
  &lt;span class="c1"&gt;# serial: 1 would be the proper solution here, but …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">
&lt;p&gt;之前有一个需求,ansible-playbook中需要某一步单步执行,也就是说在有多台服务器时,某个任务只能一台服务器执行完后,另一台服务器才能执行,否者对应集群的服务会出问题&lt;/p&gt;

&lt;p&gt;这是一个很简单的需求,ansible中也有对应的实现, &lt;code&gt;--fork 1&lt;/code&gt; 或者 使用 &lt;code&gt;serial&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但是如果有人忘记加 &lt;code&gt;--fork 1&lt;/code&gt; 了呢，而且该任务是在子任务中，使用 &lt;b&gt;include&lt;/b&gt; 加载, &lt;code&gt;serial&lt;/code&gt; 关键字无法在某一特定任务中使用,只能与 &lt;b&gt;hosts&lt;/b&gt; 同级&lt;/p&gt;

&lt;p&gt;所幸，在这里 &lt;a href="https://www.bountysource.com/issues/26342862-support-for-serial-on-an-individual-task"&gt;https://www.bountysource.com/issues/26342862-support-for-serial-on-an-individual-task&lt;/a&gt; 找到了解决办法,使用 &lt;b&gt;delegate_to&lt;/b&gt;&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
  &lt;span class="c1"&gt;# serial: 1 would be the proper solution here, but that can only be set on play level&lt;/span&gt;
  &lt;span class="c1"&gt;# upstream issue: https://github.com/ansible/ansible/issues/12170&lt;/span&gt;
  &lt;span class="n"&gt;run_once&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;
  &lt;span class="n"&gt;with_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{{play_hosts}}&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;delegate_to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{{ item }}&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/bin/service restart&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="linux"></category><category term="ansible"></category></entry><entry><title>redis集群搭建</title><link href="http://honmaple.me/articles/2017/08/redis%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA.html" rel="alternate"></link><published>2017-08-13T00:00:00+08:00</published><updated>2017-08-13T00:00:00+08:00</updated><author><name>honmaple</name></author><id>tag:honmaple.me,2017-08-13:/articles/2017/08/redis集群搭建.html</id><summary type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-64662058"&gt;准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-98411540"&gt;创建集群&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-3945471"&gt;测试集群&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.redis.cn/topics/cluster-tutorial.html"&gt;参考资料&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Redis 集群是一个提供在多个Redis间&lt;b&gt;节点间共享数据&lt;/b&gt;的程序集&lt;/p&gt;

&lt;h2 id="org-64662058"&gt;准备&lt;/h2&gt;

&lt;p&gt;集群开始需要运行redis集群实例，而且要让集群正常运作至少需要三个主节点,这里创建六个节点，三个为主节点，三个为从节点,端口号分别为9001,9002,9003,9004,9005,9006&lt;/p&gt;

&lt;p&gt;并创建六个以端口号为名字的目录， 在每个目录中运行一个Redis实例&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p redis/9001
&lt;span class="nb"&gt;cd&lt;/span&gt; redis
mkdir &lt;span class="m"&gt;9002&lt;/span&gt;
mkdir &lt;span class="m"&gt;9003&lt;/span&gt;
mkdir &lt;span class="m"&gt;9004&lt;/span&gt;
mkdir &lt;span class="m"&gt;9005&lt;/span&gt;
mkdir &lt;span class="m"&gt;9006&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后将对应的配置&lt;b&gt;redis.conf&lt;/b&gt;放入相应的目录中(记得修改端口号)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;最小配置选项:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;port 9001 …&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;div id="table-of-contents"&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id="text-table-of-contents"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#org-64662058"&gt;准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-98411540"&gt;创建集群&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org-3945471"&gt;测试集群&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.redis.cn/topics/cluster-tutorial.html"&gt;参考资料&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Redis 集群是一个提供在多个Redis间&lt;b&gt;节点间共享数据&lt;/b&gt;的程序集&lt;/p&gt;

&lt;h2 id="org-64662058"&gt;准备&lt;/h2&gt;

&lt;p&gt;集群开始需要运行redis集群实例，而且要让集群正常运作至少需要三个主节点,这里创建六个节点，三个为主节点，三个为从节点,端口号分别为9001,9002,9003,9004,9005,9006&lt;/p&gt;

&lt;p&gt;并创建六个以端口号为名字的目录， 在每个目录中运行一个Redis实例&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p redis/9001
&lt;span class="nb"&gt;cd&lt;/span&gt; redis
mkdir &lt;span class="m"&gt;9002&lt;/span&gt;
mkdir &lt;span class="m"&gt;9003&lt;/span&gt;
mkdir &lt;span class="m"&gt;9004&lt;/span&gt;
mkdir &lt;span class="m"&gt;9005&lt;/span&gt;
mkdir &lt;span class="m"&gt;9006&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后将对应的配置&lt;b&gt;redis.conf&lt;/b&gt;放入相应的目录中(记得修改端口号)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;最小配置选项:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;port 9001
cluster-enabled yes
cluster-config-file node9001.conf
cluster-node-timeout 5000
appendonly yes
&lt;/pre&gt;&lt;/div&gt;

&lt;/blockquote&gt;

&lt;p&gt;然后就可以启动redis实例了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;redis-server redis/9001/redis.conf
redis-server redis/9002/redis.conf
redis-server redis/9003/redis.conf
redis-server redis/9004/redis.conf
redis-server redis/9005/redis.conf
redis-server redis/9006/redis.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;由于这个过程很简单而且重复,所以我写了一个脚本进行创建:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@cli.command&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nd"&gt;@click.option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@click.option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-p&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;redis.conf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;port {0}&lt;/span&gt;
&lt;span class="s1"&gt;cluster-enabled yes&lt;/span&gt;
&lt;span class="s1"&gt;cluster-config-file nodes{0}.conf&lt;/span&gt;
&lt;span class="s1"&gt;cluster-node-timeout 5000&lt;/span&gt;
&lt;span class="s1"&gt;appendonly yes&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;redis-server {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="org-98411540"&gt;创建集群&lt;/h2&gt;
&lt;p&gt;使用redis的官方脚本&lt;a href="https://github.com/antirez/redis/blob/unstable/src/redis-trib.rb"&gt;redis-trib&lt;/a&gt;进行创建&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ruby redis-trib.rb create --replicas &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9004 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9005 &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9006
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;或者接上面的脚本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;127.0.0.1:{}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ruby redis-trib.rb create --replicas 1 {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;b&gt;–replicas 1&lt;/b&gt;:表示为集群中的每个主节点创建一个从节点&lt;/p&gt;

&lt;p&gt;结果如图所示:
&lt;a href="https://images.honmaple.com/images/admin/show/2017/08/150264027839037.png" data-fancybox="image"&gt;&lt;img data-src="https://images.honmaple.com/images/admin/show/2017/08/150264027839037.png" class="lazyload" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;输入&lt;b&gt;yes&lt;/b&gt;
最后查看集群是否启动成功
&lt;a href="https://images.honmaple.com/images/admin/show/2017/08/150264059108046.png" data-fancybox="image"&gt;&lt;img data-src="https://images.honmaple.com/images/admin/show/2017/08/150264059108046.png" class="lazyload" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="org-3945471"&gt;测试集群&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;-c&lt;/b&gt; 选项以集群方式启动&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ redis-cli -c -p &lt;span class="m"&gt;7000&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; keys *
  &lt;span class="o"&gt;(&lt;/span&gt;empty list or &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; hello world
  OK
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; get hello
  &lt;span class="s2"&gt;&amp;quot;world&amp;quot;&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; hello1 world1
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;11613&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003
  OK
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003&amp;gt; get hello1
  &lt;span class="s2"&gt;&amp;quot;world1&amp;quot;&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; hello2 world2
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;7486&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002
  OK
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002&amp;gt; get hello2
  &lt;span class="s2"&gt;&amp;quot;world2&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;进入另一个实例&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ redis-cli -c -p &lt;span class="m"&gt;9002&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002&amp;gt; get hello
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;866&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001
  &lt;span class="s2"&gt;&amp;quot;world&amp;quot;&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9001&amp;gt; get hello1
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;11613&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003
  &lt;span class="s2"&gt;&amp;quot;world1&amp;quot;&lt;/span&gt;
  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9003&amp;gt; get hello2
  -&amp;gt; Redirected to slot &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;7486&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; located at &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9002
  &lt;span class="s2"&gt;&amp;quot;world2&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok,先这样&lt;/p&gt;</content><category term="linux"></category><category term="redis"></category></entry></feed>