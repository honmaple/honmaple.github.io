<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
  <title>紅楓吟 - index</title>
    <subtitle>风落花语风落天，花落风雨花落田.</subtitle>
  <link href="https://honmaple.me/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://honmaple.me/index.html"/>
  <generator uri="https://github.com/honmaple/snow">Snow</generator>
    <updated>Sat, 29 Apr 2023 01:18:34 +0000</updated>
  <id>https://honmaple.me</id>
    <entry xml:lang="zh">
      <title>基于Quasar实现一个树状表格TableTree</title>
      <link href="" rel="alternate"></link>
      <published>Sat, 29 Apr 2023 00:03:40 +0000</published>
      <updated>Sat, 29 Apr 2023 01:18:34 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/04/基于Quasar实现一个树状表格TableTree.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/04/基于Quasar实现一个树状表格TableTree.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&quot;https://quasar.dev/&quot;&gt;Quasar&lt;/a&gt; 是一个基于 &lt;code&gt;Vue3&lt;/code&gt; 的前端UI框架，使用的是 &lt;b&gt;Material Design&lt;/b&gt;, 对于国内而言(包括我)觉得确实不太好看，但因为之前使用的是 &lt;code&gt;Element-UI&lt;/code&gt;，大概是由于审美疲劳，此次升级我的后台管理UI，没有继续使用 &lt;code&gt;Vue3&lt;/code&gt; 版本的 &lt;code&gt;Element-Plus&lt;/code&gt;。 不久前我也是基于 &lt;code&gt;Quasar&lt;/code&gt; 开发了一个 Memos 客户端, 感觉效果还不错
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Quasar&lt;/code&gt; 默认没有树状表格的支持，但我觉得树状表格其实还挺重要的，尤其是在显示一些树状的数据，比如一个部门列表(打比方), 树状表格能够清晰的表明各部门之间的上下关系，目前我看实现树状表格的示例要么是基于 &lt;code&gt;qhierarchy&lt;/code&gt; (使用 &lt;code&gt;q-markup-table&lt;/code&gt; 实现，定制太困难), 要么就是实现方式太复杂 &lt;a href=&quot;https://forum.quasar-framework.org/topic/2428/tree-table-example&quot;&gt;tree-table-example&lt;/a&gt;, 所以我研究了一下，发现其实还挺简单的，故此记录...&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;实现一(废弃)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;实现二&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;最终实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&quot;https://quasar.dev/&quot;&gt;Quasar&lt;/a&gt; 是一个基于 &lt;code&gt;Vue3&lt;/code&gt; 的前端UI框架，使用的是 &lt;b&gt;Material Design&lt;/b&gt;, 对于国内而言(包括我)觉得确实不太好看，但因为之前使用的是 &lt;code&gt;Element-UI&lt;/code&gt;，大概是由于审美疲劳，此次升级我的后台管理UI，没有继续使用 &lt;code&gt;Vue3&lt;/code&gt; 版本的 &lt;code&gt;Element-Plus&lt;/code&gt;。 不久前我也是基于 &lt;code&gt;Quasar&lt;/code&gt; 开发了一个 Memos 客户端, 感觉效果还不错
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Quasar&lt;/code&gt; 默认没有树状表格的支持，但我觉得树状表格其实还挺重要的，尤其是在显示一些树状的数据，比如一个部门列表(打比方), 树状表格能够清晰的表明各部门之间的上下关系，目前我看实现树状表格的示例要么是基于 &lt;code&gt;qhierarchy&lt;/code&gt; (使用 &lt;code&gt;q-markup-table&lt;/code&gt; 实现，定制太困难), 要么就是实现方式太复杂 &lt;a href=&quot;https://forum.quasar-framework.org/topic/2428/tree-table-example&quot;&gt;tree-table-example&lt;/a&gt;, 所以我研究了一下，发现其实还挺简单的，故此记录
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;实现一(废弃)&lt;/h2&gt;
&lt;p&gt;
   虽然 &lt;code&gt;Quasar&lt;/code&gt; 没有树状表格的组件, 但 &lt;code&gt;q-table&lt;/code&gt; 默认是支持 &lt;code&gt;Expanding rows&lt;/code&gt; 的，所以我一开始的想法是使用这个功能实现一个递归的组件, 就像这样
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;row.id&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;row&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:status&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;status&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indent&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indent&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indentStyle&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indentStyle(indent)&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;index&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-for&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;(child, index) in row.children&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;status.expand&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indent&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indent + 1&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;child&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.row&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:status&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indent&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.indent&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indentStyle&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indentStyle(scope.indent)&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   而在父组件中调用只需要把原来的 &lt;code&gt;props&lt;/code&gt; 改成 &lt;code&gt;scope&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:body&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.row&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;auto-width&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-checkbox&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;sm&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status.selected&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-btn&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;round&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xs&amp;#34;&lt;/span&gt;
             &lt;span style=&quot;color:#a6e22e&quot;&gt;:icon&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status.expand ? &amp;#39;remove&amp;#39; : &amp;#39;add&amp;#39;&amp;#34;&lt;/span&gt;
             &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;click&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status.expand = !scope.status.expand&amp;#34;&lt;/span&gt;
             &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.row.children &amp;amp;&amp;amp; scope.row.children.length &amp;gt; 0&amp;#34;&lt;/span&gt; /&amp;gt;
      {{ scope.row.name }}
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;{{ scope.row.desc }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   但是后面发现表格在多选状态下无法和原有的表格选择进行联动，只能自己实现选中和取消选中的方法，虽然也能实现，当很麻烦，只好另寻其它方式
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;实现二&lt;/h2&gt;
&lt;p&gt;
   后面研究了一下 &lt;b&gt;Fernando2684&lt;/b&gt; 的实现方式, 虽然他的方式同样复杂，当实现原理其实很简单, 那就是修改原始数据，比如第二行需要进行展开，那我就在原来第二行的数据下把第二行的子数据追加上去，取消展开就把子数据删除，恢复原来的数据。有了这个原理后就好办了，我们可以利用 &lt;code&gt;Expanding rows&lt;/code&gt; 时用到的 &lt;code&gt;props.expand&lt;/code&gt; 参数来控制是否展开子数据, 然后利用计算属性动态的计算展开后的数据
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 表格模版
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-table&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;bordered&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;row-key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;separator&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;cell&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;selection&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;multiple&amp;#34;&lt;/span&gt;
       &lt;span style=&quot;color:#a6e22e&quot;&gt;-&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:rows&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.list&amp;#34;&lt;/span&gt;
       &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:rows&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;expandRows&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:expanded&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.expanded&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.selected&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:pagination&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.pagination&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:body&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;auto-width&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-checkbox&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;sm&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.selected&amp;#34;&lt;/span&gt; /&amp;gt;
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-btn&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;round&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xs&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#a6e22e&quot;&gt;:icon&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand ? &amp;#39;remove&amp;#39; : &amp;#39;add&amp;#39;&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;click&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand = !props.expand&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.row.children &amp;amp;&amp;amp; props.row.children.length &amp;gt; 0&amp;#34;&lt;/span&gt; /&amp;gt;
        {{ props.row.name }}
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;{{ props.row.desc }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-table&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 表格数据
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;ref&lt;/span&gt;({
    &lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;loading&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;,
    &lt;span style=&quot;color:#a6e22e&quot;&gt;pagination&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;sortBy&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;desc&amp;#39;&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;descending&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;rowsPerPage&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;rowsNumber&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;,
    }
})

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;expandRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;computed&lt;/span&gt;(() =&amp;gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;)
})
&lt;/pre&gt;
&lt;p&gt;
     这里提一嘴，&lt;code&gt;pagination.rowsPerPage&lt;/code&gt; 默认最好设置为0(不限制每页的数量, 但会由由后端控制返回的行数), 否则展开子数据后的数据会被放到第二页, 影响数据查看
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 动态计算展开后的数据
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; []
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; []
    &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;forEach&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt; =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;push&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;)
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;indexOf&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;) &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;) {
            &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;concat&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;))
        }
    })
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;
}
&lt;/pre&gt;
&lt;p&gt;
     注意，这里因为要递归计算多级子目录，所以不能直接在 &lt;code&gt;setup&lt;/code&gt; 上直接用 &lt;code&gt;const&lt;/code&gt; 定义
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 缩进：目前缩进确实有些问题，其中一个解决办法是原始数据会带有 &lt;code&gt;parent_id&lt;/code&gt; 字段，可以通过判断 &lt;code&gt;parent_id&lt;/code&gt; 大于0时增加缩进
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;最终实现&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/04/quasar-table-tree.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/04/quasar-table-tree.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;</content>
        <category term="Life/Coding"></category>
    </entry>
    <entry xml:lang="zh">
      <title>搭建Memos作为私人笔记</title>
      <link href="" rel="alternate"></link>
      <published>Fri, 10 Mar 2023 00:16:03 +0000</published>
      <updated>Thu, 06 Apr 2023 13:29:31 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/03/搭建Memos作为私人笔记.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/03/搭建Memos作为私人笔记.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
类似我之前实现的时间轴, 也是一个私人的说说或者是私人的微博，可以用来记录一些临时的想法或者分享某一时刻的精彩瞬间，毕竟数据在自己手上&lt;b&gt;相当酷不是&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;如何搭建&lt;/h2&gt;
&lt;p&gt;
   根据&lt;a href=&quot;https://github.com/usememos/memos&quot;&gt;memos文档&lt;/a&gt;, 搭建也非常简单, 直接使用 &lt;code&gt;docker&lt;/code&gt; 即可
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos neosmemo/memos:latest&lt;/pre&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;docker-compose&lt;/h2&gt;
&lt;p&gt;
   因为我需要和我之前的搭建好一些服务(&lt;b&gt;Blog&lt;/b&gt;, &lt;b&gt;DNS&lt;/b&gt;等)统一管理, 所以转成了 &lt;code&gt;docker-compose&lt;/code&gt; 配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;version&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;services&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;blog&lt;/span&gt;:
    ...
  &lt;span style=&quot;color:#66d9ef&quot;&gt;memos&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;image&lt;/span&gt;: neosmemo...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;如何搭建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;docker-compose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;nginx和https配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;移动端支持&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;FAQ&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.1&quot;&gt;重置密码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
类似我之前实现的时间轴, 也是一个私人的说说或者是私人的微博，可以用来记录一些临时的想法或者分享某一时刻的精彩瞬间，毕竟数据在自己手上&lt;b&gt;相当酷不是&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;如何搭建&lt;/h2&gt;
&lt;p&gt;
   根据&lt;a href=&quot;https://github.com/usememos/memos&quot;&gt;memos文档&lt;/a&gt;, 搭建也非常简单, 直接使用 &lt;code&gt;docker&lt;/code&gt; 即可
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos neosmemo/memos:latest&lt;/pre&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;docker-compose&lt;/h2&gt;
&lt;p&gt;
   因为我需要和我之前的搭建好一些服务(&lt;b&gt;Blog&lt;/b&gt;, &lt;b&gt;DNS&lt;/b&gt;等)统一管理, 所以转成了 &lt;code&gt;docker-compose&lt;/code&gt; 配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;version&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;services&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;blog&lt;/span&gt;:
    ...
  &lt;span style=&quot;color:#66d9ef&quot;&gt;memos&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;image&lt;/span&gt;: neosmemo/memos:latest
    &lt;span style=&quot;color:#66d9ef&quot;&gt;container_name&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;memos&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;ports&lt;/span&gt;:
      - &lt;span style=&quot;color:#ae81ff&quot;&gt;127.0&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;.0&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;.1&lt;/span&gt;:&lt;span style=&quot;color:#ae81ff&quot;&gt;8005&lt;/span&gt;:&lt;span style=&quot;color:#ae81ff&quot;&gt;5230&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;volumes&lt;/span&gt;:
      - ./memos:/var/opt/memos
    &lt;span style=&quot;color:#66d9ef&quot;&gt;network_mode&lt;/span&gt;: bridge&lt;/pre&gt;
&lt;p&gt;
   需要注意的是 &lt;code&gt;./memos&lt;/code&gt; 目录用来作为数据持久化
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;nginx和https配置&lt;/h2&gt;
&lt;p&gt;
   这也是和我之前的服务保持一致, 我的 &lt;code&gt;nginx&lt;/code&gt; 配置目录格式如下
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;/etc/nginx/
├── nginx.conf
├── conf.d
│   ├── default.conf
│   ├── upsteam.conf
│   ├── blog.conf
│   ├── cloud.conf
│   ├── ...
│   ├── memos.conf
│   └── ssl
│       ├── xxx.com.conf&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 使用 &lt;b&gt;HTTPS&lt;/b&gt; 连接
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;server&lt;/span&gt; {
    &lt;span style=&quot;color:#f92672&quot;&gt;listen&lt;/span&gt;       &lt;span style=&quot;color:#ae81ff&quot;&gt;80&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;listen&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;[::]:80&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;server_name&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;xxx.com&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;*.xxx.com&lt;/span&gt;;

    &lt;span style=&quot;color:#f92672&quot;&gt;location&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;/&lt;/span&gt; {
        &lt;span style=&quot;color:#f92672&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;301&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;https://&lt;/span&gt;$host$request_uri;
    }
    &lt;span style=&quot;color:#f92672&quot;&gt;location&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;^~&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;/.well-known/acme-challenge&lt;/span&gt; {
        &lt;span style=&quot;color:#f92672&quot;&gt;alias&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;/home/xxx/app/acme.sh/xxx.com/.well-known/acme-challenge&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;upstream&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;upstream&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;memos.xxx.com&lt;/span&gt; {
    &lt;span style=&quot;color:#f92672&quot;&gt;server&lt;/span&gt; 127.0.0.1:&lt;span style=&quot;color:#ae81ff&quot;&gt;8005&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;max_fails=3&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;fail_timeout=30s&lt;/span&gt;;
}&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;memos.conf&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;server&lt;/span&gt; {
    &lt;span style=&quot;color:#f92672&quot;&gt;listen&lt;/span&gt;       &lt;span style=&quot;color:#ae81ff&quot;&gt;443&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;ssl&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;listen&lt;/span&gt;       &lt;span style=&quot;color:#e6db74&quot;&gt;[::]:443&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;ssl&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;server_name&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;memos.xxx.com&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;include&lt;/span&gt;      &lt;span style=&quot;color:#e6db74&quot;&gt;/etc/nginx/conf.d/ssl/xxx.com.conf&lt;/span&gt;;

    &lt;span style=&quot;color:#f92672&quot;&gt;access_log&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;/home/xxx/app/logs/memos_nginx_access.log&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;error_log&lt;/span&gt;   &lt;span style=&quot;color:#e6db74&quot;&gt;/home/xxx/app/logs/memos_nginx_error.log&lt;/span&gt;;

    &lt;span style=&quot;color:#f92672&quot;&gt;location&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;/&lt;/span&gt; {
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_pass&lt;/span&gt;       &lt;span style=&quot;color:#e6db74&quot;&gt;http://memos.xxx.com&lt;/span&gt;;
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_redirect&lt;/span&gt;   &lt;span style=&quot;color:#66d9ef&quot;&gt;off&lt;/span&gt;;
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;Host&lt;/span&gt; $host;
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;X-Real-IP&lt;/span&gt; $remote_addr;
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;X-Forwarded-For&lt;/span&gt; $proxy_add_x_forwarded_for;
    }
}&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;添加DNS记录&lt;/b&gt;: 到 &lt;code&gt;CloudFlare&lt;/code&gt; 添加一个 &lt;code&gt;memos&lt;/code&gt; 的 &lt;b&gt;CNAME&lt;/b&gt; 记录到 &lt;code&gt;cname.xxx.com&lt;/code&gt;, 等待一分钟即可
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;添加SSL证书&lt;/b&gt;: 如果使用了 &lt;code&gt;CloudFlare&lt;/code&gt;, 这一步可以忽略。 因为我很早就建好了一个 &lt;code&gt;acme.sh&lt;/code&gt; 服务，现在可以使用它来增加一个证书，首先需要重启 &lt;code&gt;nginx&lt;/code&gt;， 生成证书前也可以使用 &lt;b&gt;dig memos.xxx.com&lt;/b&gt; 验证 &lt;code&gt;DNS&lt;/code&gt; 是否生效, 我这里使用的是 &lt;code&gt;webroot&lt;/code&gt; 方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker exec acme.sh --issue -d xxx.com -d www.xxx.com,memos.xxx.com -w /acme.sh/xxx.com --preferred-chain &amp;#34;ISRG&amp;#34; --server  letsencrypt&lt;/pre&gt;
&lt;p&gt;
     然后重启nginx
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;移动端支持&lt;/h2&gt;
&lt;p&gt;
   既然要记录一些临时的想法，肯定不能只有web平台，否则有了新想法，等打开浏览器，登录，然后输入，这时候想法早没了，虽然 &lt;code&gt;Memos&lt;/code&gt; 本身自带的web界面在手机浏览器上也能渲染得很好，但是有一个手机APP还是会更方便一些，目前有一个 &lt;a href=&quot;https://memos.moe&quot;&gt;memos.moe&lt;/a&gt; 可供使用，我也安装使用过，确实流畅，但还有一些基础功能比如资源管理和系统管理没有实现，为此，我自己写了一个 &lt;b&gt;专属APP&lt;/b&gt;, 添加了这一部分的实现
&lt;/p&gt;

   &lt;div class=&quot;row&quot; style=&quot;margin-top:15px;&quot;&gt;
     &lt;div class=&quot;col-sm-3&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos-app-01.jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos-app-01.jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;

     &lt;div class=&quot;col-sm-3&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos-app-02.jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos-app-02.jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;

     &lt;div class=&quot;col-sm-3&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos-app-03.jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos-app-03.jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;

     &lt;div class=&quot;col-sm-3&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos-app-04.jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos-app-04.jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;
   &lt;/div&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;FAQ&lt;/h2&gt;
&lt;h3 id=&quot;heading-5.1&quot;&gt;重置密码&lt;/h3&gt;
&lt;p&gt;
    升级到 &lt;code&gt;0.12.0&lt;/code&gt; 后无法登录，总是提示 &lt;code&gt;Incorrect login credentials&lt;/code&gt;, 因为使用的 &lt;code&gt;Docker&lt;/code&gt; 部署，找到挂载目录下的 &lt;code&gt;memos_prod.db&lt;/code&gt; 文件(&lt;b&gt;请先备份好&lt;/b&gt;), 我的机器上没有安装 &lt;code&gt;sqlite&lt;/code&gt;, 所以需要
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 拷贝到本地
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ scp xxx:~/app/memos/memos_prod.db ./&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 然后使用 &lt;code&gt;sqlite&lt;/code&gt; 打开文件并手动更新
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ sqlite3 memos_prod.db
SQLite version 3.32.2 2021-07-12 15:00:17
Enter &amp;#34;.help&amp;#34; for usage hints.
sqlite&amp;gt; select * from user;
...
sqlite&amp;gt; update user set password_hash=&amp;#34;$2a$14$ajq8Q7fbtFRQvXpdCq7Jcuy.Rx1h/L4J60Otx.gyNLbAYctGMJ9tK&amp;#34; where id=1;
sqlite&amp;gt; .quit&lt;/pre&gt;
&lt;p&gt;
      这时候密码会被设置成 &lt;b&gt;secret&lt;/b&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 覆盖原文件(需要先暂停服务)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ scp ./memos_prod.db xxx:~/app/memos/memos_prod.db&lt;/pre&gt;
&lt;p&gt;
      重启服务，重新登录后修改新密码即可
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Life"></category>
    </entry>
    <entry xml:lang="zh">
      <title>使用Github Actions自动打包Go项目</title>
      <link href="" rel="alternate"></link>
      <published>Mon, 06 Mar 2023 02:22:23 +0000</published>
      <updated>Mon, 06 Mar 2023 20:23:31 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/03/使用Github Actions自动打包Go项目.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/03/使用Github Actions自动打包Go项目.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   如果用过 &lt;b&gt;Gitlab Ci&lt;/b&gt;, 相信对此也非常熟悉，&lt;b&gt;GitHub Actions&lt;/b&gt; 是 &lt;b&gt;GitHub&lt;/b&gt; 推出的持续集成（Continuous Integration，简称 CI）服务，它提供了整套虚拟服务器环境，基于它可以进行构建、测试、打包、部署项目等等操作
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;快速开始(Quickstart)&lt;/h2&gt;
&lt;p&gt;
   在自己的 &lt;code&gt;Github&lt;/code&gt; 仓库中找到 &lt;code&gt;Actions&lt;/code&gt; 标签页
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/github-actions-01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/github-actions-01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   点击 &lt;code&gt;Configure&lt;/code&gt;, 此时会生成一个 &lt;code&gt;.github/workflow/go.yml&lt;/code&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# This workflow will build a golang project&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# For more information see: https://docs.github...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;快速开始(Quickstart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;多平台编译(Cross Compile)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.1&quot;&gt;交叉编译&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.2&quot;&gt;跨平台编译&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;发布(Release)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;FAQ&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.1&quot;&gt;version `GLIBC_2.33&amp;#39; not found&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   如果用过 &lt;b&gt;Gitlab Ci&lt;/b&gt;, 相信对此也非常熟悉，&lt;b&gt;GitHub Actions&lt;/b&gt; 是 &lt;b&gt;GitHub&lt;/b&gt; 推出的持续集成（Continuous Integration，简称 CI）服务，它提供了整套虚拟服务器环境，基于它可以进行构建、测试、打包、部署项目等等操作
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;快速开始(Quickstart)&lt;/h2&gt;
&lt;p&gt;
   在自己的 &lt;code&gt;Github&lt;/code&gt; 仓库中找到 &lt;code&gt;Actions&lt;/code&gt; 标签页
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/github-actions-01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/github-actions-01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   点击 &lt;code&gt;Configure&lt;/code&gt;, 此时会生成一个 &lt;code&gt;.github/workflow/go.yml&lt;/code&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# This workflow will build a golang project&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Go

&lt;span style=&quot;color:#66d9ef&quot;&gt;on&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;push&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;branches&lt;/span&gt;: [ &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;master&amp;#34;&lt;/span&gt; ]
  &lt;span style=&quot;color:#66d9ef&quot;&gt;pull_request&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;branches&lt;/span&gt;: [ &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;master&amp;#34;&lt;/span&gt; ]

&lt;span style=&quot;color:#66d9ef&quot;&gt;jobs&lt;/span&gt;:

  &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;runs-on&lt;/span&gt;: ubuntu-latest
    &lt;span style=&quot;color:#66d9ef&quot;&gt;steps&lt;/span&gt;:
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/checkout@v3
        - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Set up Go
          &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/setup-go@v3
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;go-version&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1.19&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Build
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go build -v ./...
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Test
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go test -v ./...&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;多平台编译(Cross Compile)&lt;/h2&gt;
&lt;h3 id=&quot;heading-3.1&quot;&gt;交叉编译&lt;/h3&gt;
&lt;p&gt;
    对于非 &lt;code&gt;CGO&lt;/code&gt; 项目，&lt;code&gt;Go&lt;/code&gt; 提供了一种十分方便的方式来进行交叉编译，只需要指定 &lt;code&gt;GOOS&lt;/code&gt; 和 &lt;code&gt;GOARCH&lt;/code&gt; 环境变量
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
  Mac下编译Linux, Windows平台的64位可执行程序：
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ CGO_ENABLED&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; GOOS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;linux GOARCH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;amd64 go build .
$ CGO_ENABLED&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; GOOS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;windows GOARCH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;amd64 go build .&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 Linux下编译Mac, Windows平台的64位可执行程序：
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ CGO_ENABLED&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; GOOS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;darwin GOARCH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;amd64 go build .
$ CGO_ENABLED&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; GOOS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;windows GOARCH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;amd64 go build .&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    同样的，我们可以在 &lt;code&gt;Gtihub Actions&lt;/code&gt; 中设置环境变量来编译非 &lt;code&gt;CGO&lt;/code&gt; 项目，这里需要使用 &lt;code&gt;matrix&lt;/code&gt; 策略，让我们基于不同的参数创建并行的任务，比如编译Go时指定不同的环境变量
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 首先编写任务
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;jobs&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;strategy&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;matrix&lt;/span&gt;:
        &lt;span style=&quot;color:#66d9ef&quot;&gt;goos&lt;/span&gt;: [linux, darwin]
        &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: [amd64]

    &lt;span style=&quot;color:#66d9ef&quot;&gt;runs-on&lt;/span&gt;: ubuntu-latest

    &lt;span style=&quot;color:#66d9ef&quot;&gt;steps&lt;/span&gt;:
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Checkout
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/checkout@v3
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Set up Go
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/setup-go@v3
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;go-version&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1.19&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Download dependencies
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go mod download
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Build
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go build -v -o snow .
        &lt;span style=&quot;color:#75715e&quot;&gt;# 指定编译时的环境变量&lt;/span&gt;
        &lt;span style=&quot;color:#66d9ef&quot;&gt;env&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;GOOS&lt;/span&gt;: ${{ matrix.goos }}
          &lt;span style=&quot;color:#66d9ef&quot;&gt;GOARCH&lt;/span&gt;: ${{ matrix.goarch }}
          &lt;span style=&quot;color:#66d9ef&quot;&gt;CGO_ENABLED&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
      这样就创建了 &lt;code&gt;GOOS=linux GOARCH=amd64&lt;/code&gt; 和 &lt;code&gt;GOOS=darwin GOARCH=amd64&lt;/code&gt; 的两个任务, 当 &lt;code&gt;goarch&lt;/code&gt; 增加一个 &lt;code&gt;arm&lt;/code&gt; 的参数后，会组合成四个任务, 如果需要指定或者排除某个选项，可以使用 &lt;code&gt;include&lt;/code&gt; 或者 &lt;code&gt;exclude&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;matrix&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;goos&lt;/span&gt;: [linux, darwin]
  &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: [amd64, arm]
  &lt;span style=&quot;color:#75715e&quot;&gt;# 只包括linux编译选项&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;include&lt;/span&gt;:
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;goos&lt;/span&gt;: linux
      &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: amd64
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;goos&lt;/span&gt;: linux
      &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: arm
  &lt;span style=&quot;color:#75715e&quot;&gt;# 排除所有关于arm的编译选项&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;exclude&lt;/span&gt;:
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: arm&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 然后执行 &lt;code&gt;git push&lt;/code&gt;, 这样就能在 &lt;code&gt;Github&lt;/code&gt; 的 &lt;code&gt;Actions&lt;/code&gt; 标签页看到执行结果
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-3.2&quot;&gt;跨平台编译&lt;/h3&gt;
&lt;p&gt;
    如果是非 &lt;code&gt;CGO&lt;/code&gt; 项目，可以使用Go内置的交叉编译，但如果是 &lt;code&gt;CGO&lt;/code&gt; 项目，上述的交叉编译大概率会失败(相关问题:&lt;a href=&quot;https://github.com/wellington/go-libsass/issues/67&quot;&gt;go-libsass&lt;/a&gt;)， 所以我们需要基于不同的平台来进行编译，幸运的是，&lt;code&gt;Github Actions&lt;/code&gt; 对此支持的非常好,
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 编写新任务
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;jobs&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;strategy&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;matrix&lt;/span&gt;:
        &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: [macos, linux]
        &lt;span style=&quot;color:#66d9ef&quot;&gt;include&lt;/span&gt;:
          - &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: macos
            &lt;span style=&quot;color:#66d9ef&quot;&gt;os&lt;/span&gt;: macos-latest
          - &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: linux
            &lt;span style=&quot;color:#66d9ef&quot;&gt;os&lt;/span&gt;: ubuntu&lt;span style=&quot;color:#ae81ff&quot;&gt;-18.04&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;runs-on&lt;/span&gt;: ${{ matrix.os }}
    &lt;span style=&quot;color:#66d9ef&quot;&gt;steps&lt;/span&gt;:
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Checkout
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/checkout@v3
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Set up Go
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/setup-go@v3
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;go-version&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1.19&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Download dependencies
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go mod download
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Build
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go build -v -o snow .
        &lt;span style=&quot;color:#66d9ef&quot;&gt;env&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;CGO_ENABLED&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
      注意 &lt;code&gt;runs-on&lt;/code&gt; 使用的 &lt;code&gt;matrix.os&lt;/code&gt; 变量, 它允许我们分别使用 &lt;code&gt;ubuntu-18.04&lt;/code&gt; 和 &lt;code&gt;macos-latest&lt;/code&gt; 两个平台进行编译，这时不用指定 &lt;code&gt;GOOS&lt;/code&gt; 和 &lt;code&gt;GOARCH&lt;/code&gt; 参数
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 执行 &lt;code&gt;git push&lt;/code&gt;, 可以看到执行结果
      
&lt;a href=&quot;https://s.libforest.com/images/2023/03/github-actions-02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/github-actions-02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;发布(Release)&lt;/h2&gt;
&lt;p&gt;
   当编译好一个二进制文件后，需要发布到 &lt;code&gt;Github&lt;/code&gt; 的 &lt;code&gt;Release&lt;/code&gt; 页，这时就需要添加新的任务, 目前官方的&lt;a href=&quot;https://github.com/actions/create-release&quot;&gt;actions/create-release&lt;/a&gt;已经无人维护，所以此次选择另外一个&lt;a href=&quot;https://github.com/ncipollo/release-action&quot;&gt;ncipollo/release-action&lt;/a&gt;
&lt;/p&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Release

&lt;span style=&quot;color:#66d9ef&quot;&gt;on&lt;/span&gt;:
  &lt;span style=&quot;color:#75715e&quot;&gt;# 只在预发布时才执行&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;release&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;types&lt;/span&gt;: [prereleased]

&lt;span style=&quot;color:#66d9ef&quot;&gt;jobs&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;strategy&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;matrix&lt;/span&gt;:
        &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: [macos, linux]
        &lt;span style=&quot;color:#66d9ef&quot;&gt;include&lt;/span&gt;:
          - &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: macos
            &lt;span style=&quot;color:#66d9ef&quot;&gt;os&lt;/span&gt;: macos-latest
            &lt;span style=&quot;color:#66d9ef&quot;&gt;archive-name&lt;/span&gt;: darwin.tar.gz
          - &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: linux
            &lt;span style=&quot;color:#66d9ef&quot;&gt;os&lt;/span&gt;: ubuntu-latest
            &lt;span style=&quot;color:#66d9ef&quot;&gt;archive-name&lt;/span&gt;: linux.tar.gz

    &lt;span style=&quot;color:#75715e&quot;&gt;# 需要设置写权限才能自动发布&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;permissions&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;contents&lt;/span&gt;: write

    &lt;span style=&quot;color:#66d9ef&quot;&gt;steps&lt;/span&gt;:
      ...
      &lt;span style=&quot;color:#75715e&quot;&gt;# 把二进制文件打包成压缩文件&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Prepare Packaging
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: tar zcvf snow-${{ matrix.archive-name }}.tar.gz snow LICENSE

      &lt;span style=&quot;color:#75715e&quot;&gt;# 上传附件&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Upload Artifacts
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/upload-artifact@v3
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: snow-${{ matrix.archive-name }}.tar.gz
          &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: snow-${{ matrix.archive-name }}.tar.gz

      &lt;span style=&quot;color:#75715e&quot;&gt;# 发布release版本&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Release version
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: ncipollo/release-action@v1
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt;: github.event_name == &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;release&amp;#39;&lt;/span&gt;
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;allowUpdates&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;
          &lt;span style=&quot;color:#66d9ef&quot;&gt;artifacts&lt;/span&gt;: snow-${{ matrix.archive-name }}.tar.gz
          &lt;span style=&quot;color:#66d9ef&quot;&gt;token&lt;/span&gt;: ${{ secrets.GITHUB_TOKEN }}&lt;/pre&gt;

&lt;p&gt;
   当 &lt;code&gt;Github Actions&lt;/code&gt; 执行完成后，就能在 &lt;code&gt;Release&lt;/code&gt; 页看到我们发布的 &lt;code&gt;Package&lt;/code&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/github-actions-03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/github-actions-03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;FAQ&lt;/h2&gt;
&lt;h3 id=&quot;heading-5.1&quot;&gt;version `GLIBC_2.33&amp;#39; not found&lt;/h3&gt;
&lt;p&gt;
    使用 &lt;code&gt;Github Actions&lt;/code&gt; 发布一个新的版本，下载到本地执行时报错
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;./snow: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.33&amp;#39; not found (required by ./snow)
./snow: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34&amp;#39; not found (required by ./snow)
./snow: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32&amp;#39; not found (required by ./snow)
./snow: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.29&amp;#39; not found (required by ./snow)&lt;/pre&gt;
&lt;p&gt;
    这是由于使用的 &lt;code&gt;ubuntu&lt;/code&gt; 版本太高导致, 降低版本即可
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;include:
...
&lt;span style=&quot;color:#f92672&quot;&gt;-   os: ubuntu-latest
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+   os: ubuntu-18.04
&lt;/span&gt;&lt;/pre&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs笔记之修复yaml-mode的格式化问题</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 21 Feb 2023 17:18:40 +0000</published>
      <updated>Sun, 26 Feb 2023 01:28:12 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/02/Emacs笔记之修复yaml-mode的格式化问题.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/02/Emacs笔记之修复yaml-mode的格式化问题.html</id>
      <summary type="html">
&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;更新时间&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2023-02-26&lt;/td&gt;
&lt;td&gt;增加更多判断逻辑, 比如上一行是列表，当前行也是列表，则按正常缩进计算&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;
一直以来 &lt;b&gt;yaml-mode&lt;/b&gt; 都有一个问题，在使用 &lt;code&gt;(indent-region (point-min) (point-max))&lt;/code&gt; 时已经格式好的内容总是会得到错误的缩进，比如一个简单的配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
在调用 &lt;code&gt;indent-regin&lt;/code&gt; 后就会变成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">
&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;更新时间&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2023-02-26&lt;/td&gt;
&lt;td&gt;增加更多判断逻辑, 比如上一行是列表，当前行也是列表，则按正常缩进计算&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;
一直以来 &lt;b&gt;yaml-mode&lt;/b&gt; 都有一个问题，在使用 &lt;code&gt;(indent-region (point-min) (point-max))&lt;/code&gt; 时已经格式好的内容总是会得到错误的缩进，比如一个简单的配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
在调用 &lt;code&gt;indent-regin&lt;/code&gt; 后就会变成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
而我又总是手痒，写好的配置文件总是会忍不住 &lt;code&gt;indent-region&lt;/code&gt; 一番，结果本来正确的格式立马变得各种乱七八糟，当初为了解决这个问题，还专门为 &lt;b&gt;yaml-mode&lt;/b&gt; 激活了 &lt;b&gt;lsp-mode&lt;/b&gt;, 并且使用 &lt;code&gt;lsp-format-buffer&lt;/code&gt; 来进行处理。
&lt;/p&gt;

&lt;p&gt;
本来一切都还正常，但最近发现了另外一个问题，如果在 &lt;b&gt;org-mode&lt;/b&gt; 中插入 &lt;b&gt;yaml&lt;/b&gt; 的代码片段，调用 &lt;code&gt;indent-region&lt;/code&gt; 还是还有之前的问题, &lt;b&gt;org-mode&lt;/b&gt; 中又无法直接调用 &lt;code&gt;lsp-format-buffer&lt;/code&gt;, 所以专门研究了一下 &lt;b&gt;yaml-mode&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
发现 &lt;b&gt;yaml-mode&lt;/b&gt; 只是定义了 &lt;code&gt;indent-line-function&lt;/code&gt; 变量，没有定义 &lt;code&gt;indent-region-function&lt;/code&gt;, 导致调用 &lt;code&gt;indent-region&lt;/code&gt; 时其实是逐行调用 &lt;code&gt;yaml-indent-line&lt;/code&gt;, 这里面有一个计算当前缩进的 &lt;code&gt;yaml-compute-indentation&lt;/code&gt; 函数，计算方式有些简单粗暴，如果上一行是一个 &lt;b&gt;hash key&lt;/b&gt;, 当前行的缩进就是上一行的缩进加 &lt;code&gt;yaml-indent-offset&lt;/code&gt; 的值, 这里并没有判断当前行是新建行还是已经有相关内容，如果是新建行那么缩进就是对的，如果是已有的内容就是错的，所以我修改了这一部分逻辑，如果是 &lt;b&gt;已有内容并且当前行的缩进小于上一行&lt;/b&gt; 则不进行处理, 比如:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
test3:&lt;/pre&gt;
&lt;p&gt;
虽然增加的判断逻辑很简单，但至少在使用 &lt;code&gt;indent-region&lt;/code&gt; 时已经格式好的内容就不会出现混乱的情况了, 也不用专门为 &lt;b&gt;yaml&lt;/b&gt; 文件激活一个 &lt;b&gt;lsp&lt;/b&gt; 进程。
&lt;/p&gt;

&lt;p&gt;
目前处理的方式还是采用 advice + letf 形式，否则需要修改很多内容，有兴趣的同道可以参考一下
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/yaml-compute-indentation()
  (let ((ci (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-indentation&lt;/span&gt;))
        (cm (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-hash-key-re))
        (cl (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;^&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;+.*$&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
    (save-excursion
      (&lt;span style=&quot;color:#a6e22e&quot;&gt;beginning-of-line&lt;/span&gt;)
      (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-document-delimiter-re) &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;-1&lt;/span&gt;)
        (while (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-blank-line-re)
                    (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;gt;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;point&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;point-min&lt;/span&gt;)))
          (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;-1&lt;/span&gt;))
        (let ((li (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-indentation&lt;/span&gt;))
              (ll (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;^&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;+.*$&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进大于当前行, 上一行是列表，当前行也是是列表 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进大于当前行, 上一行和当前行有一个不是列表 - 原有缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进等于当前行, 上一行是字典，当前行是列表 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进等于当前行, 上一行是字典，当前行是不是列表 - 原有缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进小于当前行, 上一行是字典 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进小于当前行, 上一行是列表，当前行也是列表 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进小于当前行, 上一行是列表，当前行是字典 - 错误/正常缩进&lt;/span&gt;
          (if (or (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;gt;&lt;/span&gt; li ci) (or (not cl) (not ll))) (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;=&lt;/span&gt; li ci) cm (not ll))) ci
            (&lt;span style=&quot;color:#a6e22e&quot;&gt;+&lt;/span&gt; li
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-nested-map-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-nested-sequence-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-block-literal-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;))))))))

(defun maple/yaml-indent-region(func &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;rest&lt;/span&gt; args)
  (if (derived-mode-p &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;yaml-mode&lt;/span&gt;)
      (letf (((&lt;span style=&quot;color:#a6e22e&quot;&gt;symbol-function&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;yaml-compute-indentation&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple/yaml-compute-indentation&lt;/span&gt;))
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; func args))
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; func args)))

(advice-add &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;indent-region&lt;/span&gt; :around &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple/yaml-indent-region&lt;/span&gt;)&lt;/pre&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>博客系统从Pelican迁移至Snow</title>
      <link href="" rel="alternate"></link>
      <published>Sun, 19 Feb 2023 20:00:10 +0000</published>
      <updated>Sat, 18 Mar 2023 22:36:35 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/02/博客系统从Pelican迁移至Snow.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/02/博客系统从Pelican迁移至Snow.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
上一次迁移博客系统还是在上一次。。。
哈哈，不开玩笑，上次迁移大概还是在七年前(2015.10), 不知不觉我的博客也建立快八年时间，如果算上动态博客可能都快十年了，虽然也没写多少篇(其实本地草稿都攒了快200篇了, 也没好好整理), 但好歹可以记录自己的生活和想法，之前使用的博客系统是基于 &lt;code&gt;Python&lt;/code&gt; 的 &lt;code&gt;Pelican&lt;/code&gt;, 此次将博客迁移至 &lt;a href=&quot;https://github.com/honmaple.com/snow&quot;&gt;snow&lt;/a&gt; —— &lt;b&gt;一个轻量，简洁的基于Go开发的静态博客生成器&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;迁移列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 内容文件(.md、.org、.html)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 静态文件(.css、.js、.scss等)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 配置文件(pelicanconf.py -&amp;gt; config.yaml)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 主题文件
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 分类功能(子分类)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 搜索功能
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 加密功能
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;内容文件&lt;/h2&gt;
&lt;p&gt;
   由于...&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;迁移列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;内容文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;文件头&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.1&quot;&gt;&lt;code&gt;.md&lt;/code&gt; 和 &lt;code&gt;.org&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.2&quot;&gt;&lt;code&gt;.html&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;忽略文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;静态文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.1&quot;&gt;favicon.ico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.2&quot;&gt;scss/css/js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;配置文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;主题文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.1&quot;&gt;分类功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.2&quot;&gt;子分类功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.3&quot;&gt;搜索功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.4&quot;&gt;加密功能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
上一次迁移博客系统还是在上一次。。。
哈哈，不开玩笑，上次迁移大概还是在七年前(2015.10), 不知不觉我的博客也建立快八年时间，如果算上动态博客可能都快十年了，虽然也没写多少篇(其实本地草稿都攒了快200篇了, 也没好好整理), 但好歹可以记录自己的生活和想法，之前使用的博客系统是基于 &lt;code&gt;Python&lt;/code&gt; 的 &lt;code&gt;Pelican&lt;/code&gt;, 此次将博客迁移至 &lt;a href=&quot;https://github.com/honmaple.com/snow&quot;&gt;snow&lt;/a&gt; —— &lt;b&gt;一个轻量，简洁的基于Go开发的静态博客生成器&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;迁移列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 内容文件(.md、.org、.html)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 静态文件(.css、.js、.scss等)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 配置文件(pelicanconf.py -&amp;gt; config.yaml)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 主题文件
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 分类功能(子分类)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 搜索功能
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 加密功能
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;内容文件&lt;/h2&gt;
&lt;p&gt;
   由于 &lt;code&gt;Snow&lt;/code&gt; 是我自己开发的, 功能上的实现本身就基于我原有的文件内容, 比如 &lt;code&gt;markdown&lt;/code&gt; 和 &lt;code&gt;orgmode&lt;/code&gt; 的支持，所以迁移上也很简单，有的甚至不用修改原有的内容
&lt;/p&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;文件头&lt;/h3&gt;
&lt;p&gt;
    原来的 &lt;code&gt;Pelican&lt;/code&gt; 使用三种文件头形式:
&lt;/p&gt;
&lt;h4 id=&quot;heading-2.1.1&quot;&gt;&lt;code&gt;.md&lt;/code&gt; 和 &lt;code&gt;.org&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;.md&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Title: 使用pelican搭建个人博客
Author: honmaple
Date: 2015-12-22
Category: Python
Tags: python,pelican
Slug: 使用pelican搭建个人博客

## pelican介绍&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;.org&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;#+TITLE&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: 私人密码库Bitwarden搭建&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+AUTHOR&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: honmaple&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+DATE&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: 2022-05-29 16:21:15&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+CATEGORY&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: Linux&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+PROPERTY&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: MODIFIED 2022-05-29 16:27:05&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+PROPERTY&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: TAGS linux,bitwarden&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+PROPERTY&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: SLUG 私人密码库Bitwarden搭建&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
     在 &lt;code&gt;Pelican&lt;/code&gt; 中的 &lt;code&gt;Author&lt;/code&gt; 和 &lt;code&gt;Category&lt;/code&gt; 是固定字段，如果需要指定多个可以使用英文逗号分隔，而在 &lt;code&gt;Snow&lt;/code&gt; 中这两个字段是可选或者说是可配置的，无法知道指定的字段是一个列表还是一个完整的单词，所以这里需要修改为
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- Category: Linux
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ categories: [Linux]
&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
     或者
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- #+PROPERTY: TAGS linux,bitwarden
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ #+PROPERTY: TAGS [linux,bitwarden]
&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
     而在 &lt;code&gt;markdown&lt;/code&gt; 中，因为 &lt;code&gt;Snow&lt;/code&gt; 支持类似 &lt;code&gt;Hugo&lt;/code&gt; 的文件头，如果想要一次性修改好，可以直接改成 &lt;code&gt;yaml&lt;/code&gt; 或者 &lt;code&gt;toml&lt;/code&gt; 格式
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;yaml&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;---
categories:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;-&lt;/span&gt; Linux
...
---&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;toml&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;+++
categories = [&amp;#34;Linux&amp;#34;]
...
+++&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
     除了修改原来的文件外，我还在 &lt;code&gt;Snow&lt;/code&gt; 中内置了一个 &lt;code&gt;pelican&lt;/code&gt; 插件，只要在配置里添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;hooks&lt;/span&gt;:
  - pelican
...&lt;/pre&gt;
&lt;p&gt;
     就能将 &lt;code&gt;Category&lt;/code&gt; 字段转成 &lt;code&gt;categories&lt;/code&gt; 列表, &lt;code&gt;Author&lt;/code&gt; 转成 &lt;code&gt;authors&lt;/code&gt; 列表, &lt;code&gt;Tags&lt;/code&gt; 转成 &lt;code&gt;tags&lt;/code&gt; 列表, 这样就不用修改原来的文件
&lt;/p&gt;

&lt;h4 id=&quot;heading-2.1.2&quot;&gt;&lt;code&gt;.html&lt;/code&gt;&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;html&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;head&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;title&lt;/span&gt;&amp;gt;Project&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;title&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;随意写写&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;2015-12-22&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;category&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;Life&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;authors&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;honmaple&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;slug&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;project&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;custom_css&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;/static/css/project.css&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;custom_js&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://cdn.bootcss.com/geopattern/1.2.3/js/geopattern.min.js&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;custom_js&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;/static/js/project.js&amp;#34;&lt;/span&gt; /&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;head&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;body&lt;/span&gt;&amp;gt;
    ...
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;p&gt;
     在 &lt;code&gt;html&lt;/code&gt; 文件中，原来的 &lt;code&gt;custom_css&lt;/code&gt; 和 &lt;code&gt;custom_js&lt;/code&gt; 两个字段主要用于自定义css和js，也是利用我开发的一个pelican插件，把多条记录合并成一个列表，在 &lt;code&gt;Snow&lt;/code&gt; 中，不用开发新的插件，但需要修改原来的内容
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- &amp;lt;meta name=&amp;#34;custom_css&amp;#34; content=&amp;#34;/static/css/project.css&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- &amp;lt;meta name=&amp;#34;custom_js&amp;#34; content=&amp;#34;https://cdn.bootcss.com/geopattern/1.2.3/js/geopattern.min.js&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- &amp;lt;meta name=&amp;#34;custom_js&amp;#34; content=&amp;#34;/static/js/project.js&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ &amp;lt;link type=&amp;#34;text/css&amp;#34; href=&amp;#34;/static/css/project.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://cdn.bootcss.com/geopattern/1.2.3/js/geopattern.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;/static/js/project.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
     这样就能得到两个类型为列表的变量 &lt;code&gt;custom_css&lt;/code&gt; 和 &lt;code&gt;custom_js&lt;/code&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;忽略文件&lt;/h3&gt;
&lt;p&gt;
    &lt;code&gt;Pelican&lt;/code&gt; 可以单独指定 &lt;code&gt;content/posts&lt;/code&gt; 和 &lt;code&gt;content/pages&lt;/code&gt;, 而在 &lt;code&gt;Snow&lt;/code&gt; 中 无法指定 &lt;code&gt;content&lt;/code&gt; 目录下的部分目录，但可以设置忽略文件, 这有两种方式
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 在需要忽略的目录下新建一个 &lt;code&gt;_index.md&lt;/code&gt;, 并指定 &lt;code&gt;ingore_files&lt;/code&gt; 字段
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;---
# 忽略整个目录
ignore_files: [&amp;#34;*&amp;#34;]
# 忽略目录下的README.md和所有js文件
ignore_files:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;-&lt;/span&gt; README.md
  &lt;span style=&quot;color:#66d9ef&quot;&gt;-&lt;/span&gt; *.js
---&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 在配置里设置 &lt;code&gt;sections.{目录名}.ignore_files&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;sections&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;drafts&lt;/span&gt;:
    &lt;span style=&quot;color:#75715e&quot;&gt;# 忽略{content_dir}/drafts目录&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;ignore_files&lt;/span&gt;: [&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;]&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;静态文件&lt;/h2&gt;
&lt;h3 id=&quot;heading-3.1&quot;&gt;favicon.ico&lt;/h3&gt;
&lt;p&gt;
    在 &lt;code&gt;Pelican&lt;/code&gt; 中，类似 &lt;code&gt;favicon.ico&lt;/code&gt;、&lt;code&gt;robots.txt&lt;/code&gt;、&lt;code&gt;CNAME&lt;/code&gt; 这些不需要修改的文件我原来是放到 &lt;code&gt;content/extra&lt;/code&gt; 目录，但在 &lt;code&gt;Snow&lt;/code&gt; 中，&lt;code&gt;content&lt;/code&gt; 目录下的所有文件都会视为页面文件或者页面的资源文件, 所以需要把extra目录下的文件移动到static目录下，并设置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;static_dirs&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/favicon.ico&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/CNAME&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/README.md&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/robots.txt&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;content/pages/css&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;static_paths&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;#34;static&amp;#34;: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;#34;content/pages/css&amp;#34;: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/css/&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;h3 id=&quot;heading-3.2&quot;&gt;scss/css/js&lt;/h3&gt;
&lt;p&gt;
    在 Python 中有一个专门处理静态文件的 &lt;a href=&quot;https://webassets.readthedocs.io/en/latest/&quot;&gt;webassets&lt;/a&gt;，在 Pelican 中也有一个插件&lt;a href=&quot;https://github.com/pelican-plugins/webassets&quot;&gt;https://github.com/pelican-plugins/webassets&lt;/a&gt;, 而在 &lt;code&gt;Snow&lt;/code&gt; 中同样支持静态文件的处理, 比如编译并压缩scss文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;params.assets.css&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;files&lt;/span&gt;:
    - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/common.scss&amp;#34;&lt;/span&gt;
    - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/entry.scss&amp;#34;&lt;/span&gt;
    - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/entry-tree.scss&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;filters&lt;/span&gt;:
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;libscss&lt;/span&gt;:
        &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: [&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;themes/snow/static/scss/&amp;#34;&lt;/span&gt;]
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;cssmin&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;output&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/lib/css/style.min.css&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
    其中 &lt;code&gt;filters&lt;/code&gt; 支持 libscss,cssmin,jsmin(js处理有些问题，不要使用)
&lt;/p&gt;

&lt;p&gt;
    然后就可以在模版里使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{%- assets &amp;#34;css&amp;#34; %}
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;link&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ config.site.url }}/{{ asset_url }}&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;rel&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt;&amp;gt;
{%- endassets %}&lt;/pre&gt;

&lt;h2 id=&quot;heading-4&quot;&gt;配置文件&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Pelican&lt;/code&gt; 使用 &lt;code&gt;pelicanconf.py&lt;/code&gt;, 而 &lt;code&gt;Snow&lt;/code&gt; 使用 &lt;code&gt;config.yaml&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;site&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;url&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;http://127.0.0.1:8000&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;title&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;紅楓吟&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;subtitle&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;风落花语风落天，花落风雨花落田.&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;language&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;zh&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;author&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;honmaple&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;logo_name&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;楓&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;mode.publish&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;site&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;url&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://honmaple.me&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;主题文件&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Snow&lt;/code&gt; 的模版系统使用的是 &lt;a href=&quot;https://github.com/flosch/pongo2&quot;&gt;https://github.com/flosch/pongo2&lt;/a&gt;, 从 &lt;code&gt;Pelican&lt;/code&gt; 使用的 &lt;code&gt;jinja2&lt;/code&gt; 迁移到 &lt;code&gt;pongo2&lt;/code&gt; 除了相关变量的修改和各种大写外，还有部分区别
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 loop: pongo2 使用的是 &lt;code&gt;forloop&lt;/code&gt;, 计数使用的 &lt;code&gt;forloop.Counter&lt;/code&gt;, 从1开始
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 marco: pongo2 想要加载并调用文件内的函数，需要添加 &lt;code&gt;export&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{%- macro archive_list(pages) export %}
...&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 super: pongo2 使用的是 &lt;code&gt;block.Super&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-5.1&quot;&gt;分类功能&lt;/h3&gt;
&lt;p&gt;
    在 &lt;code&gt;Pelican&lt;/code&gt; 中，可以使用 &lt;code&gt;page.tags[0].url&lt;/code&gt; 获取标签路径，而在 &lt;code&gt;Snow&lt;/code&gt; 中想要获取标签路径, 需要使用 &lt;code&gt;get_taxonomy_url&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{%- for name in page.Meta.Get(&amp;#34;tags&amp;#34;) %}
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ get_taxonomy_url(&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;tags&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;&amp;#34;&lt;/span&gt;&amp;gt;{{ name }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt;&amp;gt;
{%- endfor %}&lt;/pre&gt;

&lt;h3 id=&quot;heading-5.2&quot;&gt;子分类功能&lt;/h3&gt;
&lt;p&gt;
    原来的子分类是用我写的一个插件实现的，使用的是 &lt;code&gt;.&lt;/code&gt; 作为分隔，如 &lt;code&gt;Category: Life.Coding&lt;/code&gt;, 在 &lt;code&gt;Snow&lt;/code&gt; 中原生支持子分类, 只需要把 &lt;code&gt;.&lt;/code&gt; 改成 &lt;code&gt;/&lt;/code&gt;, 比如 &lt;code&gt;Python/Flask&lt;/code&gt; 和 &lt;code&gt;Python/Ansible/Jinja2&lt;/code&gt; 会创建如下分类系统
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;- Categories
  - Python
    - Flask
    - Ansible
      - Jinja2&lt;/pre&gt;
&lt;p&gt;
    我的博客导航栏的实现就是基于该功能
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{%- set categories = get_taxonomy(&amp;#34;categories&amp;#34;) %}
{%- if categories %}
  {%- for term in categories.Terms %}
    {%- if term.Children %}
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;dropdown&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ term.Permalink }}&amp;#34;&lt;/span&gt;&amp;gt;{{ _(term.Name) }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;ul&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;dropdown-menu&amp;#34;&lt;/span&gt;&amp;gt;
          {%- for child in term.Children %}
            &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ child.Permalink }}&amp;#34;&lt;/span&gt;&amp;gt;{{ _(child.Name) }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;
          {%- endfor %}
        &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;ul&lt;/span&gt;&amp;gt;
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;
    {%- else %}
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ term.Permalink }}&amp;#34;&lt;/span&gt;&amp;gt;{{ _(term.Name) }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;
    {%- endif %}
  {%- endfor %}
{%- endif %}&lt;/pre&gt;

&lt;h3 id=&quot;heading-5.3&quot;&gt;搜索功能&lt;/h3&gt;
&lt;p&gt;
    &lt;code&gt;Snow&lt;/code&gt; 本身没有自带搜索，但可以输出 json 文件
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;search.md&lt;/code&gt;
      首先在 &lt;code&gt;{content_dir}&lt;/code&gt; 目录下新建 &lt;code&gt;search.md&lt;/code&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;---
title: Search
path: search.html
template: search.html
filter: type=&amp;#34;posts&amp;#34;
paginate: 0
section: true
formats:
  json:
    path: &amp;#34;index.json&amp;#34;
    template: &amp;#34;search.json&amp;#34;
---&lt;/pre&gt;
&lt;p&gt;
      然后在字段 &lt;code&gt;formats&lt;/code&gt; 指定格式，路径和模版
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;search.json&lt;/code&gt;
      在 &lt;code&gt;{theme}/templates&lt;/code&gt; 目录下或者 &lt;code&gt;templates&lt;/code&gt; (配置文件同级目录下) 建立
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{- scratch.Set(&amp;#34;newjson&amp;#34;, slice()) | slient }}
{%- for page in pages %}
{{- scratch.Add(&amp;#34;newjson&amp;#34;, dict(&amp;#34;index&amp;#34;, forloop.Counter - 1, &amp;#34;permalink&amp;#34;, page.Permalink, &amp;#34;summary&amp;#34;, page.Summary, &amp;#34;title&amp;#34;, page.Title, &amp;#34;content&amp;#34;, page.Content | striptags)) | slient }}
{%- endfor %}
{{- scratch.JSON(&amp;#34;newjson&amp;#34;) | safe }}&lt;/pre&gt;
&lt;p&gt;
      当写入到 &lt;code&gt;/index.json&lt;/code&gt; 后就可以利用其它的搜索库比如 &lt;code&gt;lunr&lt;/code&gt; 来进行搜索
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-5.4&quot;&gt;加密功能&lt;/h3&gt;
&lt;p&gt;
    文章加密也是我不用 &lt;code&gt;Hugo&lt;/code&gt; 的一个重要原因，我不希望使用 &lt;code&gt;snow build&lt;/code&gt; 之前还需要使用另外的程序对内容进行一个预处理，所以在 &lt;code&gt;Snow&lt;/code&gt; 中，我内置了一个名为 &lt;code&gt;encrypt&lt;/code&gt; 的插件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;hooks&lt;/span&gt;:
  - encrypt
...&lt;/pre&gt;
&lt;p&gt;
    注册插件后就可以在内容文件里使用 &lt;code&gt;encrypt&lt;/code&gt; 的 shortcode代码，或者在模版里使用 &lt;code&gt;encrypt&lt;/code&gt; 函数
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 全局加密:
      只要在文件头添加 &lt;code&gt;passowd: xxx,hello world&lt;/code&gt;, 其中 &lt;code&gt;xxx&lt;/code&gt; 是输入的密码，&lt;code&gt;hello world&lt;/code&gt; 是显示的描述信息
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 局部加密:
      使用 shortcode 进行加密
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;encrypt&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;description&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;&amp;gt;
...
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 模版加密:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;
  {{ page.Content | encrypt:&amp;#34;xxx&amp;#34; }}
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    示例：&lt;a href=&quot;https://honmaple.me/articles/2018/03/%E4%B8%BApelican%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86%E5%8A%9F%E8%83%BD.html&quot;&gt;为pelican添加文章加密功能&lt;/a&gt;
&lt;/p&gt;</content>
        <category term="Life"></category>
    </entry>
    <entry xml:lang="zh">
      <title>静态博客中的shortcode实现</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 07 Feb 2023 15:57:51 +0000</published>
      <updated>Sun, 05 Mar 2023 11:28:44 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/02/静态博客中的shortcode实现.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/02/静态博客中的shortcode实现.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;b&gt;shortcode&lt;/b&gt;,直译过来就是 &lt;b&gt;短代码&lt;/b&gt;。 使用过 &lt;b&gt;hugo&lt;/b&gt; 的人对此也一定有所了解，&lt;b&gt;shortcode&lt;/b&gt; 允许用户使用部分关键参数就可以在文章内部插入设置好的HTML模版内容，而不用写大段的HTML代码，比如插入指定视频或者音乐,使用 &lt;b&gt;shortcode&lt;/b&gt; 之前需要使用 &lt;b&gt;iframe&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;frameborder&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;marginwidth&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;marginheight&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;330&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;86&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;//music.163.com...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;实现方式&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;Markdown渲染&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;查找HTML标签&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;替换HTML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;结尾&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;b&gt;shortcode&lt;/b&gt;,直译过来就是 &lt;b&gt;短代码&lt;/b&gt;。 使用过 &lt;b&gt;hugo&lt;/b&gt; 的人对此也一定有所了解，&lt;b&gt;shortcode&lt;/b&gt; 允许用户使用部分关键参数就可以在文章内部插入设置好的HTML模版内容，而不用写大段的HTML代码，比如插入指定视频或者音乐,使用 &lt;b&gt;shortcode&lt;/b&gt; 之前需要使用 &lt;b&gt;iframe&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;frameborder&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;marginwidth&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;marginheight&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;330&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;86&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=xxx&amp;amp;auto=0&amp;amp;height=66&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;p&gt;
   而使用 &lt;b&gt;shortcode&lt;/b&gt; 后就可以只用指定关键的 &lt;b&gt;id&lt;/b&gt; 参数
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;163music&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;xxx&lt;/span&gt;&amp;gt;}}&lt;/pre&gt;
&lt;p&gt;
   当网易云音乐的分享代码更新后，可以直接更新 &lt;b&gt;shortcode&lt;/b&gt; 代码, 而不是搜索替换每一篇包括该iframe代码的文章, 同时 &lt;b&gt;shortcode&lt;/b&gt; 也可以扩展 &lt;b&gt;Markdown&lt;/b&gt; 的功能，比如文本的居中，居左，居右
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;align&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;left&lt;/span&gt;&amp;gt;}}
  文本内容
  {{&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;align&lt;/span&gt;&amp;gt;}}&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;实现方式&lt;/h2&gt;
&lt;p&gt;
   而想要在静态博客中实现 &lt;b&gt;shortcode&lt;/b&gt; 功能, 目前有两种方式
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 方式一: 修改 &lt;b&gt;Markdown&lt;/b&gt; 解析器, 在静态生成器解析文章内容时就可以对 &lt;b&gt;shortcode&lt;/b&gt; 进行解析，并将 &lt;b&gt;shortcode&lt;/b&gt; 替换成写好的模版，至少，我看到 &lt;b&gt;hugo&lt;/b&gt; 就是这么实现的
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 方式二: 如果不想修改 &lt;b&gt;Markdown&lt;/b&gt; 解析器，还可以直接修改生成好的 &lt;b&gt;HTML&lt;/b&gt; 内容，这种方式实现原理很简单，&lt;b&gt;Markdown允许插入HTML代码&lt;/b&gt;, 那么我们就可以直接在文章中写一个
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;163music&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/pre&gt;
&lt;p&gt;
     然后在现有的 &lt;b&gt;Markdown&lt;/b&gt; 解析库解析文章并生成 &lt;b&gt;HTML&lt;/b&gt; 后再次对HTML内容进行解析，目前主流语言都有现成的库很方便地解析HTML内容, 下面以 &lt;b&gt;Go&lt;/b&gt; 为例
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;Markdown渲染&lt;/h3&gt;
&lt;p&gt;
    比如有一篇文章，我想要添加网易云音乐的某首歌到文章内部，当使用现有的Markdown库对内容进行渲染
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;github.com/russross/blackfriday/v2&amp;#34;&lt;/span&gt;
)

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;() {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Hello World
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;lt;shortcode _name=&amp;#34;163music&amp;#34; id=&amp;#34;xxx&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;This is one of my favorite **music**.
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;d&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;blackfriday&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Run&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;fmt&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Println&lt;/span&gt;(string(&lt;span style=&quot;color:#a6e22e&quot;&gt;d&lt;/span&gt;))
}&lt;/pre&gt;

&lt;p&gt;
    输出结果
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;Hello World&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;163music&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt; /&amp;gt;
  This is one of my favorite &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;music&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;查找HTML标签&lt;/h3&gt;
&lt;p&gt;
    可以使用 &lt;code&gt;golang.org/x/net/html&lt;/code&gt; 对HTML内容进行解析, 并查找到 &lt;b&gt;shortcode&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;bytes&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;github.com/russross/blackfriday/v2&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;golang.org/x/net/html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;text/template&amp;#34;&lt;/span&gt;
)

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;() {
    &lt;span style=&quot;color:#75715e&quot;&gt;// ...
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;var&lt;/span&gt; (
        &lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Buffer&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;z&lt;/span&gt; = &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;NewTokenizer&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;NewReader&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;d&lt;/span&gt;))
    )
    &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;next&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;z&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Next&lt;/span&gt;()
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;next&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;ErrorToken&lt;/span&gt; {
            &lt;span style=&quot;color:#66d9ef&quot;&gt;break&lt;/span&gt;
        }

        &lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;z&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Token&lt;/span&gt;()
        &lt;span style=&quot;color:#66d9ef&quot;&gt;switch&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;next&lt;/span&gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;StartTagToken&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;SelfClosingTagToken&lt;/span&gt;:
            &lt;span style=&quot;color:#75715e&quot;&gt;// 找到shortcode标签
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;            &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Data&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;shortcode&amp;#34;&lt;/span&gt; {

            }
        }
        &lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;WriteString&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;String&lt;/span&gt;())
    }
    &lt;span style=&quot;color:#a6e22e&quot;&gt;fmt&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Println&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;String&lt;/span&gt;())
}&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.3&quot;&gt;替换HTML&lt;/h3&gt;
&lt;p&gt;
    首先把需要替换的 &lt;b&gt;iframe&lt;/b&gt; 转换成模版
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;replace&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;lt;iframe
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;frameborder=&amp;#34;no&amp;#34; border=&amp;#34;0&amp;#34;
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;marginwidth=&amp;#34;0&amp;#34; marginheight=&amp;#34;0&amp;#34;
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;width=330 height=86
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;src=&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;{{&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;.id&lt;/span&gt; &lt;span style=&quot;color:#75715e&quot;&gt;}}&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;amp;auto=0&amp;amp;height=66&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;

&lt;span style=&quot;color:#a6e22e&quot;&gt;tmpl&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;template&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;New&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;).&lt;span style=&quot;color:#a6e22e&quot;&gt;Parse&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;replace&lt;/span&gt;)
&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; {
    panic(&lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt;)
}&lt;/pre&gt;

&lt;p&gt;
    然后根据标签参数替换原来的HTML
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// 获取该标签的参数
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; make(&lt;span style=&quot;color:#66d9ef&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;)
&lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;attr&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;range&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Attr&lt;/span&gt; {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt;[&lt;span style=&quot;color:#a6e22e&quot;&gt;attr&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Key&lt;/span&gt;] = &lt;span style=&quot;color:#a6e22e&quot;&gt;attr&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Val&lt;/span&gt;
}
&lt;span style=&quot;color:#75715e&quot;&gt;// 确认是163music
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt;[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;_name&amp;#34;&lt;/span&gt;] &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;163music&amp;#34;&lt;/span&gt; {
    &lt;span style=&quot;color:#75715e&quot;&gt;// 获取替换的内容
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;buf&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Buffer&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;tmpl&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Execute&lt;/span&gt;(&lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;buf&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt;)
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; {
        panic(&lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt;)
    }
    &lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;WriteString&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;buf&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;String&lt;/span&gt;())
    &lt;span style=&quot;color:#66d9ef&quot;&gt;continue&lt;/span&gt;
}&lt;/pre&gt;

&lt;p&gt;
    最后的输出结果
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;Hello World&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;frameborder&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;marginwidth&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;marginheight&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;330&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;86&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=xxx&amp;amp;auto=0&amp;amp;height=66&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt;&amp;gt;
  This is one of my favorite &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;music&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;结尾&lt;/h2&gt;
&lt;p&gt;
   目前&lt;a href=&quot;https://github.com/honmaple/snow&quot;&gt;snow&lt;/a&gt;的 &lt;b&gt;shortcode&lt;/b&gt; 功能就是根据第二种方式实现的，具体可以参考 &lt;a href=&quot;https://github.com/honmaple/snow/blob/master/builder/hook/shortcode/shortcode.go&quot;&gt;hooks/shortcode/shortcode.go&lt;/a&gt;, 利用此特性甚至还可以实现类似 &lt;b&gt;Hugo&lt;/b&gt; 中的 &lt;b&gt;Markdown Render Hook&lt;/b&gt; 功能,用于自定义 &lt;code&gt;img&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt; 等标签
&lt;/p&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>MacOS适配2K显示器</title>
      <link href="" rel="alternate"></link>
      <published>Thu, 24 Nov 2022 17:19:45 +0000</published>
      <updated>Thu, 24 Nov 2022 18:13:59 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2022/11/MacOS适配2K显示器.html" type="text/html"/>
      <id>https://honmaple.me/articles/2022/11/MacOS适配2K显示器.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
最近购买了一个2K显示器，到手后才发现macos默认对2K分辨率支持不足，导致字体很小，无法像windows对字体进行缩放，尤其是终端字体，简直不忍直视。网上一搜才知道，这已经是陈年问题，网上也有很多解决办法，本次采用 &lt;b&gt;BetterDisplay&lt;/b&gt; 开启 &lt;b&gt;HiDPI&lt;/b&gt;， 不用关闭 &lt;b&gt;SIP&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;
   安装可以直接从 &lt;a href=&quot;https://github.com/waydabber/BetterDisplay&quot;&gt;BetterDisplay&lt;/a&gt; 下载，手动安装，不过我推荐使用 &lt;b&gt;brew&lt;/b&gt; 安装，这样对于软件的管理也更方便
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;──╼ brew info BetterDisplay
==&amp;gt; betterdisplay: 1.3.4 (auto_updates)
https://betterdisplay.pro/
/usr/local/Caskroom/betterdisplay/1.3.4 (127B)
From: https...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
最近购买了一个2K显示器，到手后才发现macos默认对2K分辨率支持不足，导致字体很小，无法像windows对字体进行缩放，尤其是终端字体，简直不忍直视。网上一搜才知道，这已经是陈年问题，网上也有很多解决办法，本次采用 &lt;b&gt;BetterDisplay&lt;/b&gt; 开启 &lt;b&gt;HiDPI&lt;/b&gt;， 不用关闭 &lt;b&gt;SIP&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;
   安装可以直接从 &lt;a href=&quot;https://github.com/waydabber/BetterDisplay&quot;&gt;BetterDisplay&lt;/a&gt; 下载，手动安装，不过我推荐使用 &lt;b&gt;brew&lt;/b&gt; 安装，这样对于软件的管理也更方便
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;──╼ brew info BetterDisplay
==&amp;gt; betterdisplay: 1.3.4 (auto_updates)
https://betterdisplay.pro/
/usr/local/Caskroom/betterdisplay/1.3.4 (127B)
From: https://mirrors.ustc.edu.cn/homebrew-cask.git
==&amp;gt; Name
BetterDisplay
==&amp;gt; Description
Display management tool
==&amp;gt; Artifacts
BetterDisplay.app (App)
==&amp;gt; Analytics
install: 553 (30 days), 1,329 (90 days), 2,166 (365 days)
──╼ brew install betterdisplay&lt;/pre&gt;
&lt;p&gt;
   安装后打开可能会提示更新，忽略即可
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;配置&lt;/h2&gt;
&lt;p&gt;
   在菜单栏选择 &lt;b&gt;betterdisplay&lt;/b&gt; -&amp;gt; &lt;b&gt;点击齿轮(设置)&lt;/b&gt; -&amp;gt; &lt;b&gt;Displays&lt;/b&gt;, 然后选择显示器，比如我这选择 &lt;b&gt;AG273QG3R3B&lt;/b&gt;, &lt;b&gt;Color LCD&lt;/b&gt; 则是笔记本自带屏幕
&lt;/p&gt;

&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/macos-hidpi-02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/macos-hidpi-02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   勾选 &lt;code&gt;Edit the default system configuration of this display&lt;/code&gt; 和 &lt;code&gt;Set up native smooth resolution scaling&lt;/code&gt;, 然后点击 &lt;b&gt;Apply Changes&lt;/b&gt; 按钮, 输入管理员密码并且重启, 重启完成后选择 &lt;b&gt;系统设置&lt;/b&gt; -&amp;gt; &lt;b&gt;显示器&lt;/b&gt;, 选择适合自己的分辨率(这里发现只能选择4种，更多分辨率可通过betterdisplay设置)
&lt;/p&gt;

&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/macos-hidpi-03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/macos-hidpi-03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;</content>
        <category term="Life"></category>
    </entry>
    <entry xml:lang="zh">
      <title>人生中的第一台组装电脑</title>
      <link href="" rel="alternate"></link>
      <published>Fri, 04 Nov 2022 19:32:45 +0000</published>
      <updated>Mon, 12 Dec 2022 13:31:59 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2022/11/人生中的第一台组装电脑.html" type="text/html"/>
      <id>https://honmaple.me/articles/2022/11/人生中的第一台组装电脑.html</id>
      <summary type="html">
&lt;p&gt;
前两天双11，终于是给自己配了人生中的第一台台式电脑，从毕业后就一直想要一台属于自己的机器(游戏机)，犹记得人生中的第一台电脑还是上大学时买的，虽然只是3000多，720m的显卡，但它陪伴了我6年多时间，曾经使用它学习编程，娱乐，算是我的导师和娱乐伙伴，后来毕业后才购买了一台macbook pro，一直陪伴我至今。
&lt;/p&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;配件选购&lt;/h1&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;配件&lt;/th&gt;
&lt;th&gt;型号&lt;/th&gt;
&lt;th&gt;价格&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;12600KF&lt;/td&gt;
&lt;td&gt;1535.65&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;主板&lt;/td&gt;
&lt;td&gt;微星B660M迫击炮WIFI&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显卡&lt;/td&gt;
&lt;td&gt;七彩虹3070 ULTRA W&lt;/td&gt;
&lt;td&gt;4490.7(+主板)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电源&lt;/td&gt;
&lt;td&gt;海韵GX750&lt;/td&gt;
&lt;td&gt;627.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;机箱&lt;/td&gt;
&lt;td&gt;乔思伯D30 白色&lt;/td&gt;
&lt;td&gt;317.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;散热&lt;/td&gt;
&lt;td&gt;利民PA120 白色&lt;/td&gt;
&lt;td&gt;185&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SSD&lt;/td&gt;
&lt;td&gt;宏碁GM7000 1T&lt;/td&gt;
&lt;td&gt;605.7...&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;配件选购&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;CPU和主板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;显卡&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.3&quot;&gt;显示器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.4&quot;&gt;机箱和散热&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;装机&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;硬件组装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;BIOS设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;系统安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4&quot;&gt;一次点亮&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;
前两天双11，终于是给自己配了人生中的第一台台式电脑，从毕业后就一直想要一台属于自己的机器(游戏机)，犹记得人生中的第一台电脑还是上大学时买的，虽然只是3000多，720m的显卡，但它陪伴了我6年多时间，曾经使用它学习编程，娱乐，算是我的导师和娱乐伙伴，后来毕业后才购买了一台macbook pro，一直陪伴我至今。
&lt;/p&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;配件选购&lt;/h1&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;配件&lt;/th&gt;
&lt;th&gt;型号&lt;/th&gt;
&lt;th&gt;价格&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;12600KF&lt;/td&gt;
&lt;td&gt;1535.65&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;主板&lt;/td&gt;
&lt;td&gt;微星B660M迫击炮WIFI&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显卡&lt;/td&gt;
&lt;td&gt;七彩虹3070 ULTRA W&lt;/td&gt;
&lt;td&gt;4490.7(+主板)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电源&lt;/td&gt;
&lt;td&gt;海韵GX750&lt;/td&gt;
&lt;td&gt;627.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;机箱&lt;/td&gt;
&lt;td&gt;乔思伯D30 白色&lt;/td&gt;
&lt;td&gt;317.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;散热&lt;/td&gt;
&lt;td&gt;利民PA120 白色&lt;/td&gt;
&lt;td&gt;185&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SSD&lt;/td&gt;
&lt;td&gt;宏碁GM7000 1T&lt;/td&gt;
&lt;td&gt;605.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内存&lt;/td&gt;
&lt;td&gt;光威天策3600 8G*2&lt;/td&gt;
&lt;td&gt;268&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;风扇&lt;/td&gt;
&lt;td&gt;乔思伯ZF120三联&lt;/td&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;键盘&lt;/td&gt;
&lt;td&gt;京东京造K3&lt;/td&gt;
&lt;td&gt;340.98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;音响&lt;/td&gt;
&lt;td&gt;漫步者S880&lt;/td&gt;
&lt;td&gt;788.24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显示器&lt;/td&gt;
&lt;td&gt;AOC 273QXP/D&lt;/td&gt;
&lt;td&gt;1768.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;U盘&lt;/td&gt;
&lt;td&gt;闪迪酷豆32G&lt;/td&gt;
&lt;td&gt;26.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;
  &lt;b&gt;总计：11066.77&lt;/b&gt;, 因为是第一次配电脑，所以全部都是在京东购买，也许PDD会更便宜，但电子产品还是更信任京东
&lt;/p&gt;

&lt;p&gt;
  
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-family.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-family.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-1.1&quot;&gt;CPU和主板&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;CPU&lt;/b&gt;:  主要在12400，12400F，12490F和12600KF中选，由于想要性能更强一些，价格也要适中的，124xx性能稍弱，13600KF刚发布价格还有些贵，所以选了12600KF，至于为什么要选择带F(不带核显)的CPU，因为我第一台笔记本就是带双显卡，windows下还好，基本不用折腾，但是如果安装Linux，双显卡却非常麻烦，至今还记得大黄蜂(&lt;b&gt;bumblebee&lt;/b&gt;)和当初想要在Linux下玩游戏而折腾的岁月
&lt;/p&gt;

&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-cpu.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-cpu.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;主板&lt;/b&gt;: 主板基本上就是在微星迫击炮和华硕重炮手中选，主要是想要带WIFI的主板，这样就不用再单独购买WIFI模块，后面看了评测，说是重炮手的显卡插槽会更靠下一些，由于我购买的是MATX机箱，所以选了迫击炮，至于为什么选了带K的CPU却又选了不能超频的主板，只能说如果有12600F我是相当愿意的
&lt;/p&gt;

&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-board.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-board.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-1.2&quot;&gt;显卡&lt;/h2&gt;
&lt;p&gt;
   由于众所周知的原因，最近几年的显卡市场只能说是一言难尽，除3050之外的30系显卡都是矿卡重灾区，京东上显卡的价格也是一直居高不下，618前，我基本上只敢看一下3060和3060TI，还好后面停止挖矿，显卡价格稍微所有下降，才选择七彩虹这款3070 ULTRA W，虽然这款显卡只能算是低端，但它是白色(漂亮)的啊，其它白色的显卡像铭瑄3070TI瑷珈在双11前后就一直没货，花嫁听说叫声有点大，我怕玩游戏时别人误会。。。而有一款黑色的红魔6750虽然早早加入购物车，但31号晚上只关注了其他硬件，导致错过了24xx的好价，真是心痛到无法呼(fu)吸
&lt;/p&gt;

&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-gpu.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-gpu.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-1.3&quot;&gt;显示器&lt;/h2&gt;
&lt;p&gt;
   显示器主要关注27寸高刷，所以备选LG 850，LG 83B，AOC 273QXP/D，虽然对AOC更换面板事件有所耳闻，而LG的面板调教会更好，但LG的显示器外观确实不符合我的审美，而且LG不支持左右旋转，外置一个大大的电源，83B不支持USB接口，最终在相似价格下还是选了AOC
&lt;/p&gt;

&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-display.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-display.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-1.4&quot;&gt;机箱和散热&lt;/h2&gt;
&lt;p&gt;
   说实话，其它硬件我觉得都好选，但机箱的选择属于选择困难证的灾难，各种尺寸，各种形状，各种颜色，最重要的还要散热要好，在各种机箱重挑花了眼，刚开始京东上第一眼就挑中爱国者M2，感觉确实好看，但后来看评测说M2是一个闷罐又不得不重新选择，最后备选的机箱挺多，像SKTC S200，乔思伯D30，先马的MINI系列等，S200看了评测感觉还挺好的，但这货在双11前几天偷偷涨了20快，怒删之，先马的MINI系列网上评测比较少，D30评测比较多，而且确实好看，不过由于我这边想要上风冷散热，所以一开始对D30还挺犹豫的，虽然最后还是为它的颜值买单，至于华硕冰立方这种全身洞洞的机箱，我只能说散热挺好，但真心丑
&lt;/p&gt;

&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-sanre.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-sanre.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h1 id=&quot;heading-2&quot;&gt;装机&lt;/h1&gt;
&lt;p&gt;
  装机过程就没怎么拍照了，只因为第一次装机就装了3天，虽然也有配件没有同时到齐的原因，但更多的是装的时候&lt;b&gt;真的好小心翼翼&lt;/b&gt;，尤其是主板元器件显露在外面，生怕不小心就弄坏了，剩下的就是装机的一些记录和感受:
&lt;/p&gt;
&lt;h2 id=&quot;heading-2.1&quot;&gt;硬件组装&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;机箱&lt;/b&gt;: 由于是小机箱，大双塔最好在主板放进机箱后再装，否则很影响接线和理线；底部没有装风扇，也庆幸没装，否则显卡没法斜着放进去
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;理线&lt;/b&gt;: 装机半小时，理线一整天不是吹的
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;SSD&lt;/b&gt;: 购买SSD记得看清是否自带散热片，我买的这款自带散热，与主板带的冲突，只能手动撕下
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;散热&lt;/b&gt;: 只装了顶部和背部三个出风风扇，CPU FPU单烤15分钟稳定在77℃，显卡甜甜圈20分钟稳定67℃(感觉还行？)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;其它&lt;/b&gt;: D30开关机键有灯，windows睡眠模式下还会闪烁，放在卧室会影响睡眠，为啥网上测评D30的那么多，就没有一个提到这一点
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-guizhi.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-guizhi.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-2.2&quot;&gt;BIOS设置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;内存&lt;/b&gt;: 默认2400频率，进入BIOS设置XMP就能稳定使用3600，不过颗粒是nanya的，不知道更高频率会如何
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;风扇&lt;/b&gt;: 转速也是进入BIOS设置，散热风扇转速我没改，机箱风扇默认40℃以下50%，感觉有些吵，改成30%，日常使用几乎听不到声音
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-bios-fan.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-bios-fan.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-2.3&quot;&gt;系统安装&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;系统&lt;/b&gt;: 安装时&lt;b&gt;一定要备有线键盘和有线鼠标，一定要备有线键盘和有线鼠标，一定要备有线键盘和有线鼠标&lt;/b&gt;，跳过联网可以使用 &lt;b&gt;shift+F10&lt;/b&gt;，输入 &lt;code&gt;OOBE\BYPASSNRO&lt;/code&gt;，无鼠标跳过联网无法输入命令记得使用&lt;b&gt;win+tab&lt;/b&gt;切换窗口
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;驱动&lt;/b&gt;: 提前下好蓝牙和WIIFI驱动，装好系统后连接U盘安装，连接WIFI后显卡驱动会自动下载安装，安装好蓝牙驱动后终于可以使用蓝牙鼠标(没装好前设置里不会显示蓝牙开关)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;分区&lt;/b&gt;: 因为是新系统安装，安装时先分了100G+116M的空间，后续本地磁盘会显示99.9G，强迫症可以到磁盘管理扩展卷，每100G记得加7M，本地磁盘要显示为整数，则扩展为102407M，200G则是204814M
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2.4&quot;&gt;一次点亮&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-01.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-01.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-02.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-02.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2022/11/computer-03.jpeg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2022/11/computer-03.jpeg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;</content>
        <category term="Life"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Snow静态博客生成器</title>
      <link href="" rel="alternate"></link>
      <published>Sun, 16 Oct 2022 18:44:46 +0000</published>
      <updated>Sun, 26 Feb 2023 02:56:40 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2022/10/Snow静态博客生成器.html" type="text/html"/>
      <id>https://honmaple.me/articles/2022/10/Snow静态博客生成器.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
一个&lt;b&gt;简单却可配置&lt;/b&gt;的静态博客生成器。
很早之前(三年前)就想写一个静态博客生成器，但苦于一直没有时间，最近把之前写的重构了一下，让其可以支持更多的定制化配置。
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;至于为什么要重新写一个&lt;/b&gt;:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 大概是因为想要把之前未完成的轮子补充完整
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我目前使用的博客系统使用的是 &lt;b&gt;pelican&lt;/b&gt;，一个基于 &lt;b&gt;Python&lt;/b&gt; 的静态博客生成器，目前里面包括了很多我自己写的插件，比如 &lt;code&gt;Emacs org mode&lt;/code&gt; 的支持、文章加密、模版定制等，因为需要大量遍历所有文章，导致生成速度越来越慢，还有一点就是因为使用的是 &lt;b&gt;Python&lt;/b&gt;，每次本地预览时都需要切换到虚拟环境
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我习惯使用 &lt;b&gt;Emacs + Org&lt;/b&gt;，除了前期的几篇文章，后面都是使用 &lt;b&gt;org mode&lt;/b&gt; 书写，之前是因为 &lt;b&gt;Python&lt;/b&gt; 没有一个好用的 &lt;b&gt;org mode&lt;/b&gt; 解析库，所以专门写了一个 &lt;code&gt;org-python&lt;/code&gt; 用来解析 &lt;b&gt;org...&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;快速开始&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;创建新的站点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;编译和预览&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;内容&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;Section&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.1&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.2&quot;&gt;路径变量(&lt;b&gt;sections.xxx.path&lt;/b&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.3&quot;&gt;模版变量(&lt;b&gt;sections.xxx.template&lt;/b&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;Page&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2.1&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2.2&quot;&gt;路径变量(&lt;b&gt;sections.xxx.page_path&lt;/b&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2.3&quot;&gt;模版变量(&lt;b&gt;sections.xxx.page_template&lt;/b&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;Draft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4&quot;&gt;Taxonomy&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4.1&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4.2&quot;&gt;路径变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4.3&quot;&gt;模版变量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.5&quot;&gt;Archive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.6&quot;&gt;Pagination&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.6.1&quot;&gt;路径变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.6.2&quot;&gt;模版变量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.7&quot;&gt;Static&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.8&quot;&gt;Formats&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.8.1&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.8.2&quot;&gt;模版变量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.9&quot;&gt;theme&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.9.1&quot;&gt;主题目录结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.9.2&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.9.3&quot;&gt;&lt;span class=&quot;todo&quot;&gt;TODO&lt;/span&gt;默认配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10&quot;&gt;hook&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10.1&quot;&gt;i18n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10.2&quot;&gt;encrypt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10.3&quot;&gt;shortcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.10.4&quot;&gt;assets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.11&quot;&gt;本地测试和正式发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
一个&lt;b&gt;简单却可配置&lt;/b&gt;的静态博客生成器。
很早之前(三年前)就想写一个静态博客生成器，但苦于一直没有时间，最近把之前写的重构了一下，让其可以支持更多的定制化配置。
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;至于为什么要重新写一个&lt;/b&gt;:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 大概是因为想要把之前未完成的轮子补充完整
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我目前使用的博客系统使用的是 &lt;b&gt;pelican&lt;/b&gt;，一个基于 &lt;b&gt;Python&lt;/b&gt; 的静态博客生成器，目前里面包括了很多我自己写的插件，比如 &lt;code&gt;Emacs org mode&lt;/code&gt; 的支持、文章加密、模版定制等，因为需要大量遍历所有文章，导致生成速度越来越慢，还有一点就是因为使用的是 &lt;b&gt;Python&lt;/b&gt;，每次本地预览时都需要切换到虚拟环境
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我习惯使用 &lt;b&gt;Emacs + Org&lt;/b&gt;，除了前期的几篇文章，后面都是使用 &lt;b&gt;org mode&lt;/b&gt; 书写，之前是因为 &lt;b&gt;Python&lt;/b&gt; 没有一个好用的 &lt;b&gt;org mode&lt;/b&gt; 解析库，所以专门写了一个 &lt;code&gt;org-python&lt;/code&gt; 用来解析 &lt;b&gt;org mode&lt;/b&gt;；最近我也是完善了另一个我很早之前就写的 &lt;code&gt;org-golang&lt;/code&gt; 解析库(轮子+1)，准备趁次机会利用一下这个库
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 至于为什么不用最近几年流行的 &lt;b&gt;Hugo&lt;/b&gt;, 因为我想要保持和我使用 &lt;b&gt;Pelican&lt;/b&gt; 时一样的功能，比如文章加密，而 &lt;b&gt;hugo&lt;/b&gt; 并不支持插件，想要自定义插件必须复制大段大段的启动函数, 甚至需要修改源代码。同样我想要定制一个相同的模版，而对于使用过其它模版系统如Django，jinja2, 再来使用 &lt;b&gt;Go内置模版&lt;/b&gt; 的人来说, &lt;b&gt;hugo&lt;/b&gt; 的内置模版除了难用就是难用，这也是我此次选用 &lt;b&gt;pongo2&lt;/b&gt; 的原因
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 我的设想是提供插件的接口，并提供一个足够简单的启动函数, 在有用户需要自定义插件时只需要自己创建一个包, 使用三两行代码就能注册自定义插件并重新编译自己的snow
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;快速开始&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ ./snow --help
NAME:
   snow - snow is a static site generator.

USAGE:
   snow [global options] command [command options] [arguments...]

VERSION:
   0.1.0

COMMANDS:
   init     init a new site
   build    build and output
   server   server local files
   help, h  Shows a list of commands or help for one command

GLOBAL OPTIONS:
   --conf FILE, -c FILE  load configuration from FILE (default: &amp;#34;config.yaml&amp;#34;)
   --help, -h            show help (default: false)
   --version, -v         print the version (default: false)&lt;/pre&gt;
&lt;h3 id=&quot;heading-1.1&quot;&gt;创建新的站点&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;──╼ ./snow init
Welcome to snow 0.1.0.
&amp;gt; Where do you want to create your new web site? [.] mysnow
&amp;gt; What will be the title of this web site? [snow]
&amp;gt; Who will be the author of this web site?
The input is required
&amp;gt; Who will be the author of this web site? honmaple
&amp;gt; What is your URL prefix? (no trailing slash) [http://127.0.0.1:8000]
&amp;gt; Do you want to create first page? [Y/n]&lt;/pre&gt;

&lt;h3 id=&quot;heading-1.2&quot;&gt;编译和预览&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ cd mysnow
└──╼ ../snow server -D
DEBU Copying @theme/static/css/main.css to output/static/css/main.css
INFO Done: Static Processed 1 static files in 588.705µs
DEBU Writing output/categories/index.html
DEBU Writing output/authors/index.html
DEBU Writing output/tags/index.html
DEBU Writing output/posts/index.html
DEBU Writing output/authors/snow/index.html
DEBU Writing output/tags/snow/index.html
DEBU Writing output/categories/linux/index.html
DEBU Writing output/tags/linux/index.html
DEBU Writing output/tags/emacs/index.html
DEBU Writing output/categories/linux/emacs/index.html
INFO Done: Page Processed 1 normal pages, 0 hidden pages, 0 section pages in 10.087804ms
INFO Done: Section Processed 1 posts in 10.1831ms
INFO Done: Taxonomy Processed 1 authors, 3 tags, 1 categories in 10.18788ms&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;内容&lt;/h2&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;Section&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;content/
├── drafts            // &amp;lt;- http://127.0.0.1:8000/drafts/index.html
│   └── draft1.org    // &amp;lt;- http://127.0.0.1:8000/drafts/index.html
├── pages             // no url, because sections.pages.path is &amp;#34;&amp;#34;
│   └── 404.org       // &amp;lt;- http://127.0.0.1:8000/404.html
└── posts             // &amp;lt;- http://127.0.0.1:8000/posts/index.html
    ├── post1.org     // &amp;lt;- http://127.0.0.1:8000/posts/2022/02/post1.html
    └── subposts      // &amp;lt;- http://127.0.0.1:8000/posts/subposts/index.html
        └── post2.org // &amp;lt;- http://127.0.0.1:8000/posts/2023/02/post2.html&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.1.1&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;sections&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;_default&lt;/span&gt;:
    &lt;span style=&quot;color:#75715e&quot;&gt;# 页面中文章的默认排序, 多字段使用逗号分隔&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;orderby&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;date desc&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章筛选，主要用于分页前&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;filter&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 页面中文章默认分页, path必须使用{number}变量, 0表示不分页&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;paginate&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;10&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 分页路径&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;paginate_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{name}{number}{extension}&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 分页前筛选pages&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;paginate_filter&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 生成路径, 为空表示禁止生成相关页面&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{section}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 使用的模版&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;section.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 当前section下所有文章生成路径&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;page_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{section}/{slug}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章使用的模版&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;page_template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;post.html&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;posts&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;page_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;posts/{date:%Y}/{date:%m}/{slug}.html&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;pages&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;pages/about&lt;/span&gt;:
    &lt;span style=&quot;color:#75715e&quot;&gt;# 自定义pages/about下的文章生成路径，同时继承pages.path不会生成所有页面&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;page_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{slug}/index.html&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
     &lt;b&gt;filter&lt;/b&gt; 格式(下同):
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;#39;emacs&amp;#39; in tags and not draft or weight &amp;gt; 1&lt;/pre&gt;
&lt;p&gt;
     其中 &lt;b&gt;tags&lt;/b&gt;, &lt;b&gt;draft&lt;/b&gt; 等都是page元数据
&lt;/p&gt;

&lt;h4 id=&quot;heading-2.1.2&quot;&gt;路径变量(&lt;b&gt;sections.xxx.path&lt;/b&gt;)&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{section}&lt;/td&gt;
&lt;td&gt;section名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{section:slug}&lt;/td&gt;
&lt;td&gt;section slug, 中国 -&amp;gt; zhong-guo&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h4 id=&quot;heading-2.1.3&quot;&gt;模版变量(&lt;b&gt;sections.xxx.template&lt;/b&gt;)&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;section&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Title&lt;/td&gt;
&lt;td&gt;section标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Path&lt;/td&gt;
&lt;td&gt;section相对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Permalink&lt;/td&gt;
&lt;td&gt;section绝对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Content&lt;/td&gt;
&lt;td&gt;section内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Pages&lt;/td&gt;
&lt;td&gt;当前section下的文章列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Children&lt;/td&gt;
&lt;td&gt;子section&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section.Parent&lt;/td&gt;
&lt;td&gt;父section&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;Page&lt;/h3&gt;
&lt;h4 id=&quot;heading-2.2.1&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# 文章目录所在, 其中该目录下应该包括一系列子目录，这些子目录的名称对应为 *文章的类型*, 比如 *content/drafts/* 目录下的文章类型为 *drafts*, 当然也可以直接在文章文件头添加 =type: drafts=&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;content_dir&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.2.2&quot;&gt;路径变量(&lt;b&gt;sections.xxx.page_path&lt;/b&gt;)&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{date:%Y}&lt;/td&gt;
&lt;td&gt;创建文章的年份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{date:%m}&lt;/td&gt;
&lt;td&gt;创建文章的月份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{date:%d}&lt;/td&gt;
&lt;td&gt;创建文章的日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{date:%H}&lt;/td&gt;
&lt;td&gt;创建文章的小时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{lang}&lt;/td&gt;
&lt;td&gt;文章语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{slug}&lt;/td&gt;
&lt;td&gt;文章标题或自定义slug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{filename}&lt;/td&gt;
&lt;td&gt;文件名称(不带后缀名)&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h4 id=&quot;heading-2.2.3&quot;&gt;模版变量(&lt;b&gt;sections.xxx.page_template&lt;/b&gt;)&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;page&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Title&lt;/td&gt;
&lt;td&gt;页面标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Lang&lt;/td&gt;
&lt;td&gt;页面语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Date&lt;/td&gt;
&lt;td&gt;页面创建时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Modified&lt;/td&gt;
&lt;td&gt;页面修改时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Aliases&lt;/td&gt;
&lt;td&gt;页面其它链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Path&lt;/td&gt;
&lt;td&gt;页面相对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Permalink&lt;/td&gt;
&lt;td&gt;页面绝对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Summary&lt;/td&gt;
&lt;td&gt;页面简介&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Content&lt;/td&gt;
&lt;td&gt;页面内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Meta.xxx&lt;/td&gt;
&lt;td&gt;自定义的元数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Prev&lt;/td&gt;
&lt;td&gt;上一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.Next&lt;/td&gt;
&lt;td&gt;下一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.HasPrev()&lt;/td&gt;
&lt;td&gt;是否有上一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.HasNext()&lt;/td&gt;
&lt;td&gt;是否有下一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.PrevInType&lt;/td&gt;
&lt;td&gt;同一类型上一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.NextInType&lt;/td&gt;
&lt;td&gt;同一类型下一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.HasPrevInType()&lt;/td&gt;
&lt;td&gt;是否有同一类型上一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page.HasNextInType()&lt;/td&gt;
&lt;td&gt;是否有同一类型下一篇&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;heading-2.3&quot;&gt;Draft&lt;/h3&gt;
&lt;p&gt;
    默认草稿标志为 &lt;code&gt;draft: true&lt;/code&gt;, 也可以将所有草稿放入同一个 &lt;b&gt;drafts&lt;/b&gt; 目录, 然后就可以在构建时增加筛选条件
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 排除草稿
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;snow build -F &amp;#39;not draft&amp;#39;&lt;/pre&gt;
&lt;p&gt;
      或者
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;snow build --filter &amp;#39;type != &amp;#34;drafts&amp;#34;&amp;#39;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 包括草稿
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;snow build -F &amp;#39;not draft or draft = true&amp;#39;&lt;/pre&gt;
&lt;p&gt;
      默认筛选条件可以写入配置 &lt;code&gt;build_filter&lt;/code&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.4&quot;&gt;Taxonomy&lt;/h3&gt;
&lt;h4 id=&quot;heading-2.4.1&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;taxonomies&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;_default&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{taxonomy}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# terms排序, 可选name,count&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;orderby&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{taxonomy}/list.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{taxonomy}/{term:slug}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{taxonomy}/single.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章列表筛选&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_filter&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章列表排序&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_orderby&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;date desc&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 文章列表分页&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_paginate&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_paginate_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_paginate_filter&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;categories&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;authors&lt;/span&gt;:
  tags:&lt;/pre&gt;

&lt;h4 id=&quot;heading-2.4.2&quot;&gt;路径变量&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;taxonomies.xxx.path&lt;/b&gt;
&lt;/p&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{taxonomy}&lt;/td&gt;
&lt;td&gt;分类系统名称&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;taxonomies.xxx.term_path&lt;/b&gt;
&lt;/p&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{taxonomy}&lt;/td&gt;
&lt;td&gt;分类系统名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{term}&lt;/td&gt;
&lt;td&gt;分类具体名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{term:slug}&lt;/td&gt;
&lt;td&gt;分类slug&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;heading-2.4.3&quot;&gt;模版变量&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;taxonomies.xxx.template&lt;/b&gt;
&lt;/p&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;taxonomy&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;taxonomy.Name&lt;/td&gt;
&lt;td&gt;分类系统名称, 如:categories,tags,authors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;taxonomy.Terms&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;taxonomies.xxx.term_template&lt;/b&gt;
&lt;/p&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;term&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.Name&lt;/td&gt;
&lt;td&gt;分类名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.Path&lt;/td&gt;
&lt;td&gt;相对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.Permalink&lt;/td&gt;
&lt;td&gt;绝对链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.List&lt;/td&gt;
&lt;td&gt;文章列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term.Children&lt;/td&gt;
&lt;td&gt;子分类&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.5&quot;&gt;Archive&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;taxonomies&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;date:2006/01&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;archives/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;archives.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;archives/{term}/index.html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;term_template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;period_archives.html&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
    归档页面类似分类系统，其它 &lt;b&gt;date:2006/01&lt;/b&gt; 表示按年月归档, 并生成链接 &lt;b&gt;/archives/2022/10/index.html&lt;/b&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.6&quot;&gt;Pagination&lt;/h3&gt;
&lt;h4 id=&quot;heading-2.6.1&quot;&gt;路径变量&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;{name}&lt;/td&gt;
&lt;td&gt;路径名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{extension}&lt;/td&gt;
&lt;td&gt;路径扩展&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{number}&lt;/td&gt;
&lt;td&gt;页码, 第一页为空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{number:one}&lt;/td&gt;
&lt;td&gt;页码, 第一页为&amp;#34;1&amp;#34;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 示例一:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;section/index.html&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;paginate_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{name}{number}{extension}&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 第一页: &lt;code&gt;section/index.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第二页: &lt;code&gt;section/index2.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第三页: &lt;code&gt;section/index3.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 示例二:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;section/index.html&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;paginate_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;page/{number:one}{extension}&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 第一页: &lt;code&gt;section/page/1.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第二页: &lt;code&gt;section/page/2.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 第三页: &lt;code&gt;section/page/3.html&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;heading-2.6.2&quot;&gt;模版变量&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;paginator&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.URL&lt;/td&gt;
&lt;td&gt;分页链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.PageNum&lt;/td&gt;
&lt;td&gt;当前页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Total&lt;/td&gt;
&lt;td&gt;总页数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.HasPrev()&lt;/td&gt;
&lt;td&gt;是否有上一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Prev&lt;/td&gt;
&lt;td&gt;上一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Prev.URL&lt;/td&gt;
&lt;td&gt;上一页链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.HasNext()&lt;/td&gt;
&lt;td&gt;是否有下一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Next&lt;/td&gt;
&lt;td&gt;下一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.Next.URL&lt;/td&gt;
&lt;td&gt;下一页链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.All&lt;/td&gt;
&lt;td&gt;所有页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paginator.List&lt;/td&gt;
&lt;td&gt;当前页文章列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;heading-2.7&quot;&gt;Static&lt;/h3&gt;
&lt;p&gt;
    静态文件配置:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# 静态文件目录, 该目录区分主题的静态文件static&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;static_dirs&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 静态文件扩展，不配置将会使用静态文件目录下的所有文件&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;static_exts&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;.js&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;.css&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 静态文件路径，用于指定静态文件或静态目录的保存目录, 当有多条路径时，长度优先.&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;static_paths&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;static/CNAME&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;static/css/main.css&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/css/&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#75715e&quot;&gt;# 以@theme开头代表主题中的静态文件，即{theme.name}/static&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;#34;@theme/static&amp;#34;: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.8&quot;&gt;Formats&lt;/h3&gt;
&lt;p&gt;
    可以生成 &lt;b&gt;rss&lt;/b&gt;，&lt;b&gt;atom&lt;/b&gt; 或者其它任意格式(需要自定义模版)
&lt;/p&gt;
&lt;h4 id=&quot;heading-2.8.1&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# 设置rss格式的默认值&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;formats.rss&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;_internal/rss.xml&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;formats.atom&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;_internal/atom.xml&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;sections&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;_default&lt;/span&gt;:
    &lt;span style=&quot;color:#75715e&quot;&gt;# rss生成路径, 模版将会使用默认模版&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;formats.rss.path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{section:slug}/index.xml&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# 为空时禁止生成&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;formats.atom.path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;taxonomies&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;tags&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;formats.atom&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;tags/{term:slug}/index.xml&amp;#34;&lt;/span&gt;
      &lt;span style=&quot;color:#75715e&quot;&gt;# 自定义模版&lt;/span&gt;
      &lt;span style=&quot;color:#66d9ef&quot;&gt;template&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;custom.atom.xml&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.8.2&quot;&gt;模版变量&lt;/h4&gt;
&lt;table&gt;

&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;section&lt;/td&gt;
&lt;td&gt;仅生成section 有效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;term&lt;/td&gt;
&lt;td&gt;仅生成taxonomy term 有效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pages&lt;/td&gt;
&lt;td&gt;文章列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;heading-2.9&quot;&gt;theme&lt;/h3&gt;
&lt;h4 id=&quot;heading-2.9.1&quot;&gt;主题目录结构&lt;/h4&gt;
&lt;p&gt;
     其中 &lt;b&gt;templates&lt;/b&gt; 和 &lt;b&gt;static&lt;/b&gt; 名称不可修改
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;simple/
├── templates
│   ├── post.html
│   ├── index.html
│   ├── archives.html
├── static
│   ├── main.css&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.9.2&quot;&gt;配置&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;theme&lt;/span&gt;:
  &lt;span style=&quot;color:#75715e&quot;&gt;# 主题名称, 未设置将使用默认主题&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;test-theme&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#75715e&quot;&gt;# 主题模版覆盖, 增加同名的文件到 *override* 配置的目录, snow将会优先使用该文件&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;override&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;layouts&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;h4 id=&quot;heading-2.9.3&quot;&gt;&lt;span class=&quot;todo&quot;&gt;TODO&lt;/span&gt;默认配置&lt;/h4&gt;

&lt;h3 id=&quot;heading-2.10&quot;&gt;hook&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;hooks&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;i18n&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;assets&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;encrypt&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;shortcode&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;h4 id=&quot;heading-2.10.1&quot;&gt;i18n&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 模版
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{% i18n &amp;#34;tags&amp;#34; %}
{% T &amp;#34;tags %d&amp;#34; 12 %}
{{ i18n(&amp;#34;authors&amp;#34;) }}
{{ T(&amp;#34;authors&amp;#34;) }}
{{ _(&amp;#34;authors %f&amp;#34;, 3.14) }}&lt;/pre&gt;
&lt;p&gt;
       甚至可以直接使用变量
       {{ _(term.Name) }}
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 翻译文件
       默认会加载主题下 &lt;b&gt;i18n&lt;/b&gt; 目录下的文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;i18n
├── en.yaml
└── zh.yaml&lt;/pre&gt;
&lt;p&gt;
       文件内容
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;---
- &lt;span style=&quot;color:#66d9ef&quot;&gt;id&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;authors&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;tr&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;作者&amp;#34;&lt;/span&gt;
- &lt;span style=&quot;color:#66d9ef&quot;&gt;id&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;tr&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;标签&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;
       也可以自定义文件位置或翻译内容覆盖主题原有的翻译
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;languages.en&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;translations&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;i18n/en.yaml&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;languages.zh&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;translations&lt;/span&gt;:
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;id&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;authors&amp;#34;&lt;/span&gt;
      &lt;span style=&quot;color:#66d9ef&quot;&gt;tr&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;作者&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;heading-2.10.2&quot;&gt;encrypt&lt;/h4&gt;
&lt;p&gt;
     内容加密, 需要一个密码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{ page.Content | encrypt:&amp;#34;123456&amp;#34; }}&lt;/pre&gt;

&lt;h4 id=&quot;heading-2.10.3&quot;&gt;shortcode&lt;/h4&gt;
&lt;p&gt;
     用于快速插入已有模版, 示例:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;shortcode _name=&amp;#34;encrypt&amp;#34; password=&amp;#34;1234567&amp;#34;&amp;gt;
hello *markdown*
&amp;lt;/shortcode&amp;gt;

&amp;lt;shortcode _name=&amp;#34;gist&amp;#34; author=&amp;#34;spf13&amp;#34; id=&amp;#34;7896402&amp;#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;
     可以自定义 &lt;b&gt;shortcode&lt;/b&gt; 到主题的 &lt;code&gt;templates/shortcodes&lt;/code&gt; 目录下, 目前内置 &lt;b&gt;gist&lt;/b&gt;, &lt;b&gt;encrypt&lt;/b&gt;
&lt;/p&gt;
&lt;h4 id=&quot;heading-2.10.4&quot;&gt;assets&lt;/h4&gt;
&lt;p&gt;
     静态文件处理
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;params&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;assets&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;css&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;files&lt;/span&gt;:
        - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/main.scss&amp;#34;&lt;/span&gt;
        - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/entry.scss&amp;#34;&lt;/span&gt;
      &lt;span style=&quot;color:#66d9ef&quot;&gt;filters&lt;/span&gt;:
        - &lt;span style=&quot;color:#66d9ef&quot;&gt;libscss&lt;/span&gt;:
            &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: [&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/&amp;#34;&lt;/span&gt;]
        - &lt;span style=&quot;color:#66d9ef&quot;&gt;cssmin&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;output&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/lib.min.css&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;
     模版文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{% assets files=&amp;#34;css/style.scss&amp;#34; filters=&amp;#34;libsass,cssmin&amp;#34; output=&amp;#34;css/style.min.css&amp;#34; %}
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;link&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;rel&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ config.site.url }}/{{ asset_url }}&amp;#34;&lt;/span&gt;&amp;gt;
{% endassets %}

{% assets css %}
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;link&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;rel&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ config.site.url }}/{{ asset_url }}&amp;#34;&lt;/span&gt;&amp;gt;
{% endassets %}&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.11&quot;&gt;本地测试和正式发布&lt;/h3&gt;
&lt;p&gt;
    snow 提供了 &lt;b&gt;mode&lt;/b&gt; 配置用于区分本地测试和正式发布
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;site&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;url&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;http://127.0.0.1:8000&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;output_dir&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;output&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;mode.publish&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;site&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;url&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;output_dir&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;mode.develop&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;include&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;develop.yaml&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
    只要在构建时使用 &lt;code&gt;snow build --mode publish&lt;/code&gt; 即可覆盖本地默认配置
&lt;/p&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs笔记之minibuffer默认输入</title>
      <link href="" rel="alternate"></link>
      <published>Thu, 25 Nov 2021 22:14:00 +0000</published>
      <updated>Fri, 24 Feb 2023 08:12:33 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2021/11/Emacs笔记之minibuffer默认输入.html" type="text/html"/>
      <id>https://honmaple.me/articles/2021/11/Emacs笔记之minibuffer默认输入.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
在使用 &lt;b&gt;evil-ex&lt;/b&gt;，也就是冒号+命令时，有一个非常有趣的功能，输入冒号后，&lt;b&gt;minibuffer&lt;/b&gt; 会显示上一次执行的命令，比如 &lt;code&gt;:wq&lt;/code&gt;, 确认可以直接执行这个命令，但是输入任意字符，就会把原先的 &lt;code&gt;wq&lt;/code&gt; 直接覆盖，接收新的命令输入
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
我觉得这是一个非常有趣且有用的功能，像 &lt;code&gt;read-string&lt;/code&gt; 函数，如果我想要一个默认的输入，可以直接使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;
&lt;p&gt;
但我想覆盖这个默认, 则需要先把 &lt;code&gt;默认内容&lt;/code&gt; 删除，再输入我想要的字符, 如果不想先删除默认再输入，还可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">
&lt;blockquote&gt;
&lt;p&gt;
在使用 &lt;b&gt;evil-ex&lt;/b&gt;，也就是冒号+命令时，有一个非常有趣的功能，输入冒号后，&lt;b&gt;minibuffer&lt;/b&gt; 会显示上一次执行的命令，比如 &lt;code&gt;:wq&lt;/code&gt;, 确认可以直接执行这个命令，但是输入任意字符，就会把原先的 &lt;code&gt;wq&lt;/code&gt; 直接覆盖，接收新的命令输入
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
我觉得这是一个非常有趣且有用的功能，像 &lt;code&gt;read-string&lt;/code&gt; 函数，如果我想要一个默认的输入，可以直接使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;
&lt;p&gt;
但我想覆盖这个默认, 则需要先把 &lt;code&gt;默认内容&lt;/code&gt; 删除，再输入我想要的字符, 如果不想先删除默认再输入，还可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;
&lt;p&gt;
但是这样的话我无法看到默认的内容，当然，也许可以把默认内容追加到 &lt;code&gt;prompt&lt;/code&gt; 里，我认为这样不太好看，不是吗
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let* ((default &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
       (input (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt (default %s): &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; default) &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; default)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))&lt;/pre&gt;

&lt;p&gt;
&lt;code&gt;evil-ex&lt;/code&gt; 提示我一个新的解决方式, 通过查看 &lt;code&gt;evil-ex&lt;/code&gt; 源码，可以发现它是使用 &lt;code&gt;minibuffer-with-setup-hook&lt;/code&gt; 和 &lt;code&gt;after-change-functions&lt;/code&gt; 在&lt;b&gt;minibuffer&lt;/b&gt;里插入新内容时先清理默认内容, 再插入新内容, 我简化了相关代码
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((input (minibuffer-with-setup-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-input-setup&lt;/span&gt;
               (&lt;span style=&quot;color:#a6e22e&quot;&gt;read-string&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;prompt: &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;propertize&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;默认内容&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;face&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;shadow&lt;/span&gt;)))))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;message&lt;/span&gt; input))

(defun maple-input-setup()
  (add-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;after-change-functions&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-input-update&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;))

(defun maple-input-update(&lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; beg end len &lt;span style=&quot;color:#a6e22e&quot;&gt;string&lt;/span&gt;)
  (let ((&lt;span style=&quot;color:#a6e22e&quot;&gt;string&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-substring-no-properties&lt;/span&gt; beg end)))
    (delete-minibuffer-contents)
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;insert&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;string&lt;/span&gt;)
    (remove-hook &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;after-change-functions&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple-input-update&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;)))&lt;/pre&gt;

&lt;p&gt;
OK, 就这样
&lt;/p&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
</feed>