<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
  <title>紅楓吟</title>
    <subtitle>风落花语风落天，花落风雨花落田.</subtitle>
  <link href="https://honmaple.me/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://honmaple.me/index.html"/>
  <generator uri="https://github.com/honmaple/snow">Snow</generator>
    <updated>Fri, 18 Apr 2025 17:14:24 +0000</updated>
  <id>https://honmaple.me</id>
    <entry xml:lang="zh">
      <title>MacOS环境配置</title>
      <link href="https://honmaple.me/articles/2025/04/macoshuan-jing-pei-zhi.html" rel="alternate"></link>
      <published>Fri, 18 Apr 2025 15:53:20 +0000</published>
      <updated>Fri, 18 Apr 2025 17:14:24 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2025/04/macoshuan-jing-pei-zhi.html" type="text/html"/>
      <id>https://honmaple.me/articles/2025/04/macoshuan-jing-pei-zhi.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
最近实在没忍住，以 &lt;b&gt;2944&lt;/b&gt; 的价格入手了一台 &lt;b&gt;mac mini m4&lt;/b&gt; 丐版，而我之前一直使用的是一台2019年 &lt;b&gt;Intel&lt;/b&gt; 芯片的 &lt;b&gt;macbook pro&lt;/b&gt;，因为刚开始使用，开发环境还没配置好，所以还没感觉到明显地提升，但至少我的桌面倒是干净了不少。
&lt;/p&gt;

&lt;p&gt;
此次入手 &lt;b&gt;mac mini&lt;/b&gt; 后我使用 &lt;b&gt;迁移助理&lt;/b&gt; 对旧数据进行迁移，不幸的是，由于是 &lt;b&gt;Intel&lt;/b&gt; 迁移至 &lt;b&gt;Apple Silicon&lt;/b&gt;，所以出现了各种各样的问题，尤其是 &lt;code&gt;Bad CPU type in executable...&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;设置&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;Apple Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;终端&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;必备软件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;betterdisplay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;clash-verge-rev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4&quot;&gt;google-chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.5&quot;&gt;yabai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.6&quot;&gt;hammerspoon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.7&quot;&gt;Localsend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.8&quot;&gt;inkscape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.9&quot;&gt;wireshark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;开发软件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.1&quot;&gt;Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.2&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.3&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.4&quot;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.5&quot;&gt;Golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.6&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.7&quot;&gt;Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.8&quot;&gt;Other&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
最近实在没忍住，以 &lt;b&gt;2944&lt;/b&gt; 的价格入手了一台 &lt;b&gt;mac mini m4&lt;/b&gt; 丐版，而我之前一直使用的是一台2019年 &lt;b&gt;Intel&lt;/b&gt; 芯片的 &lt;b&gt;macbook pro&lt;/b&gt;，因为刚开始使用，开发环境还没配置好，所以还没感觉到明显地提升，但至少我的桌面倒是干净了不少。
&lt;/p&gt;

&lt;p&gt;
此次入手 &lt;b&gt;mac mini&lt;/b&gt; 后我使用 &lt;b&gt;迁移助理&lt;/b&gt; 对旧数据进行迁移，不幸的是，由于是 &lt;b&gt;Intel&lt;/b&gt; 迁移至 &lt;b&gt;Apple Silicon&lt;/b&gt;，所以出现了各种各样的问题，尤其是 &lt;code&gt;Bad CPU type in executable&lt;/code&gt; 错误，导致 git、python等二进制文件全部不可用，最后只能重置系统并重头开始配置(注：重置系统只需要到 &lt;code&gt;设置 -&amp;gt; 通用 -&amp;gt; 传输与还原 -&amp;gt; 抹掉所有内容和设置&lt;/code&gt;，不用长按开机键进入选项抹掉磁盘)
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;设置&lt;/h2&gt;
&lt;h3 id=&quot;heading-1.1&quot;&gt;Apple Store&lt;/h3&gt;
&lt;p&gt;
    因为我一般都是美区ID+国区商店，所以打开Apple Store，在左上方的菜单栏中找到 &lt;code&gt;商店 -&amp;gt; 退出登录&lt;/code&gt;，并登入国区ID
&lt;/p&gt;

&lt;h3 id=&quot;heading-1.2&quot;&gt;终端&lt;/h3&gt;
&lt;p&gt;
    我还是习惯使用 &lt;code&gt;bash&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;chsh -s /bin/bash&lt;/pre&gt;

&lt;p&gt;
    并且有使用了十多年的PS1配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;git_status&lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;{&lt;/span&gt;
    cmd&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;git branch 2&amp;gt; /dev/null | sed -e &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;/^[^*]/d&amp;#39;&lt;/span&gt; -e &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;s/[(（]//&amp;#39;&lt;/span&gt; -e &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;s/[）)]//&amp;#39;&lt;/span&gt;  -e &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;s/* \(.*\)/(\1)/&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    echo -en &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\033[32m&lt;/span&gt;$cmd&lt;span style=&quot;color:#e6db74&quot;&gt;\033[0m&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#f92672&quot;&gt;}&lt;/span&gt;
proxy_status&lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#f92672&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;[&lt;/span&gt; -z &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;${&lt;/span&gt;http_proxy&lt;span style=&quot;color:#e6db74&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;]&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;||&lt;/span&gt; echo -en &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;\033[32m[PROXY]\033[0m&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#f92672&quot;&gt;}&lt;/span&gt;
PS1&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;\$(proxy_status)\[\e[0;37m\]\342\224\214\342\224\200 \[[\e[0;33m\]\u\[\e[0;37m\]]\342\224\200[\[\e[1;33m\]\w\[\e[0;37m\]]\$(git_status)\n\[\e[0;37m\]\342\224\224\342\224\200\342\224\200\342\225\274\[\e[0m\] &amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;
    如果 &lt;code&gt;~/.bashrc&lt;/code&gt; 不生效，需要添加文件 &lt;code&gt;~/.bash_profile&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;[&lt;/span&gt; -r $HOME/.bashrc &lt;span style=&quot;color:#f92672&quot;&gt;]&lt;/span&gt;; &lt;span style=&quot;color:#66d9ef&quot;&gt;then&lt;/span&gt;
    source $HOME/.bashrc
&lt;span style=&quot;color:#66d9ef&quot;&gt;fi&lt;/span&gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;必备软件&lt;/h2&gt;
&lt;p&gt;
   微信、QQ、QQ音乐、网易云音乐、Localsend等软件可以在商店里直接下载
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.1&quot;&gt;homebrew&lt;/h3&gt;
&lt;p&gt;
    这应该是每个Mac用户的必备软件了吧
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34;&lt;/pre&gt;
&lt;p&gt;
    如果安装速度太慢或是下载部分内容时完全卡住，可以先行安装科学上网工具
&lt;/p&gt;

&lt;p&gt;
    然后添加以下内容到 &lt;code&gt;~/.bashrc&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;/opt/homebrew/bin:$PATH

&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; which brew &amp;gt; /dev/null;&lt;span style=&quot;color:#66d9ef&quot;&gt;then&lt;/span&gt;
    export HOMEBREW_NO_AUTO_UPDATE&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;true
    &lt;span style=&quot;color:#75715e&quot;&gt;# export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=true&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&lt;/span&gt;
    eval &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;$(&lt;/span&gt;brew shellenv&lt;span style=&quot;color:#66d9ef&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;fi&lt;/span&gt;&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;betterdisplay&lt;/h3&gt;
&lt;p&gt;
    由于我使用的是一个2K显示器，所以需要开启HIDPI
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask betterdisplay&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.3&quot;&gt;clash-verge-rev&lt;/h3&gt;
&lt;p&gt;
    如果之前是通过dmg文件安装的，需要先卸载，然后重新使用brew安装，方便升级和管理
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask clash-verge-rev&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.4&quot;&gt;google-chrome&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask google-chrome&lt;/pre&gt;
&lt;p&gt;
    如果在登陆账号时总是提示请求取消，并且登陆失败，开启全局代理即可
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.5&quot;&gt;yabai&lt;/h3&gt;
&lt;p&gt;
    macos端的平铺窗口管理
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install koekeishiya/formulae/yabai
yabai --start-service&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.6&quot;&gt;hammerspoon&lt;/h3&gt;
&lt;p&gt;
    主要用于搭配 &lt;b&gt;yabai&lt;/b&gt; 使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask hammerspoon&lt;/pre&gt;

&lt;p&gt;
    我的配置在 &lt;a href=&quot;https://github.com/honmaple/dotfiles/tree/master/macos&quot;&gt;https://github.com/honmaple/dotfiles/tree/master/macos&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.7&quot;&gt;Localsend&lt;/h3&gt;
&lt;p&gt;
    一个内网文件传输工具，可以在商店直接下载，或者使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask localsend&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.8&quot;&gt;inkscape&lt;/h3&gt;
&lt;p&gt;
    一个矢量图绘制软件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask inkscape&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.9&quot;&gt;wireshark&lt;/h3&gt;
&lt;p&gt;
    抓包工具
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask wireshark&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;开发软件&lt;/h2&gt;
&lt;h3 id=&quot;heading-3.1&quot;&gt;Emacs&lt;/h3&gt;
&lt;p&gt;
    emacs永存，虽然我是邪恶的evil用户
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask railwaycat/emacsmacport/emacs-mac&lt;/pre&gt;

&lt;h3 id=&quot;heading-3.2&quot;&gt;Docker&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask docker&lt;/pre&gt;

&lt;h3 id=&quot;heading-3.3&quot;&gt;Ruby&lt;/h3&gt;
&lt;p&gt;
    &lt;code&gt;~/.bashrc&lt;/code&gt;配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export GEM_HOME&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/ruby/gem
export GEM_PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/ruby/gem
export GEM_SPEC_CACHE&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/ruby/gem/specs
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$GEM_HOME/bin:$PATH&lt;/pre&gt;

&lt;h3 id=&quot;heading-3.4&quot;&gt;Python&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install pyenv pyenv-virtualenv&lt;/pre&gt;

&lt;p&gt;
    &lt;code&gt;~/.bashrc&lt;/code&gt;配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; which pyenv &amp;gt; /dev/null;&lt;span style=&quot;color:#66d9ef&quot;&gt;then&lt;/span&gt;
    export PYENV_ROOT&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/python/pyenv
    export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$PYENV_ROOT/bin:$PATH
    eval &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;$(&lt;/span&gt;pyenv init -&lt;span style=&quot;color:#66d9ef&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;fi&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; which pyenv-virtualenv-init &amp;gt; /dev/null; &lt;span style=&quot;color:#66d9ef&quot;&gt;then&lt;/span&gt;
    eval &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;$(&lt;/span&gt;pyenv virtualenv-init -&lt;span style=&quot;color:#66d9ef&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;fi&lt;/span&gt;&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export PYTHONUSERBASE&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/python
export PYTHONHISTFILE&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/python/history
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/python/bin:$PATH&lt;/pre&gt;

&lt;h3 id=&quot;heading-3.5&quot;&gt;Golang&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install go
brew install protobuf bufbuild/buf/buf&lt;/pre&gt;

&lt;p&gt;
    &lt;code&gt;~/.bashrc&lt;/code&gt;配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export GOPROXY&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;https://goproxy.cn,direct
export GOPATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/golang
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/golang/bin:$PATH&lt;/pre&gt;

&lt;h3 id=&quot;heading-3.6&quot;&gt;Android&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install --cask android-studio&lt;/pre&gt;

&lt;p&gt;
    &lt;code&gt;~/.bashrc&lt;/code&gt;配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;export ANDROID_HOME&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/android/sdk
export NDK_HOME&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;$ANDROID_HOME&lt;span style=&quot;color:#e6db74&quot;&gt;/ndk/26.2.11394342&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
export JAVA_HOME&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;/Applications/Android Studio.app/Contents/jbr/Contents/Home&amp;#39;&lt;/span&gt;
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$PATH&lt;/pre&gt;

&lt;h3 id=&quot;heading-3.7&quot;&gt;Flutter&lt;/h3&gt;
&lt;p&gt;
    下载 &lt;code&gt;flutter_macos_arm64_3.29.3-stable.zip&lt;/code&gt; 并解压到 &lt;code&gt;~/repo&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;unzip ~/Downloads/flutter_macos_arm64_3.29.3-stable.zip-d ~/repo/&lt;/pre&gt;

&lt;p&gt;
    &lt;code&gt;~/.bashrc&lt;/code&gt;配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;alias flutter&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;flutter --no-version-check&amp;#39;&lt;/span&gt;
export PUB_HOSTED_URL&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;https://pub.flutter-io.cn
export FLUTTER_STORAGE_BASE_URL&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;https://storage.flutter-io.cn
export PATH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;$HOME/repo/flutter/bin:$PATH&lt;/pre&gt;

&lt;h3 id=&quot;heading-3.8&quot;&gt;Other&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install rg
brew install tree htop&lt;/pre&gt;

&lt;p&gt;
    除此之外，最近很少使用的lua、node、rust等环境待后续补充吧
&lt;/p&gt;</content>
        <category term="Tech"></category>
    </entry>
    <entry xml:lang="zh">
      <title>红枫云盘正式上线App Store</title>
      <link href="https://honmaple.me/articles/2025/03/hong-feng-yun-pan-zheng-shi-shang-xian-app-store.html" rel="alternate"></link>
      <published>Sat, 15 Mar 2025 17:25:17 +0000</published>
      <updated>Tue, 18 Mar 2025 15:04:49 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2025/03/hong-feng-yun-pan-zheng-shi-shang-xian-app-store.html" type="text/html"/>
      <id>https://honmaple.me/articles/2025/03/hong-feng-yun-pan-zheng-shi-shang-xian-app-store.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;

&lt;a href=&quot;https://s.libforest.com/images/2025/03/maple-file-app-store.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2025/03/maple-file-app-store.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
欢迎大家下载使用 &lt;a href=&quot;https://apps.apple.com/us/app/maplefile/id6743229674&quot;&gt;https://apps.apple.com/us/app/maplefile/id6743229674&lt;/a&gt;
&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;
第一次上线APP，虽然走了不少弯路，不过总体上线过程还是挺顺利的。3月12日注册的开发者账号，今天（3月15日）即成功上线，大概的流程就是
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;注册开发者账号&lt;/h2&gt;
&lt;p&gt;
   首先登陆 &lt;a href=&quot;https://developer.apple.com&quot;&gt;https://developer.apple.com&lt;/a&gt;。注意，这里只能使用国区的Apple ID进行注册，我第一次使用美区ID，但是需要美国的身份证明，换成国区ID后才成功注册。
&lt;/p&gt;

&lt;p&gt;
   第一天注册苹果会在48小时内进行审核，我刚开始还以为在成功缴费 &lt;b&gt;688元&lt;/b&gt; 后就行，但一直没有下一步，后来联系了苹果的支持，收到回复注册的开发者账号会在48小时内审核...&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;注册开发者账号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;软件准备(Flutter)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;图标设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;IPA上传&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;提交审核&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;其它&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;

&lt;a href=&quot;https://s.libforest.com/images/2025/03/maple-file-app-store.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2025/03/maple-file-app-store.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
欢迎大家下载使用 &lt;a href=&quot;https://apps.apple.com/us/app/maplefile/id6743229674&quot;&gt;https://apps.apple.com/us/app/maplefile/id6743229674&lt;/a&gt;
&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;
第一次上线APP，虽然走了不少弯路，不过总体上线过程还是挺顺利的。3月12日注册的开发者账号，今天（3月15日）即成功上线，大概的流程就是
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;注册开发者账号&lt;/h2&gt;
&lt;p&gt;
   首先登陆 &lt;a href=&quot;https://developer.apple.com&quot;&gt;https://developer.apple.com&lt;/a&gt;。注意，这里只能使用国区的Apple ID进行注册，我第一次使用美区ID，但是需要美国的身份证明，换成国区ID后才成功注册。
&lt;/p&gt;

&lt;p&gt;
   第一天注册苹果会在48小时内进行审核，我刚开始还以为在成功缴费 &lt;b&gt;688元&lt;/b&gt; 后就行，但一直没有下一步，后来联系了苹果的支持，收到回复注册的开发者账号会在48小时内审核。不过也不用48小时，我头天下午注册的，第二天早上9点多就收到了身份验证的邮件，因为注册用的是国区的ID，所以需要提交身份证照片，提交后一个小时内即审核通过。
&lt;/p&gt;

&lt;p&gt;
   审核通过后就能在开发者页面看到 &lt;b&gt;计划资源&lt;/b&gt;，否则会提示需要审核
&lt;/p&gt;

&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2025/03/maple-file-app-store-02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2025/03/maple-file-app-store-02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;软件准备(Flutter)&lt;/h2&gt;
&lt;p&gt;
   这里我走了不少弯路，在网上搜索相关教程时又要本地创建证书，又要申请Profile的，其实不必这么麻烦。
&lt;/p&gt;

&lt;p&gt;
   首先点击 &lt;b&gt;计划资源&lt;/b&gt; 里的 &lt;b&gt;标识符 (英文)&lt;/b&gt;，然后点击 + 号，依次选择 &lt;b&gt;App IDs&lt;/b&gt; -&amp;gt; &lt;b&gt;App&lt;/b&gt;，然后输入 &lt;b&gt;Bundle ID&lt;/b&gt; 及 &lt;b&gt;Description&lt;/b&gt;。如果需要在手机上进行测试，则需要在设备(Devices)里添加相应的设备，其中 &lt;b&gt;Device ID (UDID)&lt;/b&gt; 可以使用 Xcode，选择&lt;b&gt;Windows&lt;/b&gt; -&amp;gt; &lt;b&gt;Devices And Simulators&lt;/b&gt;查看。
&lt;/p&gt;

&lt;p&gt;
   接下来就不需要在网页上创建证书，只需要打开 Xcode，选择 &lt;b&gt;Runner(TARGETS)&lt;/b&gt; -&amp;gt; &lt;b&gt;Signing &amp;amp; Capabilities&lt;/b&gt;, 勾选 &lt;b&gt;Automatically manage signing&lt;/b&gt; 并选择 &lt;b&gt;Team&lt;/b&gt;，然后输入 &lt;b&gt;Bundle Identifier&lt;/b&gt; 即可
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;图标设计&lt;/h2&gt;
&lt;p&gt;
   相关的环境准备好后，就到了最耗时也最难（对于我而言）的 &lt;b&gt;图标设计&lt;/b&gt;。
&lt;/p&gt;

&lt;p&gt;
   对于一个没有学过UI设计的人来说，这确实是难题，虽然现在已有了AI的加持，但生成的设计图都不太符合我的审美，更重要的是，即使生成了一张符合的图片，但要把它转换为可用的APP图标还需要进行一系列的裁剪和修改，比如在MacOS上一个 &lt;code&gt;1024 * 1024&lt;/code&gt; 的图标就需要设置外边缘为&lt;code&gt;10%&lt;/code&gt;，即图标大小应为 &lt;code&gt;819.2像素&lt;/code&gt;，底部图层为透明色，除此之外，还需要设置图标的圆角大小为 &lt;code&gt;179.649&lt;/code&gt;，这些对于设计人员非常常见的参数，对于我却花费了不少时间。
&lt;/p&gt;

&lt;p&gt;
   在经过对AI生成的原图片进行不断地抠图、裁剪，但还是不满意之后，最后我还是决定自己绘制矢量图(SVG)，于是我通过搜索找到了 &lt;a href=&quot;https://inkscape.org&quot;&gt;Inkscape&lt;/a&gt;  这个软件，并在B站学习了两天半的时间，简单上手之后参考原图片自己绘制了红枫云盘的图标，还算不错（个人觉得，哈哈）。
&lt;/p&gt;

&lt;p&gt;
   有了图标后，就能使用 &lt;code&gt;flutter_launcher_icons&lt;/code&gt; 这个插件就能快速生成IOS/MacOS/Android的图标
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;flutter_launcher_icons&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;android&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;launcher_icon&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;image_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;assets/icon/icon.png&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;web&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;generate&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;image_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;assets/icon/icon.png&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;windows&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;generate&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;image_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;assets/icon/icon.png&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;ios&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;image_path_ios&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;assets/icon/icon.png&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;remove_alpha_ios&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;background_color_ios&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;#ffffff&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;macos&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;generate&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;image_path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;assets/icon/icon-macos.png&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
   同样的，也能使用 &lt;code&gt;flutter_native_splash&lt;/code&gt; 快速生成启动图
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;flutter_native_splash&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;color&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;#ffffff&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;color_dark&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;#121212&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;image&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;assets/icon/icon.png&amp;#34;&lt;/span&gt;

  &lt;span style=&quot;color:#66d9ef&quot;&gt;android_12&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;image&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;assets/icon/icon.png&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;icon_background_color&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;#ffffff&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;icon_background_color_dark&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;#121212&amp;#34;&lt;/span&gt;

  &lt;span style=&quot;color:#66d9ef&quot;&gt;web&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-4&quot;&gt;IPA上传&lt;/h2&gt;
&lt;p&gt;
   使用 &lt;code&gt;flutter build ipa&lt;/code&gt; 生成ipa文件，不需要在Xcode上操作，然后使用 &lt;b&gt;Transporter&lt;/b&gt; 这个苹果官方的软件进行上传，上传后的文件可在下一步里的 &lt;b&gt;构建版本&lt;/b&gt; 中选择。
&lt;/p&gt;

&lt;p&gt;
  
&lt;a href=&quot;https://s.libforest.com/images/2025/03/maple-file-app-store-03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2025/03/maple-file-app-store-03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;提交审核&lt;/h2&gt;
&lt;p&gt;
   首先登陆 &lt;a href=&quot;https://appstoreconnect.apple.com/apps&quot;&gt;https://appstoreconnect.apple.com/apps&lt;/a&gt;，创建好APP，并填写好相关的表单，上传好对应的截图，在 &lt;b&gt;构建版本&lt;/b&gt; 中选择上传的IPA文件。
&lt;/p&gt;

&lt;p&gt;
   这一步确实有很多表单要填写，包括 &lt;b&gt;App信息&lt;/b&gt;、&lt;b&gt;App隐私&lt;/b&gt;、&lt;b&gt;价格与销售范围&lt;/b&gt;，如果是付费App，还需要签署一些协议，添加银行卡，不过只要认真填写，在审核这一步能减少非常多与客服掰扯的时间，就像我一样，提交审核后一次就能通过，不需要反复地修改
&lt;/p&gt;

&lt;p&gt;
   注意：如果想上架国区，还需要进行&lt;b&gt;App备案&lt;/b&gt;，虽然我已经有了一个已备案的域名和服务器，但App备案是要重新提交并申请的，挺麻烦的，大概吧，所以红枫云盘是未上架国区的，也是唯一未上架的区域，如果想要下载使用，则需要使用其它区的Apple ID
&lt;/p&gt;

&lt;h2 id=&quot;heading-6&quot;&gt;其它&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 CNAPS(联行号)查看: &lt;a href=&quot;https://www.cwjyz.com.cn/bank/index.html&quot;&gt;https://www.cwjyz.com.cn/bank/index.html&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 缺少出口合规证明: &lt;code&gt;Info.plist&lt;/code&gt;中添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;key&amp;gt;ITSAppUsesNonExemptEncryption&amp;lt;/key&amp;gt;&amp;lt;false/&amp;gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>红枫云盘版本发布记录</title>
      <link href="https://honmaple.me/articles/2025/02/hong-feng-yun-pan-ban-ben-fa-bu-ji-lu.html" rel="alternate"></link>
      <published>Fri, 14 Feb 2025 17:55:50 +0000</published>
      <updated>Tue, 18 Mar 2025 15:08:28 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2025/02/hong-feng-yun-pan-ban-ben-fa-bu-ji-lu.html" type="text/html"/>
      <id>https://honmaple.me/articles/2025/02/hong-feng-yun-pan-ban-ben-fa-bu-ji-lu.html</id>
      <summary type="html">
&lt;h2&gt;&lt;code&gt;v1.0.5&lt;/code&gt; (2025-02-16)&lt;/h2&gt;

&lt;h3&gt;新增&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;桌面端增加右键菜单&lt;/li&gt;
&lt;li&gt;应用数据可选备份至云盘或者本地&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;修复&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;重试任务时应用退出&lt;/li&gt;
&lt;li&gt;任务列表图标颜色同主题保持一致&lt;/li&gt;
&lt;li&gt;MacOS沙盒模式下本地存储访问受限&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;优化&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;MacOS下应用图标使用白色背景&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;code&gt;v1.0.4&lt;/code&gt; (2025-02-03)&lt;/h2&gt;

&lt;h3&gt;新增&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;文件拖拽上传支持文件夹&lt;/li&gt;
&lt;li&gt;文件列表信息缓存&lt;/li&gt;
&lt;li&gt;S3存储增加 &lt;code&gt;list_version&lt;/code&gt; 选项&lt;/li&gt;
&lt;li&gt;SMB存储增加 &lt;code&gt;domain&lt;/code&gt; 选项&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;依赖&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Flutter版本升级至&lt;strong&gt;3.27.3...&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">
&lt;h2&gt;&lt;code&gt;v1.0.5&lt;/code&gt; (2025-02-16)&lt;/h2&gt;

&lt;h3&gt;新增&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;桌面端增加右键菜单&lt;/li&gt;
&lt;li&gt;应用数据可选备份至云盘或者本地&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;修复&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;重试任务时应用退出&lt;/li&gt;
&lt;li&gt;任务列表图标颜色同主题保持一致&lt;/li&gt;
&lt;li&gt;MacOS沙盒模式下本地存储访问受限&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;优化&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;MacOS下应用图标使用白色背景&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;code&gt;v1.0.4&lt;/code&gt; (2025-02-03)&lt;/h2&gt;

&lt;h3&gt;新增&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;文件拖拽上传支持文件夹&lt;/li&gt;
&lt;li&gt;文件列表信息缓存&lt;/li&gt;
&lt;li&gt;S3存储增加 &lt;code&gt;list_version&lt;/code&gt; 选项&lt;/li&gt;
&lt;li&gt;SMB存储增加 &lt;code&gt;domain&lt;/code&gt; 选项&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;依赖&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Flutter版本升级至&lt;strong&gt;3.27.3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;修复&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Alist根目录无法上传/新建目录/移动/复制&lt;/li&gt;
&lt;li&gt;拖拽文件导致重复上传 &lt;a href=&quot;https://github.com/honmaple/maple-file/issues/25&quot;&gt;issue25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;优化&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;添加/修改存储时，更多设置使用卡片分隔不同的选项&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;code&gt;v1.0.3&lt;/code&gt; (2025-01-24)&lt;/h2&gt;

&lt;h3&gt;新增&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;新增帮助文档，并使用外部浏览器查看&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;修复&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;修复自定义&lt;strong&gt;挂载目录&lt;/strong&gt;在非根目录&lt;code&gt;/&lt;/code&gt;时的问题&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;优化&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;使用 &lt;strong&gt;flex_color_scheme&lt;/strong&gt; 优化界面主题和颜色&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;code&gt;v1.0.2&lt;/code&gt; (2025-01-09)&lt;/h2&gt;

&lt;h3&gt;新增&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;windows&lt;/strong&gt;支持&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;移除&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;同步备份功能(bug较多无法使用)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;优化&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;桌面端UI&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;code&gt;v1.0.1&lt;/code&gt; (2025-01-06)&lt;/h2&gt;

&lt;h3&gt;新增&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;回收站功能&lt;/li&gt;
&lt;li&gt;文件加密和压缩&lt;/li&gt;
&lt;li&gt;桌面端文件拖拽上传(仅文件)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;优化&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;界面优化&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>红枫云盘发布v1.0.1版本，支持文件加密、压缩以及回收站功能</title>
      <link href="https://honmaple.me/articles/2025/01/红枫云盘v1.0.1.html" rel="alternate"></link>
      <published>Mon, 06 Jan 2025 15:32:50 +0000</published>
      <updated>Tue, 14 Jan 2025 16:26:58 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2025/01/红枫云盘v1.0.1.html" type="text/html"/>
      <id>https://honmaple.me/articles/2025/01/红枫云盘v1.0.1.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
距离红枫云盘第一次发布已经过去了一个多月，这期间很感谢阮一峰大佬的推荐，上了2024年最后一期 &lt;a href=&quot;https://github.com/ruanyf/weekly&quot;&gt;科技爱好者周刊&lt;/a&gt;，在短短几天时间就涨了 &lt;b&gt;150&lt;/b&gt; 多个Star ，今天发布了最新的 &lt;a href=&quot;https://github.com/honmaple/maple-file/releases/tag/v1.0.1&quot;&gt;v1.0.1版本&lt;/a&gt;，对比上一次有了重大更新，也带来了更多功能
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;文件加密&lt;/h2&gt;
&lt;p&gt;
   采用 &lt;b&gt;AES&lt;/b&gt; 加密算法，自动对上传或者复制到此存储的文件进行加密，客户端查看或下载时自动解密，再也不用担心上传的视频变成&lt;b&gt;8秒教育片&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
   相关参数:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件密码&lt;/b&gt;: 文件加密密码，不能为空
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件后缀&lt;/b&gt;: 默认为空，当设置为 &lt;code&gt;.bin&lt;/code&gt; 时，加密后的文件，文件名称会自动添加 &lt;code&gt;.bin&lt;/code&gt; 后缀
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件密码加密&lt;/b&gt;: 默认和文件密码相同...&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;文件加密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;文件压缩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;回收站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;文件拖拽上传&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;Web支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
距离红枫云盘第一次发布已经过去了一个多月，这期间很感谢阮一峰大佬的推荐，上了2024年最后一期 &lt;a href=&quot;https://github.com/ruanyf/weekly&quot;&gt;科技爱好者周刊&lt;/a&gt;，在短短几天时间就涨了 &lt;b&gt;150&lt;/b&gt; 多个Star ，今天发布了最新的 &lt;a href=&quot;https://github.com/honmaple/maple-file/releases/tag/v1.0.1&quot;&gt;v1.0.1版本&lt;/a&gt;，对比上一次有了重大更新，也带来了更多功能
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;文件加密&lt;/h2&gt;
&lt;p&gt;
   采用 &lt;b&gt;AES&lt;/b&gt; 加密算法，自动对上传或者复制到此存储的文件进行加密，客户端查看或下载时自动解密，再也不用担心上传的视频变成&lt;b&gt;8秒教育片&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
   相关参数:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件密码&lt;/b&gt;: 文件加密密码，不能为空
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件后缀&lt;/b&gt;: 默认为空，当设置为 &lt;code&gt;.bin&lt;/code&gt; 时，加密后的文件，文件名称会自动添加 &lt;code&gt;.bin&lt;/code&gt; 后缀
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件密码加密&lt;/b&gt;: 默认和文件密码相同，类似二次密码
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;文件名称加密&lt;/b&gt;: 默认不加密，加密后的名称会出现 &lt;code&gt;LKXPGd-ub3Jyu9msrZM5F2EETxxx&lt;/code&gt; 等形式
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;目录名称加密&lt;/b&gt;: 默认不加密，加密后的名称同上
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   &lt;b&gt;注意&lt;/b&gt;: 文件加密只能使用空目录，并对此空目录上传/复制文件(因为红枫云盘不知道你原来的文件是否已经加密)，并且开启后&lt;b&gt;不能修改加密相关的存储配置&lt;/b&gt;，否则将会导致无法打开已加密的文件，包括预览，下载等功能都会失效
&lt;/p&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;文件压缩&lt;/h2&gt;
&lt;p&gt;
   采用 &lt;b&gt;GZIP&lt;/b&gt; 压缩算法, 自动对上传或者复制到此存储的文件进行压缩，客户端查看或下载时自动解压缩
&lt;/p&gt;

&lt;p&gt;
   相关参数:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;&lt;b&gt;压缩水平&lt;/b&gt;&lt;/b&gt;: 可选默认、压缩率最高、压缩速度最快三种方式
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   &lt;b&gt;注意&lt;/b&gt;: 同文件加密一样，文件压缩只能使用空目录，并且开启后&lt;b&gt;不能修改压缩相关的存储配置&lt;/b&gt;
&lt;/p&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;回收站&lt;/h2&gt;
&lt;p&gt;
   删除文件时自动转为重命名文件(增加时间后缀)并移动到指定目录，想要恢复文件则进入回收站路径找到文件并复制到其它目录即可
&lt;/p&gt;

&lt;p&gt;
   相关参数:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;&lt;b&gt;回收站路径&lt;/b&gt;&lt;/b&gt;: 默认为空，为空时将会在存储的根目录创建一个名为 &lt;code&gt;.maplerecycle&lt;/code&gt; 的目录。回收站路径应当尽量避免使用常用的子路径，比如常用 &lt;code&gt;/a/b&lt;/code&gt;, 则不要设置回收站路径为 &lt;code&gt;/a/b&lt;/code&gt; 目录下的路径，否则删除目录转为移动目录时会出现问题
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;文件拖拽上传&lt;/h2&gt;
&lt;p&gt;
   桌面端增加文件拖拽上传，当前只支持文件，不支持目录拖拽
&lt;/p&gt;
&lt;h2 id=&quot;heading-5&quot;&gt;Web支持&lt;/h2&gt;
&lt;p&gt;
   浏览器也能管理文件，这样就能通过 &lt;b&gt;Docker&lt;/b&gt; 将红枫云盘部署到服务器或NAS
&lt;/p&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>开源一个离线版Alist，无需服务端部署即可管理云盘文件</title>
      <link href="https://honmaple.me/articles/2024/12/kai-yuan-ge-chi-xian-ban-alist-wu-xu-fu-wu-duan-bu-shu-ji-ke-guan-li-yun-pan-wen-jian.html" rel="alternate"></link>
      <published>Mon, 02 Dec 2024 13:09:48 +0000</published>
      <updated>Sat, 14 Dec 2024 18:09:47 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2024/12/kai-yuan-ge-chi-xian-ban-alist-wu-xu-fu-wu-duan-bu-shu-ji-ke-guan-li-yun-pan-wen-jian.html" type="text/html"/>
      <id>https://honmaple.me/articles/2024/12/kai-yuan-ge-chi-xian-ban-alist-wu-xu-fu-wu-duan-bu-shu-ji-ke-guan-li-yun-pan-wen-jian.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;Alist&lt;/b&gt; 是一个非常不错的云盘文件管理程序，不过需要一台服务器或者 &lt;b&gt;Nas&lt;/b&gt; 进行部署，当然，这也同样便于在网络分享文件。但如果只是个人使用，服务器部署以及多账户系统未免有些麻烦。我是一个怕麻烦的人，虽然我自己也在 &lt;b&gt;Nas&lt;/b&gt; 中部署了一个 &lt;b&gt;Alist&lt;/b&gt; 服务，但还是想要一个单独的 &lt;b&gt;离线版APP&lt;/b&gt;，&lt;b&gt;红枫云盘&lt;/b&gt; 就由此诞生。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;b&gt;红枫云盘&lt;/b&gt; 即 &lt;a href=&quot;https://github.com/honmaple/maple-file&quot;&gt;maple-file&lt;/a&gt;，名称由 &lt;b&gt;maple(枫叶)&lt;/b&gt; + &lt;b&gt;file(文件)&lt;/b&gt; 组成， 这原本是我很早之前写的一个基于 &lt;b&gt;Flask&lt;/b&gt; 的项目，主要用于图片上传，还有相册的功能，但已经很久没有使用和维护过了...&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;开发&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;Alist&lt;/b&gt; 是一个非常不错的云盘文件管理程序，不过需要一台服务器或者 &lt;b&gt;Nas&lt;/b&gt; 进行部署，当然，这也同样便于在网络分享文件。但如果只是个人使用，服务器部署以及多账户系统未免有些麻烦。我是一个怕麻烦的人，虽然我自己也在 &lt;b&gt;Nas&lt;/b&gt; 中部署了一个 &lt;b&gt;Alist&lt;/b&gt; 服务，但还是想要一个单独的 &lt;b&gt;离线版APP&lt;/b&gt;，&lt;b&gt;红枫云盘&lt;/b&gt; 就由此诞生。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;b&gt;红枫云盘&lt;/b&gt; 即 &lt;a href=&quot;https://github.com/honmaple/maple-file&quot;&gt;maple-file&lt;/a&gt;，名称由 &lt;b&gt;maple(枫叶)&lt;/b&gt; + &lt;b&gt;file(文件)&lt;/b&gt; 组成， 这原本是我很早之前写的一个基于 &lt;b&gt;Flask&lt;/b&gt; 的项目，主要用于图片上传，还有相册的功能，但已经很久没有使用和维护过了。本来我准备把新项目起名为 &lt;b&gt;Filesea&lt;/b&gt;，但又和我的另一个类似 &lt;b&gt;Alist&lt;/b&gt; 的项目名相同(未开源)，而且 &lt;b&gt;Filesea&lt;/b&gt; 和一个知名项目 &lt;b&gt;Seafile&lt;/b&gt; 过于相似，所以还是继续沿用之前的名称，毕竟对比之前的纯API也算得上是一个全新的升级和改版
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;功能&lt;/h2&gt;
&lt;p&gt;
   目前已经支持的存储：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 local(本地文件)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 smb
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 ftp
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 sftp
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 webdav
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 alist
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 又拍云
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   包括了文件上传、下载、重命名、移动、复制、创建文件夹、预览等功能，虽然部分功能比如预览还比较简陋，但持续优化中，未来可能会添加相册，文件同步和备份等功能
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 文件列表
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 文件预览: 支持文本文件，图片，音频，视频
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_16.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_16.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_17.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_17.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_07.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_07.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_08.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_08.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_09.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_09.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 上传和下载
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_10.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_10.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_11.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_11.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 重命名、移动、复制(包括多选)
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_04.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_04.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_05.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_05.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_06.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_06.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加修改存储
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_14.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_14.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_13.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_13.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 设置
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_18.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_18.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_12.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_12.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/2024/12/flutter_15.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/12/flutter_15.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;使用&lt;/h2&gt;
&lt;p&gt;
   目前提供了Android版本和MacOS版本的下载，下载地址: &lt;a href=&quot;https://github.com/honmaple/maple-file/releases/tag/v1.0.0&quot;&gt;https://github.com/honmaple/maple-file/releases/tag/v1.0.0&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;开发&lt;/h2&gt;
&lt;p&gt;
   我参考了 &lt;a href=&quot;https://github.com/GopeedLab/gopeed&quot;&gt;Gopeed&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/fregie/pho&quot;&gt;Pho&lt;/a&gt; 两个项目，客户端使用 &lt;b&gt;Flutter&lt;/b&gt;，后端服务使用 &lt;b&gt;Go&lt;/b&gt;，通过 &lt;code&gt;gomobile&lt;/code&gt; 把 &lt;b&gt;Go&lt;/b&gt; 服务打包成 &lt;code&gt;aar(安卓)&lt;/code&gt;，或者利用 &lt;code&gt;buildmode&lt;/code&gt; 打包成 &lt;code&gt;.dylib(MacOS)&lt;/code&gt;, 这样就能把服务端嵌入到本地客户端，来达到 &lt;b&gt;serverless&lt;/b&gt; 的目的。
&lt;/p&gt;

&lt;p&gt;
   如果想要添加更多存储，只需要使用 &lt;b&gt;Go&lt;/b&gt; 创建一个文件系统接口
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;FS&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;interface&lt;/span&gt; {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;WalkDir&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;WalkDirFunc&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;List&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) ([]&lt;span style=&quot;color:#a6e22e&quot;&gt;File&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Move&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Copy&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Rename&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Remove&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;MakeDir&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Context&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Get&lt;/span&gt;(&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;File&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Open&lt;/span&gt;(&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;FileReader&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Create&lt;/span&gt;(&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;FileWriter&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;Close&lt;/span&gt;() &lt;span style=&quot;color:#66d9ef&quot;&gt;error&lt;/span&gt;
}&lt;/pre&gt;

&lt;p&gt;
   然后注册一个新的存储名称
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// 注册服务
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;init&lt;/span&gt;() {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;driver&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Register&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;alist&amp;#34;&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt;() &lt;span style=&quot;color:#a6e22e&quot;&gt;driver&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Option&lt;/span&gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;Option&lt;/span&gt;{}
    })
}


&lt;span style=&quot;color:#75715e&quot;&gt;// 加载服务
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
   &lt;span style=&quot;color:#a6e22e&quot;&gt;_&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;github.com/honmaple/maple-file/server/pkg/driver/alist&amp;#34;&lt;/span&gt;
)&lt;/pre&gt;

&lt;p&gt;
   最后在客户端创建一个用于提交配置的表单即可，扩展性足够简单，也足够方便
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;...
DriverFormField(
  label: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;用户&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;.tr(context),
  value: _option[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;username&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;],
  isRequired: &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;,
  onTap: (result) {
    setState(() {
      _option[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;username&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;] &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; result;
    });

    widget.form.option &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; jsonEncode(_option);
  },
),
DriverFormField(
  type: DriverFormFieldType.password,
  label: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;密码&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;.tr(context),
  value: _option[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;],
  onTap: (result) {
    setState(() {
      _option[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;] &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; result;
    });

    widget.form.option &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; jsonEncode(_option);
  },
),&lt;/pre&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Flutter实现本地化多语言</title>
      <link href="https://honmaple.me/articles/2024/10/fluttershi-xian-ben-di-hua-duo-yu-yan.html" rel="alternate"></link>
      <published>Wed, 02 Oct 2024 13:12:27 +0000</published>
      <updated>Sat, 05 Oct 2024 20:13:59 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2024/10/fluttershi-xian-ben-di-hua-duo-yu-yan.html" type="text/html"/>
      <id>https://honmaple.me/articles/2024/10/fluttershi-xian-ben-di-hua-duo-yu-yan.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;内置组件本地化&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 添加依赖
&lt;/p&gt;

&lt;p&gt;
      Flutter默认组件的本地化只需要添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;flutter_localizations&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;sdk&lt;/span&gt;: flutter&lt;/pre&gt;
&lt;p&gt;
      使用命令行添加就是
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;flutter pub add flutter_localizations --sdk=flutter&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改入口组件 &lt;b&gt;main.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter_localizations/flutter_localizations.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  title: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Localizations Sample App&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
  localizationsDelegates...&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;内置组件本地化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;自定义本地化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;自定义本地化(非代码自动生成)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;本地化多语言的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;优化多语言选择&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;内置组件本地化&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 添加依赖
&lt;/p&gt;

&lt;p&gt;
      Flutter默认组件的本地化只需要添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;flutter_localizations&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;sdk&lt;/span&gt;: flutter&lt;/pre&gt;
&lt;p&gt;
      使用命令行添加就是
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;flutter pub add flutter_localizations --sdk=flutter&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改入口组件 &lt;b&gt;main.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter_localizations/flutter_localizations.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;&lt;/pre&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  title: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Localizations Sample App&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
  localizationsDelegates: [
    GlobalMaterialLocalizations.delegate,
    GlobalWidgetsLocalizations.delegate,
    GlobalCupertinoLocalizations.delegate,
  ],
  supportedLocales: [
    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;), &lt;span style=&quot;color:#75715e&quot;&gt;// English
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;), &lt;span style=&quot;color:#75715e&quot;&gt;// Chinese
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;  ],
  home: MyHomePage(),
);&lt;/pre&gt;
&lt;p&gt;
      这样Flutter内置组件所显示的语言就能和系统语言保持一致，如果想要手动修改，只需要添加参数
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  ...
  locale: Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;),
);&lt;/pre&gt;

&lt;p&gt;
      如果想要修改指定的组件，需要使用到 &lt;code&gt;Localizations.override&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Widget build(BuildContext context) {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; Scaffold(
    appBar: AppBar(
      title: Text(widget.title),
    ),
    body: Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;Widget&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[
          Localizations.override(
            context: context,
            locale: &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;),
            child: Builder(
              builder: (context) {
                &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; CalendarDatePicker(
                  initialDate: DateTime.now(),
                  firstDate: DateTime(&lt;span style=&quot;color:#ae81ff&quot;&gt;1900&lt;/span&gt;),
                  lastDate: DateTime(&lt;span style=&quot;color:#ae81ff&quot;&gt;2100&lt;/span&gt;),
                  onDateChanged: (value) {},
                );
              },
            ),
          ),
        ],
      ),
    ),
  );
}&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;自定义本地化&lt;/h2&gt;
&lt;p&gt;
   根据官方文档，可以利用 &lt;code&gt;flutter_localozations&lt;/code&gt; 和 &lt;code&gt;intl&lt;/code&gt; 来实现。但是如果根据官方文档，那可不是一般的麻烦，而是相当麻烦，操作步骤包括但不限于
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 修改 &lt;code&gt;pubsepc.yaml&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;l10n.yaml&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;.arb&lt;/code&gt; 文件
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
   当然，这一切也不能说是很麻烦，毕竟只要第一次改好，后续只用修改 &lt;code&gt;.arb&lt;/code&gt; 文件就能自动运行，但根据这个流程生成的多语言本地化，我觉得有几个问题：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 自动生成的 &lt;code&gt;.dart&lt;/code&gt; 文件是保存在 &lt;code&gt;{项目目录}/.dart_tool/flutter_gen/gen_l10n&lt;/code&gt; 目录下的，这会导致项目默认的代码没有多语言相关，只有一些不知所谓的 &lt;code&gt;.arb&lt;/code&gt; 文件，毕竟与多语言相关的代码都是自动生成的
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 也是最重要的一点， 我为什么要在默认语言下重复定义一个不能带空格，只允许定义符合 &lt;b&gt;dart方法名称&lt;/b&gt; 的关键字以供调用，比如一个简单的字符串
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)&lt;/pre&gt;

&lt;p&gt;
      我必须在默认语言定义一个
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;// app_es.arb
&amp;#34;helloWorld&amp;#34;: &amp;#34;Hello World&amp;#34;&lt;/pre&gt;

&lt;p&gt;
      然后在其它语言定义
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;// app_zh.arb
&amp;#34;helloWorld&amp;#34;: &amp;#34;你好 世界&amp;#34;&lt;/pre&gt;
&lt;p&gt;
      最后再修改默认的调用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(AppLocations.of(context).helloWorld)&lt;/pre&gt;
&lt;p&gt;
      我为什么不能直接使用原有的字符串呢，这样就不用再为默认的语言添加额外的翻译，比如
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(AppLocations.of(context).tr(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
   所以，我仔细研究了一下，大抵不用如此麻烦
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;自定义本地化(非代码自动生成)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 首先添加 &lt;b&gt;l10n.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;dart:async&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter/foundation.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter/widgets.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:flutter_localizations/flutter_localizations.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;package:intl/intl.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;as&lt;/span&gt; intl;

&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n_en.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;
&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n_zh.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;abstract&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;L10n&lt;/span&gt; {
  L10n(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; locale)
  &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; localeName &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; intl.Intl.canonicalizedLocale(locale.toString());

  &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; localeName;

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; L10n&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; of(BuildContext context) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; Localizations.of&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;(context, L10n);
  }

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; delegate &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; _L10nDelegate();

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; List&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;dynamic&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; localizationsDelegates &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;
  &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;dynamic&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[
    delegate,
    GlobalMaterialLocalizations.delegate,
    GlobalCupertinoLocalizations.delegate,
    GlobalWidgetsLocalizations.delegate,
  ];

  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; List&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;Locale&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; supportedLocales &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;Locale&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[
    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;),
    Locale(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;)
  ];

  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key);
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_L10nDelegate&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; LocalizationsDelegate&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; _L10nDelegate();

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  Future&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; load(Locale locale) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; SynchronousFuture&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;L10n&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;(lookupL10n(locale));
  }

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;bool&lt;/span&gt; isSupported(Locale locale) &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;].contains(locale.languageCode);

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;bool&lt;/span&gt; shouldReload(_L10nDelegate old) &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;;
}

L10n lookupL10n(Locale locale) {
  &lt;span style=&quot;color:#75715e&quot;&gt;// Lookup logic when only language code is specified.
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;  &lt;span style=&quot;color:#66d9ef&quot;&gt;switch&lt;/span&gt; (locale.languageCode) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; L10nEn();
    &lt;span style=&quot;color:#66d9ef&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; L10nZh();
  }

  &lt;span style=&quot;color:#66d9ef&quot;&gt;throw&lt;/span&gt; FlutterError(
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;L10n.delegate failed to load unsupported locale &amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;$&lt;/span&gt;locale&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;. This is likely &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;an issue with the localizations generation tool. Please file an issue &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;on GitHub with a reproducible sample app and the gen-l10n configuration &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;that was used.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;);
}&lt;/pre&gt;
&lt;p&gt;
      上述代码其实是由根据官方文档自动生成的 &lt;code&gt;.dart&lt;/code&gt; 文件转化而来
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加默认语言的翻译
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// l10n_en.dart
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;L10nEn&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; L10n {
  L10nEn([&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; locale &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;en&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;]) &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;super&lt;/span&gt;(locale);

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; translations[key] &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; key;
  }
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; translations &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {};&lt;/pre&gt;
&lt;p&gt;
      对的，你没有看错， &lt;code&gt;translations&lt;/code&gt; 甚至可以是空的，这样就不用重复定义默认语言的翻译
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加其它语言的翻译
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// l10n_zh.dart
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;l10n.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;L10nZh&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; L10n {
  L10nZh([&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; locale &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;]) &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;super&lt;/span&gt;(locale);

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; translations[key] &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; key;
  }
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; translations &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; {
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Settings&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;设置&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Basic Settings&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;基础设置&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Theme&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;主题&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Language&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;语言&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;About&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;关于&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;帮助&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;,
};&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改 &lt;b&gt;main.dart&lt;/b&gt; 入口组件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;app/l10n/l10n.dart&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;;

&lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MaterialApp(
  title: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Localizations Sample App&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;,
  localizationsDelegates: L10n.localizationsDelegates,
  supportedLocales: L10n.supportedLocales,
  home: MyHomePage(),
);&lt;/pre&gt;
&lt;p&gt;
      这样就能使用自定义的翻译了
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;本地化多语言的使用&lt;/h2&gt;
&lt;p&gt;
   最常用的是在 &lt;code&gt;Text&lt;/code&gt; 组件里
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(L10n.of(context)&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;.tr(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;
&lt;p&gt;
   但是所有的字符都要添加 &lt;code&gt;L10n.of(context)!&lt;/code&gt; 未免有些麻烦，所以我增加了自定义扩展
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;BuildContext&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;extension L10nContext on BuildContext {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; key) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; L10n.of(&lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;);
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;) {
      &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; key;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; t.tr(key);
  }
}&lt;/pre&gt;

&lt;p&gt;
     使用方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(context.tr(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;String&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;extension L10nString on &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt; tr(BuildContext context) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; L10n.of(context);
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;) {
      &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; t.tr(&lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;);
  }
}&lt;/pre&gt;

&lt;p&gt;
     使用方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;.tr(context))&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;Text&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;extension L10nText on Text {
  Text tr(BuildContext context) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; L10n.of(context);
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (t &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;|&lt;/span&gt; data &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;) {
      &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;this&lt;/span&gt;;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; Text(t.tr(data &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;&lt;/span&gt;),
      key: key,
      style: style,
      strutStyle: strutStyle,
      textAlign: textAlign,
      textDirection: textDirection,
      locale: locale,
      softWrap: softWrap,
      overflow: overflow,
      textScaler: textScaler,
      maxLines: maxLines,
      semanticsLabel: semanticsLabel,
      textWidthBasis: textWidthBasis);
  }
}&lt;/pre&gt;

&lt;p&gt;
     使用方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Text(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Hello World&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;).tr(context)&lt;/pre&gt;

&lt;p&gt;
     如此，就能最大限度的较少对原有代码的侵略性修改
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-5&quot;&gt;优化多语言选择&lt;/h2&gt;
&lt;p&gt;
   我这里选用的是 &lt;b&gt;riverpod&lt;/b&gt; 进行状态管理，首先定义一个本地语言的状态
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; localeProvider &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; StateProvider&lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt;((ref) {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;;
});&lt;/pre&gt;

&lt;p&gt;
   接着修改 &lt;b&gt;main.dart&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;MyApp&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;extends&lt;/span&gt; ConsumerWidget {
  &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; MyApp({&lt;span style=&quot;color:#66d9ef&quot;&gt;super&lt;/span&gt;.key});

  &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;override
  Widget build(BuildContext context, WidgetRef ref) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;final&lt;/span&gt; localeCode &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; ref.watch(localeProvider);

    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; MaterialApp(
      locale: L10n.delegate.isSupported(localeCode) &lt;span style=&quot;color:#f92672&quot;&gt;?&lt;/span&gt; Locale(localeCode) &lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;,
      ...
    );
  }
}&lt;/pre&gt;

&lt;p&gt;
   这样就能很方便地修改应用的显示语言
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;ref.read(localeProvider.notifier).state &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;zh&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;;&lt;/pre&gt;

&lt;h2 id=&quot;heading-6&quot;&gt;参考文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://docs.flutter.dev/ui/accessibility-and-internationalization/internationalization&quot;&gt;https://docs.flutter.dev/ui/accessibility-and-internationalization/internationalization&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://docs.flutter.cn/ui/accessibility-and-internationalization/internationalization&quot;&gt;https://docs.flutter.cn/ui/accessibility-and-internationalization/internationalization&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Tech/Coding/Flutter"></category>
    </entry>
    <entry xml:lang="zh">
      <title>为maple-translate增加更友好的sdcv离线翻译</title>
      <link href="https://honmaple.me/articles/2024/04/wei-maple-translatezeng-jia-geng-you-hao-de-sdcvchi-xian-fan-yi.html" rel="alternate"></link>
      <published>Mon, 22 Apr 2024 21:51:27 +0000</published>
      <updated>Mon, 22 Apr 2024 23:14:41 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2024/04/wei-maple-translatezeng-jia-geng-you-hao-de-sdcvchi-xian-fan-yi.html" type="text/html"/>
      <id>https://honmaple.me/articles/2024/04/wei-maple-translatezeng-jia-geng-you-hao-de-sdcvchi-xian-fan-yi.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
之前我写的Emacs翻译插件 &lt;b&gt;maple-translate&lt;/b&gt; 有一个 &lt;b&gt;sdcv&lt;/b&gt; 离线翻译的功能，它使用了 &lt;code&gt;Elisp&lt;/code&gt; 解析 &lt;b&gt;StarDict&lt;/b&gt; 的字典文件，所以不需要安装其它任何依赖。但是也是因为此原因，首次使用离线翻译需要等待字典文件加载到内存，这不是很友好，此次我将添加 &lt;b&gt;sdcv&lt;/b&gt; 二进制文件的支持，使离线翻译能够更加快捷方便
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
首先是安装 &lt;b&gt;sdcv&lt;/b&gt; 二进制文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install sdcv
└──╼ sdcv --help
用法：
  sdcv [选项…]  words

帮助选项：
  -h, --help...&lt;/pre&gt;</summary>
      <content type="html">
&lt;blockquote&gt;
&lt;p&gt;
之前我写的Emacs翻译插件 &lt;b&gt;maple-translate&lt;/b&gt; 有一个 &lt;b&gt;sdcv&lt;/b&gt; 离线翻译的功能，它使用了 &lt;code&gt;Elisp&lt;/code&gt; 解析 &lt;b&gt;StarDict&lt;/b&gt; 的字典文件，所以不需要安装其它任何依赖。但是也是因为此原因，首次使用离线翻译需要等待字典文件加载到内存，这不是很友好，此次我将添加 &lt;b&gt;sdcv&lt;/b&gt; 二进制文件的支持，使离线翻译能够更加快捷方便
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
首先是安装 &lt;b&gt;sdcv&lt;/b&gt; 二进制文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew install sdcv
└──╼ sdcv --help
用法：
  sdcv [选项…]  words

帮助选项：
  -h, --help                     显示帮助选项

应用程序选项：
  -v, --version                  display version information and exit
  -l, --list-dicts               display list of available dictionaries and exit
  -u, --use-dict=bookname        for search use only dictionary with this bookname
  -n, --non-interactive          for use in scripts
  -j, --json-output              print the result formatted as JSON
  --json                         print the result formatted as JSON
  -e, --exact-search             do not fuzzy-search for similar words, only return exact matches
  -0, --utf8-output              output must be in utf8
  -1, --utf8-input               input of sdcv in utf8
  -2, --data-dir=path/to/dir     use this directory as path to stardict data directory
  -x, --only-data-dir            only use the dictionaries in data-dir, do not search in user and system directories
  -c, --color                    colorize the output&lt;/pre&gt;

&lt;p&gt;
然后定义二进制文件的路径，如果 &lt;b&gt;sdcv&lt;/b&gt; 未安装，则返回为 &lt;code&gt;nil&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defvar maple-translate-sdcv-program (executable-find &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;sdcv&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))&lt;/pre&gt;

&lt;p&gt;
接着修改之前写好的 &lt;code&gt;maple-translate-sdcv&lt;/code&gt; 函数，通过判断 &lt;code&gt;maple-translate-sdcv-program&lt;/code&gt; 是否为空采取不同的翻译操作
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple-translate-sdcv(word &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;optional&lt;/span&gt; callback)
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Search WORD with sdcv, use async request if CALLBACK non-nil.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  (if maple-translate-sdcv-program
      (maple-translate-execute maple-translate-sdcv-program
        :args (&lt;span style=&quot;color:#a6e22e&quot;&gt;append&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-x&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-j&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-0&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-1&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-2&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
                      (cl-loop for dict in maple-translate-sdcv-dicts
                               collect (&lt;span style=&quot;color:#a6e22e&quot;&gt;expand-file-name&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;cdr&lt;/span&gt; dict) maple-translate-sdcv-dir))
                      (&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt; word))
        :format (maple-translate-sdcv-format)
        :callback callback)
    &lt;span style=&quot;color:#75715e&quot;&gt;;; ...&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;;; 使用ELisp解析并翻译&lt;/span&gt;
    ))&lt;/pre&gt;
&lt;p&gt;
需要说明的是，由于该函数接收一个 &lt;code&gt;callback&lt;/code&gt; 的变量，用于处理异步翻译，如果是同步翻译，可以直接使用 &lt;code&gt;call-process&lt;/code&gt; 获取结果
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(with-temp-buffer
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;call-process&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;sdcv&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-x&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-j&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-0&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-1&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;-2&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;/Users/xxx/.emacs.d/stardict/stardict-lazyworm-ec-2.4.2&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;word&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;buffer-string&lt;/span&gt;))&lt;/pre&gt;

&lt;p&gt;
但如果是异步翻译，则需要使用 &lt;code&gt;start-process&lt;/code&gt; ，再通过监听进程状态在进程结束后再获取翻译结果
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(let ((name (&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;maple-translate-process %s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;program)))
  (&lt;span style=&quot;color:#a6e22e&quot;&gt;set-process-sentinel&lt;/span&gt;
   (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;start-process&lt;/span&gt; name (&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*%s*&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt; name) &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;program &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;args)
   (lambda(process _)
     (unless (process-live-p process)
       (with-current-buffer (&lt;span style=&quot;color:#a6e22e&quot;&gt;process-buffer&lt;/span&gt; process)
         (prog1 (&lt;span style=&quot;color:#a6e22e&quot;&gt;funcall&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;callback &lt;span style=&quot;color:#f92672&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt;)
           (&lt;span style=&quot;color:#a6e22e&quot;&gt;kill-buffer&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-buffer&lt;/span&gt;))))))))&lt;/pre&gt;
&lt;p&gt;
这里的 &lt;b&gt;buffer&lt;/b&gt; 名称也可以通过 &lt;code&gt;(generate-new-buffer &amp;#34; *temp*&amp;#34; t)&lt;/code&gt; 生成一个临时 &lt;b&gt;buffer&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
最后就是翻译结果的展示，由于输出的是多行 &lt;b&gt;json&lt;/b&gt;，比如:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[]
[{&amp;#34;dict&amp;#34;: &amp;#34;懒虫简明英汉词典&amp;#34;,&amp;#34;word&amp;#34;:&amp;#34;word&amp;#34;,&amp;#34;definition&amp;#34;:&amp;#34;\n[wә:d]\nn.\n字, 词, 话, 消息, 诺言, 命令\nvt.\n为...措辞&amp;#34;}]&lt;/pre&gt;
&lt;p&gt;
所以我在解析翻译结果时取了个巧，没有使用 &lt;code&gt;(buffer-string)&lt;/code&gt; 而是直接在 &lt;b&gt;buffer&lt;/b&gt; 里操作，每次都跳到开始位置，再依次向下移动 &lt;b&gt;n&lt;/b&gt; 行，这个 &lt;b&gt;n&lt;/b&gt; 即是字典的数量，最后使用 &lt;code&gt;(thing-at-point &amp;#39;line t)&lt;/code&gt; 获取当前行的数据
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple-translate-sdcv-format()
  &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;Format result with sdcv output.&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  (let ((results (cl-loop for index from &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;
                          for dicts in maple-translate-sdcv-dicts
                          collect
                          (progn
                            (&lt;span style=&quot;color:#a6e22e&quot;&gt;goto-char&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;point-min&lt;/span&gt;))
                            (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; index)
                            (string-join (cl-loop for child across-ref (json-read-from-string (&lt;span style=&quot;color:#a6e22e&quot;&gt;decode-coding-string&lt;/span&gt; (thing-at-point &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;line&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;t&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;utf-8&lt;/span&gt;))
                                                  collect (&lt;span style=&quot;color:#a6e22e&quot;&gt;format&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;%s: %s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
                                                                  (alist-get &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;dict&lt;/span&gt; child)
                                                                  (alist-get &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;definition&lt;/span&gt; child)))
                                         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))))
    (unless (&lt;span style=&quot;color:#a6e22e&quot;&gt;null&lt;/span&gt; results)
      (string-join (cl-remove &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; results) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;))))&lt;/pre&gt;

&lt;p&gt;
最终效果
&lt;/p&gt;
&lt;video width=&quot;100%&quot; controls=&quot;&quot;&gt;
  &lt;source src=&quot;https://s.libforest.com/images/2024/04/maple-translate-sdcv.mov&quot; type=&quot;video/mp4&quot;&gt;
&lt;/video&gt;

&lt;p&gt;
&lt;b&gt;maple-translate&lt;/b&gt;的具体修改可见: &lt;a href=&quot;https://github.com/honmaple/emacs-maple-translate/commit/dfd0eae6486d62c26a3fa3fb07ee7e5f4640eb16&quot;&gt;dfd0eae&lt;/a&gt;
&lt;/p&gt;</content>
        <category term="Tech/Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>使用Homebrew Tap发布个人工具</title>
      <link href="https://honmaple.me/articles/2024/03/shi-yong-homebrew-tapfa-bu-ge-ren-gong-ju.html" rel="alternate"></link>
      <published>Thu, 28 Mar 2024 09:31:23 +0000</published>
      <updated>Wed, 09 Oct 2024 10:35:59 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2024/03/shi-yong-homebrew-tapfa-bu-ge-ren-gong-ju.html" type="text/html"/>
      <id>https://honmaple.me/articles/2024/03/shi-yong-homebrew-tapfa-bu-ge-ren-gong-ju.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
作为MacOS用户，&lt;b&gt;Homebrew&lt;/b&gt; 是必不可少的工具之一，正如它的描述所示 &lt;code&gt;The missing package manager for macOS&lt;/code&gt; —— 它提供了很多 &lt;b&gt;App Store&lt;/b&gt; 没有的软件和工具。
&lt;/p&gt;

&lt;p&gt;
而什么是 &lt;b&gt;Tap&lt;/b&gt;？&lt;b&gt;Tap&lt;/b&gt; 全称 &lt;code&gt;Third-Party Repositories&lt;/code&gt;，顾名思义为第三方仓库，它可以创建属于自己的软件集合，不用将软件发布到官方仓库，避免了和官方仓库的其它软件同名，也不用发PR，等审核等诸多优势。此次，我将创建一个 &lt;b&gt;Homebrew Tap&lt;/b&gt;，用于为我自己开发的部分软件和工具提供更加方便的安装方式。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;创建Tap&lt;/h2&gt;
&lt;p&gt;
   使用 &lt;code&gt;brew&lt;/code&gt; 命令创建...&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;创建Tap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;生成模版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;修改模版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;安装软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;上传到Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;结语&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
作为MacOS用户，&lt;b&gt;Homebrew&lt;/b&gt; 是必不可少的工具之一，正如它的描述所示 &lt;code&gt;The missing package manager for macOS&lt;/code&gt; —— 它提供了很多 &lt;b&gt;App Store&lt;/b&gt; 没有的软件和工具。
&lt;/p&gt;

&lt;p&gt;
而什么是 &lt;b&gt;Tap&lt;/b&gt;？&lt;b&gt;Tap&lt;/b&gt; 全称 &lt;code&gt;Third-Party Repositories&lt;/code&gt;，顾名思义为第三方仓库，它可以创建属于自己的软件集合，不用将软件发布到官方仓库，避免了和官方仓库的其它软件同名，也不用发PR，等审核等诸多优势。此次，我将创建一个 &lt;b&gt;Homebrew Tap&lt;/b&gt;，用于为我自己开发的部分软件和工具提供更加方便的安装方式。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;创建Tap&lt;/h2&gt;
&lt;p&gt;
   使用 &lt;code&gt;brew&lt;/code&gt; 命令创建
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew tap-new honmaple/tap
Initialized empty Git repository in /usr/local/Homebrew/Library/Taps/honmaple/homebrew-tap/.git/
[main (root-commit) 7d893ca] Create honmaple/tap tap
 3 files changed, 90 insertions(+)
 create mode 100644 .github/workflows/publish.yml
 create mode 100644 .github/workflows/tests.yml
 create mode 100644 README.md
==&amp;gt; Created honmaple/tap
/usr/local/Homebrew/Library/Taps/honmaple/homebrew-tap

When a pull request making changes to a formula (or formulae) becomes green
(all checks passed), then you can publish the built bottles.
To do so, label your PR as `pr-pull` and the workflow will be triggered.&lt;/pre&gt;

&lt;p&gt;
   创建后会提示在 &lt;code&gt;/usr/local/Homebrew/Library/Taps/honmaple/homebrew-tap/&lt;/code&gt; 目录生成一个 &lt;b&gt;Git&lt;/b&gt; 仓库
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;生成模版&lt;/h2&gt;
&lt;p&gt;
   比如我想要为已经打包好的工具 &lt;b&gt;Snow 0.1.2&lt;/b&gt; 生成模版，注意指定 &lt;code&gt;--tap&lt;/code&gt; 参数
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ brew create https://github.com/honmaple/snow/releases/download/v0.1.2/snow-darwin.tar.gz --tap honmaple/tap
Formula name [snow]:
...&lt;/pre&gt;
&lt;p&gt;
   在输入提示的工具名称后（也可以保持默认），这时会生成并使用默认编辑器打开 &lt;code&gt;/usr/local/Homebrew/Library/Taps/honmaple/homebrew-tap/Formula/snow.rb&lt;/code&gt;，内容如下:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# Documentation: https://docs.brew.sh/Formula-Cookbook&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#                https://rubydoc.brew.sh/Formula&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# PLEASE REMOVE ALL GENERATED COMMENTS BEFORE SUBMITTING YOUR PULL REQUEST!&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;Snow&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;Formula&lt;/span&gt;
  desc &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;static site generator&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  homepage &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  url &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;https://github.com/honmaple/snow/releases/download/v0.1.2/snow-darwin.tar.gz&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  sha256 &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;78a65c740eff24193132e063654bd1d7023f6687c94ce852e50a03a43eaba558&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  license &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;BSD-3-Clause&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;

  &lt;span style=&quot;color:#75715e&quot;&gt;# depends_on &amp;#34;cmake&amp;#34; =&amp;gt; :build&lt;/span&gt;

  &lt;span style=&quot;color:#66d9ef&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;install&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# Remove unrecognized options if they cause configure to fail&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# https://rubydoc.brew.sh/Formula.html#std_configure_args-instance_method&lt;/span&gt;
    system &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;./configure&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;--disable-silent-rules&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&quot;color:#f92672&quot;&gt;*&lt;/span&gt;std_configure_args
    &lt;span style=&quot;color:#75715e&quot;&gt;# system &amp;#34;cmake&amp;#34;, &amp;#34;-S&amp;#34;, &amp;#34;.&amp;#34;, &amp;#34;-B&amp;#34;, &amp;#34;build&amp;#34;, *std_cmake_args&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;end&lt;/span&gt;

  test &lt;span style=&quot;color:#66d9ef&quot;&gt;do&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# `test do` will create, run in and delete a temporary directory.&lt;/span&gt;
    &lt;span style=&quot;color:#75715e&quot;&gt;# ...&lt;/span&gt;
    system &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;end&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;修改模版&lt;/h2&gt;
&lt;p&gt;
   因为我此次发布的只是一个 &lt;b&gt;Go&lt;/b&gt; 编译的二进制文件，只用将文件添加到可执行目录即可。如需其它操作，请查阅&lt;a href=&quot;https://docs.brew.sh/Taps&quot;&gt;Homebrew Tap官方文档&lt;/a&gt;。
&lt;/p&gt;

&lt;p&gt;
   修改模版后内容如下：
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;Snow&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;Formula&lt;/span&gt;
  homepage &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;https://github.com/honmaple/snow&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  desc &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;static site generator&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  url &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;https://github.com/honmaple/snow/releases/download/v0.1.2/snow-darwin.tar.gz&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  sha256 &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;78a65c740eff24193132e063654bd1d7023f6687c94ce852e50a03a43eaba558&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  license &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;BSD-3-Clause&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;

  &lt;span style=&quot;color:#66d9ef&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;install&lt;/span&gt;
    bin&lt;span style=&quot;color:#f92672&quot;&gt;.&lt;/span&gt;install &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;snow&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;end&lt;/span&gt;

  test &lt;span style=&quot;color:#66d9ef&quot;&gt;do&lt;/span&gt;
    assert_match &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;snow version &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#{&lt;/span&gt;version&lt;span style=&quot;color:#e6db74&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;, shell_output(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;#{&lt;/span&gt;bin&lt;span style=&quot;color:#e6db74&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;/snow --version&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)
  &lt;span style=&quot;color:#66d9ef&quot;&gt;end&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;
   从模版文件中就能看出，如果我们需要发布下一版本，只需要修改 &lt;code&gt;url&lt;/code&gt; 和 &lt;code&gt;sha256&lt;/code&gt; 两个参数，其中 &lt;code&gt;sha256&lt;/code&gt; 可以使用 &lt;code&gt;sha256sum v0.1.2/snow-darwin.tar.gz&lt;/code&gt; 获得
&lt;/p&gt;

&lt;h2 id=&quot;heading-4&quot;&gt;安装软件&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install honmaple/tap/snow&lt;/pre&gt;
&lt;p&gt;
   &lt;b&gt;注意&lt;/b&gt;：不能直接使用 &lt;code&gt;brew install snow&lt;/code&gt;，因为如果在 &lt;code&gt;homebrew/core&lt;/code&gt; 有相同名称的包，默认将会安装 &lt;code&gt;homebrew/core&lt;/code&gt; 上的包，所以必须指明使用哪个 &lt;b&gt;Tap&lt;/b&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;上传到Github&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 首先需要到 &lt;b&gt;Github&lt;/b&gt; 创建一个公共仓库，取名 &lt;code&gt;homebrew-{Tap名称}&lt;/code&gt;, 比如我的是 &lt;code&gt;honmaple/homebrew-tap&lt;/code&gt;，注意名称必须是 &lt;code&gt;homebrew-&lt;/code&gt; 开头，方便后续直接使用 &lt;code&gt;{用户名}/{Tap名称}&lt;/code&gt;。创建好后先不要克隆到本地
      
&lt;a href=&quot;https://s.libforest.com/images/2024/03/homebrew-tap-01.jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2024/03/homebrew-tap-01.jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 复制之前创建好的 &lt;code&gt;honmaple/tap&lt;/code&gt; 目录，方便后续维护
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;cp -r /usr/local/Homebrew/Library/Taps/honmaple/homebrew-tap ~/Git/&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 修改仓库
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;cd ~/Git/homebrew-tap
# 删除默认的Github Action
rm -rf .github
# 添加远程
git remote add origin git@github.com:honmaple/homebrew-tap.git
# 添加软件
git add Formula/snow.rb
git commit -m &amp;#34;add snow.rb&amp;#34;
git push origin master&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 重置本地tap，首先需要卸载之前创建好的 &lt;code&gt;honmaple/tap&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew untap honmaple/tap&lt;/pre&gt;
&lt;p&gt;
      如果已经安装了 &lt;code&gt;homebrew/tap/snow&lt;/code&gt;, 需要先卸载
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew uninstall honmaple/tap/snow&lt;/pre&gt;

&lt;p&gt;
      在执行完 &lt;b&gt;修改仓库&lt;/b&gt; 这一步后，就可以重新添加 &lt;b&gt;tap&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew tap honmaple/tap&lt;/pre&gt;
&lt;p&gt;
      并重新安装想要的软件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;brew install honample/tap/snow&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;heading-6&quot;&gt;结语&lt;/h2&gt;
&lt;p&gt;
   至此，创建一个私人使用的 MacOS 软件包集合就此结束，我可以往里面添加一些自己写的软件和工具，可以是 &lt;b&gt;Bash&lt;/b&gt; 脚本，也可以是 &lt;b&gt;Go&lt;/b&gt; 编译好的二进制等，后面就不用再指定具体目录或者手动复制文件到 &lt;code&gt;$PATH/bin&lt;/code&gt; 目录下了。OK
&lt;/p&gt;</content>
        <category term="Tech"></category>
    </entry>
    <entry xml:lang="zh">
      <title>使用Go重写MetingJS的API</title>
      <link href="https://honmaple.me/articles/2023/12/shi-yong-gozhong-xie-metingjsde-api.html" rel="alternate"></link>
      <published>Tue, 26 Dec 2023 13:23:00 +0000</published>
      <updated>Mon, 01 Apr 2024 10:37:50 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/12/shi-yong-gozhong-xie-metingjsde-api.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/12/shi-yong-gozhong-xie-metingjsde-api.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;MetingJS&lt;/b&gt; 是一款通过获取网易云音乐或者QQ音乐等服务的歌单、歌手、歌曲、歌词等信息，然后使用开源HTML5播放器 &lt;b&gt;APlayer&lt;/b&gt; 进行播放的插件。而 &lt;b&gt;MetingJS&lt;/b&gt; 是一段很小的JS代码，它提供了一个默认的API接口：&lt;a href=&quot;https://api.i-meto.com/meting/api&quot;&gt;https://api.i-meto.com/meting/api&lt;/a&gt; , 但很不幸，该接口偶尔会出问题，作者也很久没有回复issue了。
&lt;/p&gt;

&lt;p&gt;
现在也有一个开源的 &lt;a href=&quot;https://github.com/injahow/meting-api&quot;&gt;injahow/meting-api&lt;/a&gt;，该服务同样使用PHP编写，我不太懂PHP，我只是想要设置一个缓存，来缓存所有的歌曲信息，而不仅仅是歌单列表，另外是可以支持内存缓存和本地磁盘缓存，而不是直接从本地文件中读取。
&lt;/p&gt;

&lt;p&gt;
基于此，与其自己改不是太懂的PHP，说不定会出现一些意想不到的漏洞...&lt;/p&gt;&lt;/blockquote&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;使用&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;手动部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;Docker部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;配置说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4&quot;&gt;命令行参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.5&quot;&gt;网页端设置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;演示&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;MetingJS&lt;/b&gt; 是一款通过获取网易云音乐或者QQ音乐等服务的歌单、歌手、歌曲、歌词等信息，然后使用开源HTML5播放器 &lt;b&gt;APlayer&lt;/b&gt; 进行播放的插件。而 &lt;b&gt;MetingJS&lt;/b&gt; 是一段很小的JS代码，它提供了一个默认的API接口：&lt;a href=&quot;https://api.i-meto.com/meting/api&quot;&gt;https://api.i-meto.com/meting/api&lt;/a&gt; , 但很不幸，该接口偶尔会出问题，作者也很久没有回复issue了。
&lt;/p&gt;

&lt;p&gt;
现在也有一个开源的 &lt;a href=&quot;https://github.com/injahow/meting-api&quot;&gt;injahow/meting-api&lt;/a&gt;，该服务同样使用PHP编写，我不太懂PHP，我只是想要设置一个缓存，来缓存所有的歌曲信息，而不仅仅是歌单列表，另外是可以支持内存缓存和本地磁盘缓存，而不是直接从本地文件中读取。
&lt;/p&gt;

&lt;p&gt;
基于此，与其自己改不是太懂的PHP，说不定会出现一些意想不到的漏洞(源自某安全公司多次CTF换来的教训)，不如使用熟悉的Go重写实现，毕竟核心代码也不是太多
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;功能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 支持网易云音乐，QQ音乐
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 支持新服务接口扩展
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 支持所有请求结果的缓存
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 更方便的配置(环境变量+配置文件)，而不用修改源文件
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 基于 &lt;b&gt;Go&lt;/b&gt; 编写，一次编译，到处运行
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;使用&lt;/h2&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;手动部署&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 下载仓库
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;git clone https://github.com/honmaple/meting-api&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 编译可执行文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;go mod download
go build -o meting-api .&lt;/pre&gt;
&lt;p&gt;
      或者使用 &lt;b&gt;Docker&lt;/b&gt; 进行编译, 编译后的文件在 &lt;code&gt;/usr/bin/meting-api&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker build -t meting-api .&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 运行
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;./meting-api -D&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.2&quot;&gt;Docker部署&lt;/h3&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker run --name meting-api --restart=always -d -p 8000:8000 -v /tmp/meting-cache:/opt/meting-api/cache honmaple/meting-api&lt;/pre&gt;
&lt;h3 id=&quot;heading-2.3&quot;&gt;配置说明&lt;/h3&gt;
&lt;p&gt;
    配置可以使用环境变量或者配置文件设置
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 环境变量: 使用 &lt;code&gt;METING_XXXX&lt;/code&gt;, 比如 &lt;code&gt;METING_CACHE_TTL&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 配置文件: 默认使用当前目录下的 &lt;code&gt;config.yaml&lt;/code&gt;, 如果使用 &lt;b&gt;Docker&lt;/b&gt; 部署，需要文件挂载到 &lt;code&gt;/opt/meting-api/config.yaml&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 具体配置:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# 缓存过期时间&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;cache.ttl&lt;/span&gt;:                  &lt;span style=&quot;color:#ae81ff&quot;&gt;3600&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 缓存路径，设置为空是禁用缓存&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;cache.path&lt;/span&gt;:                 &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;./cache&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 是否激活缓存&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;cache.enabled&lt;/span&gt;:              &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;

&lt;span style=&quot;color:#75715e&quot;&gt;# 服务监听地址，:8000 表示监听 0.0.0.0:8000&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;server.addr&lt;/span&gt;:                &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;:8000&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 对外服务地址，比如 https://api.xxxx.com/meting&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;server.host&lt;/span&gt;:                &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#75715e&quot;&gt;## cors设置&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;server.cors.allow_headers&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;server.cors.allow_origins&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;server.cors.allow_methods&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#75715e&quot;&gt;# 日志相关, out可选stdout,stderr,file，或者使用|分隔多个，比如stderr|file&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;logger.out&lt;/span&gt;:                 &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;stdout&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 日志级别&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;logger.level&lt;/span&gt;:               &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;info&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 日志文件名格式&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;logger.file_format&lt;/span&gt;:         &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;%Y%m%d&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# 日志文件保留数量&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;logger.file_rotation_count&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.4&quot;&gt;命令行参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 查看支持的服务
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;./meting-api --list&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 指定监听地址
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;./meting-api -a :8001
./meting-api --addr :8001&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 显示请求记录
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;./meting-api -D
./meting-api --debug&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 指定配置文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;./meting-api -c /etc/meting.yaml
./meting-api --config /etc/meting.yaml&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 显示当前配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;./meting-api config&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 删除指定缓存
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;./meting-api delete-cache &amp;#39;server:netease:type:${type}:id:${id}&amp;#39;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.5&quot;&gt;网页端设置&lt;/h3&gt;
&lt;p&gt;
    其中 &lt;code&gt;http://localhost:8000/&lt;/code&gt; 是对外服务的接口
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meting-js&lt;/span&gt;
  &lt;span style=&quot;color:#a6e22e&quot;&gt;server&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;netease&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#a6e22e&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;artist&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;6452&amp;#34;&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;meting-js&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;script&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&amp;gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;meting_api&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;http://localhost:8000/?server=:server&amp;amp;type=:type&amp;amp;id=:id&amp;amp;auth=:auth&amp;amp;r=:r&amp;#39;&lt;/span&gt;;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;script&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;script&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;演示&lt;/h2&gt;
   
  &lt;meting-js server=&quot;netease&quot; type=&quot;playlist&quot; id=&quot;9085878380&quot;&gt;&lt;/meting-js&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
 if (!shortcodes) {
     var shortcodes = {};
 }
 if (!shortcodes[&quot;music&quot;] &amp;&amp; document.querySelector(&quot;meting-js&quot;)) {
     var meting_api = &#39;https://api.honmaple.com/meting?server=:server&amp;type=:type&amp;id=:id&amp;auth=:auth&amp;r=:r&#39;;

     shortcodes.loadJS(&quot;https://honmaple.me/static/lib/js/APlayer.min.js&quot;, false, true);
     shortcodes.loadJS(&quot;https://honmaple.me/static/lib/js/Meting.min.js&quot;, false, true);

     shortcodes.loadCSS(&quot;https://honmaple.me/static/lib/css/APlayer.min.css&quot;);
     shortcodes.loadCSS(&quot;https://honmaple.me/static/css/aplayer.css&quot;);
 }
 shortcodes[&quot;music&quot;] = true;
&lt;/script&gt;</content>
        <category term="Tech"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Snow静态博客处理多图排版</title>
      <link href="https://honmaple.me/articles/2023/12/snowjing-tai-bo-ke-chu-li-duo-tu-pai-ban.html" rel="alternate"></link>
      <published>Sun, 17 Dec 2023 17:04:52 +0000</published>
      <updated>Wed, 06 Mar 2024 15:09:17 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/12/snowjing-tai-bo-ke-chu-li-duo-tu-pai-ban.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/12/snowjing-tai-bo-ke-chu-li-duo-tu-pai-ban.html</id>
      <summary type="html">
&lt;p&gt;
事情的缘由是我无意中发现之前写的部分文章里的图片没有渲染出来，才想起之前博客系统改版，从 &lt;b&gt;Pelican&lt;/b&gt; 切换到 &lt;b&gt;Snow&lt;/b&gt; 时竟然忘记了，看了一下原文，大部分都是以下形式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;row&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;col-md-4&amp;#34;&lt;/span&gt;&amp;gt;
    [[https://s.libforest.com/images/pic/西湖/日落(二...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;解析原始链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;并排显示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;多行显示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;图片懒加载和点击全屏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;显示效果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;
事情的缘由是我无意中发现之前写的部分文章里的图片没有渲染出来，才想起之前博客系统改版，从 &lt;b&gt;Pelican&lt;/b&gt; 切换到 &lt;b&gt;Snow&lt;/b&gt; 时竟然忘记了，看了一下原文，大部分都是以下形式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;row&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;col-md-4&amp;#34;&lt;/span&gt;&amp;gt;
    [[https://s.libforest.com/images/pic/西湖/日落(二).jpg]]
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;col-md-4&amp;#34;&lt;/span&gt;&amp;gt;
    [[https://s.libforest.com/images/pic/西湖/日落(三).jpg]]
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;col-md-4&amp;#34;&lt;/span&gt;&amp;gt;
    [[https://s.libforest.com/images/pic/西湖/日落(一).jpg]]
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
因为我之前的博客主题使用了 &lt;b&gt;Bootstrap&lt;/b&gt;，为了能够让多张图片并排显示，所以用了 &lt;b&gt;Bootstrap&lt;/b&gt; 里的 &lt;code&gt;.row .col-*&lt;/code&gt;。但前不久移除了全部的 &lt;b&gt;Bootstrap&lt;/b&gt;，现在当然不会生效。另外一点是我之前用的 &lt;b&gt;org mode&lt;/b&gt; 解析器可以直接解析 &lt;b&gt;HTML&lt;/b&gt; 中的链接，但更换了新的解析器 &lt;a href=&quot;https://github.com/honmaple/org-golang&quot;&gt;org-golang&lt;/a&gt; 后，已经无法不能解析HTML中的原始链接
&lt;/p&gt;

&lt;p&gt;
此次利用 &lt;b&gt;Snow&lt;/b&gt; 博客系统中的 &lt;b&gt;shortcode&lt;/b&gt; 功能实现多图排版，让图片可以并排显示，多行显示。
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;解析原始链接&lt;/h2&gt;
&lt;p&gt;
   首先在主题下创建一个名为 &lt;code&gt;img-layout&lt;/code&gt; 的 &lt;b&gt;shortcode&lt;/b&gt;，比如我使用的主题叫做 &lt;b&gt;snow&lt;/b&gt;，所以在 &lt;code&gt;themes/snow/templates/shortcodes&lt;/code&gt; 目录下创建一个 &lt;code&gt;img-layout.html&lt;/code&gt; 文件，并添加 &lt;code&gt;markdown&lt;/code&gt; 或者 &lt;code&gt;org&lt;/code&gt; 的 &lt;b&gt;filter&lt;/b&gt; 将原始文本解析成HTML
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;img-layout&amp;#34;&lt;/span&gt;&amp;gt;
  {%- if params.type == &amp;#34;markdown&amp;#34; %}
  {{ body | markdown | safe }}
  {%- else %}
  {{ body | org | safe }}
  {%- endif %}
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;p&gt;
   接着修改原始文章
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;#+begin_export html
&amp;lt;shortcode _name=&amp;#34;img-layout&amp;#34;&amp;gt;
[[https://s.libforest.com/images/pic/西湖/日落(二).jpg]]
[[https://s.libforest.com/images/pic/西湖/日落(三).jpg]]
[[https://s.libforest.com/images/pic/西湖/日落(一).jpg]]
&amp;lt;/shortcode&amp;gt;
#+end_export&lt;/pre&gt;

&lt;p&gt;
   经过修改，原始文章中的内容将会自动渲染成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;img-layout&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;img&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://s.libforest.com/images/pic/西湖/日落(二).jpg&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;img&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://s.libforest.com/images/pic/西湖/日落(三).jpg&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;img&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://s.libforest.com/images/pic/西湖/日落(一).jpg&amp;#34;&lt;/span&gt; /&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;并排显示&lt;/h2&gt;
&lt;p&gt;
   有了固定结构的HTML， 接着就可以添加 &lt;b&gt;css&lt;/b&gt;，使多张图片可以并排显示
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;img-layout&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;display&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;flex&lt;/span&gt;;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;flex-wrap&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;wrap&lt;/span&gt;;
}

.&lt;span style=&quot;color:#a6e22e&quot;&gt;img-layout&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;img&lt;/span&gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;width&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;auto&lt;/span&gt;;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;min-width&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;max-width&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;100&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;%&lt;/span&gt;;

    &lt;span style=&quot;color:#66d9ef&quot;&gt;flex&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;10000&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;%&lt;/span&gt;;
}

&lt;span style=&quot;color:#75715e&quot;&gt;/* 处理手机等设备图片显示问题 */&lt;/span&gt;
@&lt;span style=&quot;color:#66d9ef&quot;&gt;media&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;screen&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;and&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;max-width&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;600px&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;)&lt;/span&gt; {
    .&lt;span style=&quot;color:#a6e22e&quot;&gt;img-layout&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;img&lt;/span&gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;min-width&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;100&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;%&lt;/span&gt;
    }
}

&lt;span style=&quot;color:#75715e&quot;&gt;/* 添加图片上下左右间隔 */&lt;/span&gt;
.&lt;span style=&quot;color:#a6e22e&quot;&gt;img-layout&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;margin&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;-0.25&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;rem&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;-0.25&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;rem&lt;/span&gt; &lt;span style=&quot;color:#75715e&quot;&gt;!important&lt;/span&gt;;
}

.&lt;span style=&quot;color:#a6e22e&quot;&gt;img-layout&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;*&lt;/span&gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;margin&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;rem&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0.25&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;rem&lt;/span&gt; &lt;span style=&quot;color:#75715e&quot;&gt;!important&lt;/span&gt;;
}&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;多行显示&lt;/h2&gt;
&lt;p&gt;
   多行显示可以利用文件解析时每次遇到空行都会生成一个新的段落，比如
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;[[https://s.libforest.com/images/pic/西湖/日落(一).jpg]]

[[https://s.libforest.com/images/pic/西湖/日落(二).jpg]]&lt;/pre&gt;
&lt;p&gt;
   就会生成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;img&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://s.libforest.com/images/pic/西湖/日落(一).jpg&amp;#34;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;img&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://s.libforest.com/images/pic/西湖/日落(二).jpg&amp;#34;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   故如果需要多行显示，只用在多张图片中间添加一个空行即可
&lt;/p&gt;

&lt;h2 id=&quot;heading-4&quot;&gt;图片懒加载和点击全屏&lt;/h2&gt;
&lt;p&gt;
   之前的图片懒加载和点击全屏的功能我也是利用 &lt;b&gt;Snow&lt;/b&gt; 中的 &lt;b&gt;shortcode&lt;/b&gt; 功能实现的，我在 &lt;code&gt;themes/snow/templates/shortcodes&lt;/code&gt; 目录下建立了一个 &lt;code&gt;img.html&lt;/code&gt; 的文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ params.src }}&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;data-fancybox&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;img&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;data-src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ params.src + &amp;#39;-thumb&amp;#39; }}&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;lazyload&amp;#34;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   这样，文章内所有的 &lt;code&gt;img&lt;/code&gt; 标签的图片都会加上懒加载和点击全屏的功能(基于 &lt;b&gt;lazysizes&lt;/b&gt; 和 &lt;b&gt;fancybox&lt;/b&gt;)
&lt;/p&gt;

&lt;p&gt;
   但是，由于 &lt;b&gt;Snow&lt;/b&gt; 中 &lt;b&gt;shortcode&lt;/b&gt; 的实现是一次性遍历 &lt;b&gt;HTML DOM&lt;/b&gt;，无法在一个 &lt;b&gt;shortcode&lt;/b&gt; 内部调用另一个 &lt;b&gt;shortcode&lt;/b&gt;。
   所幸 &lt;b&gt;Snow&lt;/b&gt; 是我自己写的，思索片刻，我在 &lt;b&gt;shortcode&lt;/b&gt; 实现中加入了三行代码，这样就能在一个 &lt;b&gt;shortcode&lt;/b&gt; 中重复调用其它的 &lt;b&gt;shortcode&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;vars := map[string]interface{}{
...
&lt;span style=&quot;color:#a6e22e&quot;&gt;+	&amp;#34;_shortcode&amp;#34;: func(s string) string {
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+		return self.shortcode(page, s)
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+	},
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;}
&lt;/pre&gt;

&lt;p&gt;
   然后修改 &lt;code&gt;img-layout.html&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;img-layout&amp;#34;&lt;/span&gt;&amp;gt;
  {%- if params.type == &amp;#34;markdown&amp;#34; %}
  {{ _shortcode(body | markdown) | safe }}
  {%- else %}
  {{ _shortcode(body | org) | safe }}
  {%- endif %}
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;p&gt;
   最后添加 &lt;b&gt;css&lt;/b&gt; 样式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- .img-layout p &amp;gt; img {
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ .img-layout p &amp;gt; img, .img-layout p &amp;gt; a {
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#a6e22e&quot;&gt;+ .img-layout p &amp;gt; a &amp;gt; img {
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+     height: 100%;
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ }
&lt;/span&gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;显示效果&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 两张图片
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(三).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(三).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(一).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(一).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 三张图片
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(二).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(二).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(三).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(三).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(一).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(一).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 多行显示
&lt;/p&gt;
     &lt;div class=&quot;img-layout&quot;&gt;
&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(二).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(二).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(三).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(三).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(一).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(一).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(二).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(二).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     
&lt;a href=&quot;https://s.libforest.com/images/pic/西湖/日落(三).jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/pic/西湖/日落(三).jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-6&quot;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;a href=&quot;https://immmmm.com/about-images-gird/&quot;&gt;https://immmmm.com/about-images-gird/&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Tech"></category>
    </entry>
</feed>