<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
  <title>紅楓吟 - index</title>
    <subtitle>风落花语风落天，花落风雨花落田.</subtitle>
  <link href="https://honmaple.me/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://honmaple.me/index.html"/>
  <generator uri="https://github.com/honmaple/snow">Snow</generator>
    <updated>Tue, 04 Jul 2023 13:25:46 +0000</updated>
  <id>https://honmaple.me</id>
    <entry xml:lang="zh">
      <title>绿联DX4600 Pro安装一个超酷超帅的Docker</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 04 Jul 2023 12:37:02 +0000</published>
      <updated>Tue, 04 Jul 2023 13:25:46 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/07/绿联DX4600 Pro安装一个超酷超帅的Docker.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/07/绿联DX4600 Pro安装一个超酷超帅的Docker.html</id>
      <summary type="html">
&lt;p&gt;
绿联Nas的系统真是一言难尽，所以最近几天我都在寻找一种安装群晖的教程，也知晓群晖其实也没那么容易安装，主要是安装群晖后，有很大的概率&lt;b&gt;导致机器指示灯，风扇，甚至M.2固态失效&lt;/b&gt;，也正因为此，虽然已经整理好了安装的教程，但迟迟没有动手，此次在网上搜寻教程时无意中发现了一个超酷超帅的Docker镜像，安装后真的会惊叹为何会有如此棒的东西，它就是
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;

&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/kroese/virtual-dsm&quot;&gt;kroese/virtual-dsm&lt;/a&gt; ，一个利用Docker管理群晖虚拟机的镜像，对于没有虚拟机功能的绿联Nas来说，无疑是非常棒地既可以体验本地群晖系统，又不用刷机改引导，格式化硬盘的方法
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;安装教程&lt;/h2&gt;
&lt;p&gt;
   安装流程和之前的已有的一篇文章相差不大 &lt;a href=&quot;https://post.smzdm.com/p/an36zmz2/&quot;&gt;绿联DX4600安装docker黑群晖&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   当然这里也会写上部分我自己特别折腾的记录，大家可以放心食用
&lt;/p&gt;

&lt;h3 id=&quot;heading-1.1&quot;&gt;下载镜像&lt;/h3&gt;
&lt;p&gt;
    打开绿联Docker，输入 &lt;code&gt;kroese/virtual-dsm&lt;/code&gt; 下载镜像
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-1.2&quot;&gt;使用ssh登录到后台...&lt;/h3&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;安装教程&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.1&quot;&gt;下载镜像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.2&quot;&gt;使用ssh登录到后台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1.3&quot;&gt;使用Docker命令行安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;折腾教程&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;群晖本地IP(macvlan)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;webdav挂载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;其它&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;
绿联Nas的系统真是一言难尽，所以最近几天我都在寻找一种安装群晖的教程，也知晓群晖其实也没那么容易安装，主要是安装群晖后，有很大的概率&lt;b&gt;导致机器指示灯，风扇，甚至M.2固态失效&lt;/b&gt;，也正因为此，虽然已经整理好了安装的教程，但迟迟没有动手，此次在网上搜寻教程时无意中发现了一个超酷超帅的Docker镜像，安装后真的会惊叹为何会有如此棒的东西，它就是
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;

&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/kroese/virtual-dsm&quot;&gt;kroese/virtual-dsm&lt;/a&gt; ，一个利用Docker管理群晖虚拟机的镜像，对于没有虚拟机功能的绿联Nas来说，无疑是非常棒地既可以体验本地群晖系统，又不用刷机改引导，格式化硬盘的方法
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;安装教程&lt;/h2&gt;
&lt;p&gt;
   安装流程和之前的已有的一篇文章相差不大 &lt;a href=&quot;https://post.smzdm.com/p/an36zmz2/&quot;&gt;绿联DX4600安装docker黑群晖&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   当然这里也会写上部分我自己特别折腾的记录，大家可以放心食用
&lt;/p&gt;

&lt;h3 id=&quot;heading-1.1&quot;&gt;下载镜像&lt;/h3&gt;
&lt;p&gt;
    打开绿联Docker，输入 &lt;code&gt;kroese/virtual-dsm&lt;/code&gt; 下载镜像
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-1.2&quot;&gt;使用ssh登录到后台&lt;/h3&gt;
&lt;p&gt;
    其中登录教程在我之前的一篇文章中有介绍 &lt;a href=&quot;https://honmaple.me/articles/2023/06/绿联DX4600 Pro禁用迅雷和中国移动云盘进程.html&quot;&gt;绿联DX4600 Pro禁用迅雷和中国移动云盘进程&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    这里就再简单介绍一下:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 开启远程协助，记住验证码
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 重启机器(注意先保存进行中的任务)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 使用 &lt;b&gt;ssh&lt;/b&gt; 客户端登录，端口 &lt;b&gt;922&lt;/b&gt;，密码 &lt;code&gt;L#W$%W1uGa&lt;/code&gt; 加上验证码，用户 &lt;b&gt;root&lt;/b&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;heading-1.3&quot;&gt;使用Docker命令行安装&lt;/h3&gt;
&lt;p&gt;
    首先需要验证挂载的目录，我这里是找了两个已经创建并挂载了本地存储的镜像，使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker inspect --format &amp;#34;{{json .HostConfig.Mounts}}&amp;#34; 镜像名&lt;/pre&gt;
&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    查看挂载的实际目录，可以看出Docker实际挂载的目录由
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;/mnt/media_rw/ + 硬盘UUID + /.ugreen_nas/ + 用户ID + 硬盘目录&lt;/pre&gt;
&lt;p&gt;
    这几部分构成，那么就好办了，首先创建一个&lt;b&gt;DSM的目录&lt;/b&gt;，用于存放群晖虚拟机文件，我这里选择&lt;b&gt;固态硬盘&lt;/b&gt;，避免使用机械硬盘&lt;b&gt;导致硬盘无法休眠&lt;/b&gt;，如果选择其它硬盘，需要先创建一个没什么用的Docker挂载目录，然后使用 &lt;code&gt;inspect&lt;/code&gt; 找到实际的路径
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    建立好目录后使用命令行安装镜像
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-04.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-04.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    其中的几个参数
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;DISK_SIZE=100G&lt;/b&gt;: 分配给群晖虚拟机100G的磁盘空间，这部分空间会作为&lt;b&gt;存储1&lt;/b&gt;使用
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;ALLOCATE=N&lt;/b&gt;: 是否预分配100G的大小(Y)，还是按照实际大小展示在绿联Nas上(N)(这个参数貌似没生效)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;CPU_CORES=2&lt;/b&gt;: 分配给虚拟机的核数，我的是 &lt;b&gt;n6005&lt;/b&gt;，四核，所以分了两核给群晖
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;RAM_SIZE=8192M&lt;/b&gt;: 分配给虚拟机的内存大小
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;--network 实际的网络&lt;/b&gt;: 也可以不写，使用默认的 &lt;code&gt;Docker bridge&lt;/code&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    创建完成后使用 &lt;code&gt;docker logs -f DSM&lt;/code&gt; 查看日志，直到日志显示
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-05.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-05.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    在此期间，也可以打开浏览器，使用绿联Nas &lt;b&gt;IP+端口5000&lt;/b&gt; 进行访问
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-06.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-06.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-07.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-07.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    然后就是正常的群晖初始化，至此，想要体验本地群晖系统的就可以行动了
&lt;/p&gt;

&lt;p&gt;
    &lt;b&gt;等等，后面还有&lt;/b&gt;。。。
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;折腾教程&lt;/h2&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;群晖本地IP(macvlan)&lt;/h3&gt;
&lt;p&gt;
    按照GitHub上的教程，我原本想要配置一个和局域网内其它设备相同网段的IP给群晖虚拟机，所以我创建了一个基于 &lt;code&gt;macvlan&lt;/code&gt; 的网络
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker network create -d macvlan --subnet=192.168.31.0/24 --gateway=192.168.31.1 --ip-range=192.168.31.66/32 -o parent=eth0  dsmnet&lt;/pre&gt;

&lt;p&gt;
    然后使用 &lt;code&gt;--network dsmnet&lt;/code&gt; 重新创建Docker，结果怎么着，报错了
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker: Error response from daemon: failed to create the macvlan port: operation not supported.&lt;/pre&gt;

&lt;p&gt;
    第一眼我还觉得这是由于docker打包脚本里的 &lt;code&gt;EXPOSE&lt;/code&gt; 的锅，甚至去搜索能否禁用该操作，结果也是显而易见的，什么都没找到。后来仔细看了一下报错信息：&lt;code&gt;operation not supported&lt;/code&gt;
    好吧，确认一下 &lt;code&gt;macvlan&lt;/code&gt; 相关的模块是否被加载
&lt;/p&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;lsmod | grep macvlan&lt;/pre&gt;

&lt;p&gt;
    果然，&lt;b&gt;绿联Nas默认是没有macvlan模块的&lt;/b&gt;，所以想用绿联Nas部署一个openwrt旁路由的可以先歇了。那么，我能否自己安装macvlan模块呢？
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-08.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-08.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    对不起，打扰了。不对，内核版本不符，那么我去下载一个和内核版本相符的文件，使用 &lt;b&gt;uname -r&lt;/b&gt; 看一下绿联用的版本
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;5.10.120&lt;/pre&gt;

&lt;p&gt;
    我直接去官方库里找，还好找到了，同样使用的 &lt;b&gt;5.10.120-1&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;wget https://downloads.openwrt.org/releases/22.03.0-rc4/targets/x86/64/packages/kmod-macvlan_5.10.120-1_x86_64.ipk&lt;/pre&gt;

&lt;p&gt;
    继续安装，结果还是一样
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-09.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-09.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
    因为我对openwrt不太熟悉，实在进行不下去了，&lt;b&gt;只好放弃&lt;/b&gt;。不过也能看出绿联还是编译了一些属于自己的东西的，没有直接使用默认的openwrt内核，不过现在大概只能等绿联自己升级固件来默认支持macvlan了，或者有没有大佬能够解答一下这个问题
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;webdav挂载&lt;/h3&gt;
&lt;p&gt;
    因为docker安装的群晖无法直接使用插入的硬盘，甚至不能映射某个目录到群晖虚拟机，所以如果想用群晖来操作绿联Nas上面的文件，只能通过网络挂载
&lt;/p&gt;

&lt;p&gt;
    绿联本身支持的网络挂载有限，不支持&lt;code&gt;NFS&lt;/code&gt;，但是还好可以支持&lt;code&gt;webdav&lt;/code&gt;和&lt;code&gt;ftp&lt;/code&gt;，那么可以去群晖web管理界面，打开 &lt;b&gt;file station -&amp;gt; 工具 -&amp;gt; 远程连接 -&amp;gt; 连接设置 -&amp;gt; ftp/webdav&lt;/b&gt; 进行配置
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-10.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-10.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-11.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-11.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    你以为我要说的就这，这不是&lt;b&gt;显而易见，浅显易懂，入口即化&lt;/b&gt;的吗？实际上，除了&lt;code&gt;ftp&lt;/code&gt;可以正常挂载外，&lt;code&gt;webdav&lt;/code&gt;却是死活挂载不了，总是提示&lt;b&gt;连接被服务器拒绝&lt;/b&gt;，搞得我还以为绿联是不是连一个基础的webdav都没做好，但我用我的mac连接又可以正常挂载，差点把我整emo
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-12.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-12.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    我可以确认我的配置是对的，那到底是哪里出了问题，打开群晖的&lt;b&gt;ssh&lt;/b&gt;，也确认了是可以正常和宿主机通信的
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-13.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-13.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    最后搞得实在没办法了，抓包吧，还好群晖默认已经安装了&lt;b&gt;tcpdump&lt;/b&gt;，只需要生成&lt;b&gt;pcap&lt;/b&gt;文件就行
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;tcpdump -i eth0 host 192.168.31.65 -w ugreen/webdav.pcap&lt;/pre&gt;

&lt;p&gt;
    终端运行抓包命令，另一边在群晖界面进行添加webdav的操作，等待再次提示连接被服务器拒绝后，再等待5s，暂停抓包，然后把 &lt;b&gt;webdav.pcap&lt;/b&gt; 下载到本地，使用 &lt;b&gt;wireshark&lt;/b&gt; 查看
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-14.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-14.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    乍一看没什么问题，都是正常的&lt;b&gt;DNS查询&lt;/b&gt;和&lt;b&gt;TCP握手&lt;/b&gt;，可仔细一看，怎么会&lt;b&gt;多了一个斜杆&lt;/b&gt;，而且服务端返回了401错误
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-15.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/07/DX4600Pro-DSM-15.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    原来群晖挂载webdav的路径&lt;b&gt;一定不能使用斜杆开头&lt;/b&gt;，&lt;b&gt;一定不能使用斜杆开头&lt;/b&gt;，&lt;b&gt;一定不能使用斜杆开头&lt;/b&gt;，重要的事情说三遍，需要把 &lt;code&gt;/dav/share/&lt;/code&gt; 改成 &lt;code&gt;dav/share/&lt;/code&gt; (注意，绿联webdav路径后必须有一个斜杆)
&lt;/p&gt;

&lt;p&gt;
    至此，webdav挂载也ok了
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;其它&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
 在使用 &lt;b&gt;非macvlan&lt;/b&gt; 网络创建的群晖系统里内置的 &lt;b&gt;IP 20.20.20.21&lt;/b&gt; 以及 &lt;b&gt;网关20.20.20.1&lt;/b&gt; 是不能修改的，修改后可能会导致无法从浏览器访问群晖
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 可以修改DNS服务为&lt;b&gt;局域网网关&lt;/b&gt;或者&lt;b&gt;自建DNS的IP&lt;/b&gt;，修改后记得重启群晖系统
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 功耗，启动 &lt;code&gt;virtual-dsm&lt;/code&gt; 前我的机器功耗大概是&lt;b&gt;18W&lt;/b&gt;，启动后在&lt;b&gt;26W&lt;/b&gt;左右，一段时间后又会变成&lt;b&gt;19W&lt;/b&gt;，这应该和系统内运行的任务有关
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;</content>
        <category term="Life"></category>
    </entry>
    <entry xml:lang="zh">
      <title>重大BUG——绿联NAS用户暂时不要使用文件同步功能</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 27 Jun 2023 22:58:05 +0000</published>
      <updated>Tue, 27 Jun 2023 23:09:58 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/06/重大BUG——绿联NAS用户暂时不要使用文件同步功能.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/06/重大BUG——绿联NAS用户暂时不要使用文件同步功能.html</id>
      <summary type="html">
&lt;p&gt;
前不久 &lt;b&gt;618&lt;/b&gt; 入手了一个&lt;b&gt;绿联 DX4600 Pro&lt;/b&gt;，差不多用了快一个月，具体吐槽的点就不说了，毕竟平时 &lt;b&gt;Docker&lt;/b&gt; 用的比较多，自带的应用只能说能用，昨天测试了一下文件同步和时间机器的功能，却无意中发现了一个&lt;b&gt;重大BUG&lt;/b&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
绿联的文件同步会修改本地源文件的权限，本地文件原来是 &lt;b&gt;644&lt;/b&gt; 的权限，使用文件同步会被直接修改成 &lt;b&gt;755&lt;/b&gt;，还好我只测试了一个目录，而且这个目录使用了Git进行管理，可以快速恢复，如果是整机备份并且没有用Git或者其它版本系统进行管理的话，我只能说，你们有福了，一个文件一个文件地恢复吧
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;b&gt;复现步骤：&lt;/b&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;本地创建一个测试目录&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;客户端文件同步里添加该目录&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   设置完成后可以看到原始目录下会多出几个目录，这个不用管
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-04.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-04.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;修改文件并等待文件同步完成&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-05.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-05.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   这时会发现&lt;b&gt;无论修改多少次...&lt;/b&gt;&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;本地创建一个测试目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;客户端文件同步里添加该目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;修改文件并等待文件同步完成&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;
前不久 &lt;b&gt;618&lt;/b&gt; 入手了一个&lt;b&gt;绿联 DX4600 Pro&lt;/b&gt;，差不多用了快一个月，具体吐槽的点就不说了，毕竟平时 &lt;b&gt;Docker&lt;/b&gt; 用的比较多，自带的应用只能说能用，昨天测试了一下文件同步和时间机器的功能，却无意中发现了一个&lt;b&gt;重大BUG&lt;/b&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
绿联的文件同步会修改本地源文件的权限，本地文件原来是 &lt;b&gt;644&lt;/b&gt; 的权限，使用文件同步会被直接修改成 &lt;b&gt;755&lt;/b&gt;，还好我只测试了一个目录，而且这个目录使用了Git进行管理，可以快速恢复，如果是整机备份并且没有用Git或者其它版本系统进行管理的话，我只能说，你们有福了，一个文件一个文件地恢复吧
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;b&gt;复现步骤：&lt;/b&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;本地创建一个测试目录&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;客户端文件同步里添加该目录&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   设置完成后可以看到原始目录下会多出几个目录，这个不用管
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-04.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-04.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;修改文件并等待文件同步完成&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-05.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-05.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   这时会发现&lt;b&gt;无论修改多少次&lt;/b&gt;，无论是手动刷新还是自动同步，文件权限都不会被修改
&lt;/p&gt;

&lt;p&gt;
   但是，如果这时候打开绿联云客户端自带的文件管理，并打开同步的目录(&lt;b&gt;不用打开文件，只打开目录&lt;/b&gt;)，然后手动刷新同步，或者等待自动同步完成，就会发现本地文件的权限已经被更改
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-06.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-06.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-07.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-filesync-bug-07.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   这么严重的BUG，我觉得真的不应该出现，&lt;b&gt;如果已经使用了文件同步的用户，千万千万不要打开绿联云文件管理里的同步目录&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
   我目前使用的是&lt;b&gt;MacOS v4.3.0 版本&lt;/b&gt;，其它系统暂时不清楚是否有同样的问题
&lt;/p&gt;</content>
        <category term="Life"></category>
    </entry>
    <entry xml:lang="zh">
      <title>绿联DX4600 Pro禁用迅雷和中国移动云盘进程</title>
      <link href="" rel="alternate"></link>
      <published>Mon, 12 Jun 2023 15:48:46 +0000</published>
      <updated>Wed, 14 Jun 2023 13:16:43 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/06/绿联DX4600 Pro禁用迅雷和中国移动云盘进程.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/06/绿联DX4600 Pro禁用迅雷和中国移动云盘进程.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
前不久入手了一个绿联的 &lt;b&gt;DX4600Pro&lt;/b&gt; nas, 外观和硬件确实很精致，但同样发现系统也挺简陋的
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;为什么要禁用？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 对于&lt;b&gt;中国移动云盘&lt;/b&gt;，因为我目前没有使用也暂时不准备使用，但是在任务管理器里可以看到相关进程一直在运行，去了进程眼不见心不烦
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 对于 &lt;b&gt;迅雷下载&lt;/b&gt;，我只能说真的恶心，每个硬盘都要新建一个迅雷下载目录不说，我明明已经是白金会员，但是下载却完全没速度，试用超级会员又能满宽带下载，删又删不掉，只好禁用掉进程
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;禁用流程&lt;/h2&gt;
&lt;p&gt;
   &lt;b&gt;注意：禁用服务可能会造成未知的后果，所引发的风险，请自行承担&lt;/b&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.1&quot;&gt;开启远程协助&lt;/h3&gt;
&lt;p&gt;
    首先到设备管理开启远程协助，得到验证码
    
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;ssh登录&lt;/h3&gt;
&lt;p&gt;
    我这边使用的是MacOS自带的ssh
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;ssh root@192.168.31.65...&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;为什么要禁用？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;禁用流程&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;开启远程协助&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;ssh登录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;禁用迅雷&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.4&quot;&gt;禁用中国移动云盘&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;其它&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
前不久入手了一个绿联的 &lt;b&gt;DX4600Pro&lt;/b&gt; nas, 外观和硬件确实很精致，但同样发现系统也挺简陋的
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;为什么要禁用？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 对于&lt;b&gt;中国移动云盘&lt;/b&gt;，因为我目前没有使用也暂时不准备使用，但是在任务管理器里可以看到相关进程一直在运行，去了进程眼不见心不烦
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 对于 &lt;b&gt;迅雷下载&lt;/b&gt;，我只能说真的恶心，每个硬盘都要新建一个迅雷下载目录不说，我明明已经是白金会员，但是下载却完全没速度，试用超级会员又能满宽带下载，删又删不掉，只好禁用掉进程
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;禁用流程&lt;/h2&gt;
&lt;p&gt;
   &lt;b&gt;注意：禁用服务可能会造成未知的后果，所引发的风险，请自行承担&lt;/b&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.1&quot;&gt;开启远程协助&lt;/h3&gt;
&lt;p&gt;
    首先到设备管理开启远程协助，得到验证码
    
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;ssh登录&lt;/h3&gt;
&lt;p&gt;
    我这边使用的是MacOS自带的ssh
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;ssh root@192.168.31.65 -p 922&lt;/pre&gt;

&lt;p&gt;
    用户默认为&lt;code&gt;root&lt;/code&gt;，端口默认为&lt;code&gt;922&lt;/code&gt;，IP地址可以在设备信息里查看
    
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    如果提示拒绝连接(&lt;code&gt;ssh: connect to host 192.168.31.65 port 922: Connection refused&lt;/code&gt;)， 则需要重启设备，注意重启前保存运行的任务，重启完成后正常即可登录。
    ssh登录密码前缀为 &lt;code&gt;L#W$%W1uGa&lt;/code&gt;，后缀为开启远程协助时的验证码，比如验证码是&lt;code&gt;XXX&lt;/code&gt;，则密码为 &lt;code&gt;L#W$%W1uGaXXX&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
    登录后可以使用正常的Linux命令，比如查看cpu信息、使用htop查看进程等
    
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-04.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-04.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-05.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-05.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.3&quot;&gt;禁用迅雷&lt;/h3&gt;
&lt;p&gt;
    在 &lt;code&gt;/ugreen/thunder/xunlei-pan/&lt;/code&gt; 目录下有两个脚本: &lt;code&gt;start.sh&lt;/code&gt; 和 &lt;code&gt;stop.sh&lt;/code&gt;, 根据文件名称以及查看其内容可以看出 &lt;code&gt;stop.sh&lt;/code&gt; 用于停止迅雷服务，&lt;code&gt;start.sh&lt;/code&gt; 用于开启服务，并且在 &lt;code&gt;start.sh&lt;/code&gt; 里有这么一段
&lt;/p&gt;

&lt;p&gt;
    
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-06.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-06.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    那么问题就简单了，使用 &lt;b&gt;vi&lt;/b&gt; 修改 &lt;code&gt;/ugreen/thunder/xunlei-pan/start.sh&lt;/code&gt; 的内容，注释掉倒数第二行的代码(在 &lt;code&gt;su - $thunderName&lt;/code&gt; 前加一个 &lt;b&gt;#&lt;/b&gt;)，然后执行 &lt;code&gt;/ugreen/thunder/xunlei-pan/stop.sh&lt;/code&gt;，到任务管理器里查看迅雷进程就消失了且不会重新出现
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.4&quot;&gt;禁用中国移动云盘&lt;/h3&gt;
&lt;p&gt;
    中国移动云盘的启动文件在 &lt;code&gt;/data/nas_server/cmcc_svr&lt;/code&gt;，由于这是个二进制文件，无法修改其内容，原本想去除可执行权限，但测试发现使用 &lt;code&gt;chmod -x /data/nas_server/cmcc_svr&lt;/code&gt; 后会被其他进程恢复, 所以通过修改文件名称来禁用进程
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;cd /data/nas_server/ &amp;amp;&amp;amp; mv cmcc_svr cmcc_svr.backup&lt;/pre&gt;
&lt;p&gt;
    然后kill掉原来的进程即可
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;ps axuf | grep cmcc | grep -v grep | awk &amp;#39;{printf $2}&amp;#39; | xargs kill -9&lt;/pre&gt;

&lt;p&gt;
    这样在任务管理器里看不到中国移动云盘的进程，百度网盘同理
    
&lt;a href=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-07.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/06/DX4600Pro-07.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;其它&lt;/h2&gt;
&lt;p&gt;
   吐槽一下绿联云影院，各种识别错误，把伪恋识别成十二怒汉，十一罗汉也就算了，还把原盘下的花絮识别成错误的影片，识别错也就算了，还不支持多选，只能一个一个地解除匹配信息
&lt;/p&gt;

&lt;p&gt;
   绿联系统能用，但确实不太好用，还好 &lt;b&gt;Docker&lt;/b&gt; 用起来还算不错，希望绿联能继续优化，尤其是进程管理、权限管理以及云影院的识别，另外就是坐等大佬出一期刷其它系统的教程
&lt;/p&gt;</content>
        <category term="Life"></category>
    </entry>
    <entry xml:lang="zh">
      <title>基于Quasar实现一个树状选择器TreeSelect</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 09 May 2023 23:23:52 +0000</published>
      <updated>Mon, 15 May 2023 18:01:44 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/05/基于Quasar实现一个树状选择器TreeSelect.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/05/基于Quasar实现一个树状选择器TreeSelect.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;Quasar&lt;/code&gt; 默认没有树状选择器的支持，而在 &lt;code&gt;Vue&lt;/code&gt; 中通常会使用一个现成的&lt;a href=&quot;https://github.com/riophae/vue-treeselect&quot;&gt;vue-treeselect&lt;/a&gt;, 这是一个非常不错的 &lt;code&gt;Select&lt;/code&gt; 组件, 此次不使用该组件，而是利用 &lt;code&gt;Quasar&lt;/code&gt; 中的 &lt;code&gt;q-select&lt;/code&gt; 和 &lt;code&gt;q-tree&lt;/code&gt; 结合，实现一个类似的树状选择器
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;源数据结构&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;desc&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;源数据结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;组件模版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;组件选项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;最终实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;Quasar&lt;/code&gt; 默认没有树状选择器的支持，而在 &lt;code&gt;Vue&lt;/code&gt; 中通常会使用一个现成的&lt;a href=&quot;https://github.com/riophae/vue-treeselect&quot;&gt;vue-treeselect&lt;/a&gt;, 这是一个非常不错的 &lt;code&gt;Select&lt;/code&gt; 组件, 此次不使用该组件，而是利用 &lt;code&gt;Quasar&lt;/code&gt; 中的 &lt;code&gt;q-select&lt;/code&gt; 和 &lt;code&gt;q-tree&lt;/code&gt; 结合，实现一个类似的树状选择器
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;源数据结构&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;desc&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;管理员&amp;#34;&lt;/span&gt;,
    &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;children&amp;#34;&lt;/span&gt;: [{
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;6&lt;/span&gt;,
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;superadmin&amp;#34;&lt;/span&gt;,
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;desc&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;超级管理员&amp;#34;&lt;/span&gt;,
        &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;children&amp;#34;&lt;/span&gt;: [{
            &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;10&lt;/span&gt;,
            &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;vvvvv&amp;#34;&lt;/span&gt;,
            &lt;span style=&quot;color:#f92672&quot;&gt;&amp;#34;desc&amp;#34;&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;dddd&amp;#34;&lt;/span&gt;,
        }]
    }]
}&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;组件模版&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-select&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;outlined&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;emit-value&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;map-options&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;option-value&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;option-label&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;label&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;角色列表&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:options&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:loading&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.loading&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:multiple&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;multiple&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:use-chips&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;multiple&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;filter&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;filterFn&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#a6e22e&quot;&gt;:model-value&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;modelValue&amp;#34;&lt;/span&gt;
            &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;update:model-value&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;value =&amp;gt; $emit(&amp;#39;update:modelValue&amp;#39;, value)&amp;#34;&lt;/span&gt; &amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:option&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{ itemProps, opt, selected, toggleOption }&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-tree&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:nodes&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;[opt]&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;node-key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;label-key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;:tick-strategy&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;multiple?&amp;#39;strict&amp;#39;:&amp;#39;none&amp;#39;&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:ticked&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.ticked&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.selected&amp;#34;&lt;/span&gt;
              &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;opt.parent_id == 0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:default-header&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;prop&amp;#34;&lt;/span&gt;&amp;gt;
          &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;items-center&amp;#34;&lt;/span&gt;&amp;gt;
            {{ prop.node.desc }}({{ prop.node.name }})
          &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-tree&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-select&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   这里利用 &lt;code&gt;slot&lt;/code&gt; 方式添加 &lt;code&gt;q-tree&lt;/code&gt; 组件, 由于只能传递单个选项(&lt;code&gt;option&lt;/code&gt;), 所以在传递给 &lt;code&gt;q-tree&lt;/code&gt; 的参数 &lt;code&gt;nodes&lt;/code&gt; 需要修改成 &lt;code&gt;[opt]&lt;/code&gt;。
&lt;/p&gt;

&lt;p&gt;
   而在 &lt;code&gt;q-tree&lt;/code&gt; 中，单选和多选同样有区别，单选所使用的参数为 &lt;code&gt;v-model:ticked&lt;/code&gt;, 点击选项即可选中，多选所使用的参数为 &lt;code&gt;v-model:selected&lt;/code&gt;, 配置为多选状态时每个树状列表选项前会添加一个 &lt;code&gt;checkbox&lt;/code&gt;，多选状态需要配置 &lt;code&gt;tick-strategy&lt;/code&gt; 参数
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;strict&lt;/code&gt;: 父选项和子选项的选中状态相互独立
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;leaf&lt;/code&gt;: 选中父选项同时选中父选项下的子选项
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;none&lt;/code&gt;: 禁用多选
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;组件选项&lt;/h2&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;props&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;defineProps&lt;/span&gt;({
    &lt;span style=&quot;color:#a6e22e&quot;&gt;multiple&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; Boolean,
        &lt;span style=&quot;color:#66d9ef&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;,
    },
    &lt;span style=&quot;color:#a6e22e&quot;&gt;modelValue&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;null&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;required&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;,
    },
})
&lt;/pre&gt;
&lt;p&gt;
   父组件可以使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;role-select&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;multiple&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;form.roles&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;role-select&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;p&gt;
   同时，为了区分多选和单选, 需要将没有用到的选项设置为 &lt;code&gt;undefined&lt;/code&gt;, 同时监听选项的修改
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;emit&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;defineEmits&lt;/span&gt;([&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;update:model-value&amp;#39;&lt;/span&gt;])
&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; { &lt;span style=&quot;color:#a6e22e&quot;&gt;modelValue&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;multiple&lt;/span&gt; } &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;toRefs&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;props&lt;/span&gt;)

&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;multiple&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;) {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;selected&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;undefined&lt;/span&gt;

    &lt;span style=&quot;color:#a6e22e&quot;&gt;watch&lt;/span&gt;(() =&amp;gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;ticked&lt;/span&gt;, (&lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;) =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;emit&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;update:model-value&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;)
    })

} &lt;span style=&quot;color:#66d9ef&quot;&gt;else&lt;/span&gt; {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;ticked&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;undefined&lt;/span&gt;

    &lt;span style=&quot;color:#a6e22e&quot;&gt;watch&lt;/span&gt;(() =&amp;gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;selected&lt;/span&gt;, (&lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;) =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;emit&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;update:model-value&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;)
    })
}
&lt;/pre&gt;

&lt;p&gt;
   为了让子选项在选中状态时也能够显示 &lt;code&gt;.name&lt;/code&gt;，而不是 &lt;code&gt;.id&lt;/code&gt;，需要遍历所有选项，将其合成一个列表，在 &lt;code&gt;q-tree&lt;/code&gt; 组件中通过判断 &lt;code&gt;row.parent_id&lt;/code&gt; 只显示父组件, 这里也可以通过定义 &lt;code&gt;q-select&lt;/code&gt; 的 &lt;code&gt;selected&lt;/code&gt; 或者是 &lt;code&gt;selected-item&lt;/code&gt; 插槽来显示正确的名称
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; []
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; []
    &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;forEach&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt; =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;push&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;)
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;) {
            &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;concat&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt;))
        }
    })
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;computed&lt;/span&gt;(() =&amp;gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;)
})
&lt;/pre&gt;

&lt;p&gt;
   最后就是从后端获取列表数据
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;ref&lt;/span&gt;({
    &lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;ticked&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;loading&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;,
})

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;handleFetch&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;props&lt;/span&gt;) =&amp;gt; {
    ...
    &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;loading&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;api&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;fetchList&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;query&lt;/span&gt;).&lt;span style=&quot;color:#a6e22e&quot;&gt;then&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;response&lt;/span&gt; =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;response&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;data&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;
    }).&lt;span style=&quot;color:#66d9ef&quot;&gt;finally&lt;/span&gt;(() =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;loading&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;
    })
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;filterFn&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;val&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;update&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;abort&lt;/span&gt;) =&amp;gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;) {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;update&lt;/span&gt;()
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt;
    }
    &lt;span style=&quot;color:#a6e22e&quot;&gt;update&lt;/span&gt;(() =&amp;gt; {&lt;span style=&quot;color:#a6e22e&quot;&gt;handleFetch&lt;/span&gt;()})
}
&lt;/pre&gt;

&lt;h2 id=&quot;heading-4&quot;&gt;最终实现&lt;/h2&gt;
   &lt;div class=&quot;row&quot;&gt;
     &lt;div class=&quot;col-sm-6&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/05/quasar-tree-select.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/05/quasar-tree-select.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;

     &lt;div class=&quot;col-sm-6&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/05/quasar-tree-select-multiple.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/05/quasar-tree-select-multiple.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;
   &lt;/div&gt;</content>
        <category term="Life/Coding"></category>
    </entry>
    <entry xml:lang="zh">
      <title>基于Quasar实现一个树状表格TableTree</title>
      <link href="" rel="alternate"></link>
      <published>Sat, 29 Apr 2023 00:03:40 +0000</published>
      <updated>Tue, 09 May 2023 23:49:45 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/04/基于Quasar实现一个树状表格TableTree.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/04/基于Quasar实现一个树状表格TableTree.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&quot;https://quasar.dev/&quot;&gt;Quasar&lt;/a&gt; 是一个基于 &lt;code&gt;Vue3&lt;/code&gt; 的前端UI框架，使用的是 &lt;b&gt;Material Design&lt;/b&gt;, 对于国内而言(包括我)觉得确实不太好看，但因为之前使用的是 &lt;code&gt;Element-UI&lt;/code&gt;，大概是由于审美疲劳，此次升级我的后台管理UI，没有继续使用 &lt;code&gt;Vue3&lt;/code&gt; 版本的 &lt;code&gt;Element-Plus&lt;/code&gt;。 不久前我也是基于 &lt;code&gt;Quasar&lt;/code&gt; 开发了一个 Memos 客户端, 感觉效果还不错
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Quasar&lt;/code&gt; 默认没有树状表格的支持，但我觉得树状表格其实还挺重要的，尤其是在显示一些树状的数据，比如一个部门列表(打比方), 树状表格能够清晰的表明各部门之间的上下关系，目前我看实现树状表格的示例要么是基于 &lt;code&gt;qhierarchy...&lt;/code&gt;&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;实现一(废弃)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;实现二&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;最终实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&quot;https://quasar.dev/&quot;&gt;Quasar&lt;/a&gt; 是一个基于 &lt;code&gt;Vue3&lt;/code&gt; 的前端UI框架，使用的是 &lt;b&gt;Material Design&lt;/b&gt;, 对于国内而言(包括我)觉得确实不太好看，但因为之前使用的是 &lt;code&gt;Element-UI&lt;/code&gt;，大概是由于审美疲劳，此次升级我的后台管理UI，没有继续使用 &lt;code&gt;Vue3&lt;/code&gt; 版本的 &lt;code&gt;Element-Plus&lt;/code&gt;。 不久前我也是基于 &lt;code&gt;Quasar&lt;/code&gt; 开发了一个 Memos 客户端, 感觉效果还不错
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Quasar&lt;/code&gt; 默认没有树状表格的支持，但我觉得树状表格其实还挺重要的，尤其是在显示一些树状的数据，比如一个部门列表(打比方), 树状表格能够清晰的表明各部门之间的上下关系，目前我看实现树状表格的示例要么是基于 &lt;code&gt;qhierarchy&lt;/code&gt; (使用 &lt;code&gt;q-markup-table&lt;/code&gt; 实现，定制太困难), 要么就是实现方式太复杂 &lt;a href=&quot;https://forum.quasar-framework.org/topic/2428/tree-table-example&quot;&gt;tree-table-example&lt;/a&gt;, 所以我研究了一下，发现其实还挺简单的，故此记录
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;实现一(废弃)&lt;/h2&gt;
&lt;p&gt;
   虽然 &lt;code&gt;Quasar&lt;/code&gt; 没有树状表格的组件, 但 &lt;code&gt;q-table&lt;/code&gt; 默认是支持 &lt;code&gt;Expanding rows&lt;/code&gt; 的，所以我一开始的想法是使用这个功能实现一个递归的组件, 就像这样
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;row.id&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;row&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:status&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;status&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indent&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indent&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indentStyle&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indentStyle(indent)&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;index&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-for&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;(child, index) in row.children&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;status.expand&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indent&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indent + 1&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;child&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.row&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:status&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indent&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.indent&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:indentStyle&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;indentStyle(scope.indent)&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;slot&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   而在父组件中调用只需要把原来的 &lt;code&gt;props&lt;/code&gt; 改成 &lt;code&gt;scope&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:body&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:row&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.row&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;auto-width&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-checkbox&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;sm&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status.selected&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-btn&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;round&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xs&amp;#34;&lt;/span&gt;
             &lt;span style=&quot;color:#a6e22e&quot;&gt;:icon&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status.expand ? &amp;#39;remove&amp;#39; : &amp;#39;add&amp;#39;&amp;#34;&lt;/span&gt;
             &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;click&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.status.expand = !scope.status.expand&amp;#34;&lt;/span&gt;
             &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;scope.row.children &amp;amp;&amp;amp; scope.row.children.length &amp;gt; 0&amp;#34;&lt;/span&gt; /&amp;gt;
      {{ scope.row.name }}
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;{{ scope.row.desc }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;table-tree&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;p&gt;
   但是后面发现表格在多选状态下无法和原有的表格选择进行联动，只能自己实现选中和取消选中的方法，虽然也能实现，当很麻烦，只好另寻其它方式
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;实现二&lt;/h2&gt;
&lt;p&gt;
   后面研究了一下 &lt;b&gt;Fernando2684&lt;/b&gt; 的实现方式, 虽然他的方式同样复杂，当实现原理其实很简单, 那就是修改原始数据，比如第二行需要进行展开，那我就在原来第二行的数据下把第二行的子数据追加上去，取消展开就把子数据删除，恢复原来的数据。有了这个原理后就好办了，我们可以利用 &lt;code&gt;Expanding rows&lt;/code&gt; 时用到的 &lt;code&gt;props.expand&lt;/code&gt; 参数来控制是否展开子数据, 然后利用计算属性动态的计算展开后的数据
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 表格模版
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-table&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;bordered&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;row-key&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;separator&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;cell&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;selection&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;multiple&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;-&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:rows&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.list&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:rows&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;expandRows&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:expanded&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.expanded&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.selected&amp;#34;&lt;/span&gt;
         &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model:pagination&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;table.pagination&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:body&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;auto-width&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-checkbox&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;sm&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-model&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.selected&amp;#34;&lt;/span&gt; /&amp;gt;
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-btn&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;round&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xs&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#a6e22e&quot;&gt;:icon&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand ? &amp;#39;remove&amp;#39; : &amp;#39;add&amp;#39;&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;click&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand = !props.expand&amp;#34;&lt;/span&gt;
               &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.row.children &amp;amp;&amp;amp; props.row.children.length &amp;gt; 0&amp;#34;&lt;/span&gt; /&amp;gt;
        {{ props.row.name }}
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;{{ props.row.desc }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-tr&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-table&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 表格数据
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;ref&lt;/span&gt;({
    &lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;selected&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; [],
    &lt;span style=&quot;color:#a6e22e&quot;&gt;loading&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;,
    &lt;span style=&quot;color:#a6e22e&quot;&gt;pagination&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;sortBy&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;desc&amp;#39;&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;descending&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;false&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;rowsPerPage&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;,
        &lt;span style=&quot;color:#a6e22e&quot;&gt;rowsNumber&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;,
    }
})

&lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;expandRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;computed&lt;/span&gt;(() =&amp;gt; {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;)
})
&lt;/pre&gt;
&lt;p&gt;
     这里提一嘴，&lt;code&gt;pagination.rowsPerPage&lt;/code&gt; 默认最好设置为0(不限制每页的数量, 但会由由后端控制返回的行数), 否则展开子数据后的数据会被放到第二页, 影响数据查看
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 动态计算展开后的数据
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; []
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; []
    &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;forEach&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt; =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;push&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;)
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;indexOf&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;) &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;) {
            &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;concat&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;))
        }
    })
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;
}
&lt;/pre&gt;
&lt;p&gt;
     注意，这里因为要递归计算多级子目录，所以不能直接在 &lt;code&gt;setup&lt;/code&gt; 上直接用 &lt;code&gt;const&lt;/code&gt; 定义
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 缩进：&lt;del&gt;目前缩进确实有些问题，其中一个解决办法是原始数据会带有 &lt;code&gt;parent_id&lt;/code&gt; 字段，可以通过判断 &lt;code&gt;parent_id&lt;/code&gt; 大于0时增加缩进&lt;/del&gt;
&lt;/p&gt;

&lt;p&gt;
     缩进的计算可以通过&lt;code&gt;makeRows&lt;/code&gt;函数在遍历时添加每行数据的层级
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;indent&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;) {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; []
    }
    &lt;span style=&quot;color:#66d9ef&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; []
    &lt;span style=&quot;color:#a6e22e&quot;&gt;rows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;forEach&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt; =&amp;gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;_indent&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;indent&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;push&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;)
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;indexOf&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;) &lt;span style=&quot;color:#f92672&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;) {
            &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;concat&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;row&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;children&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;indent&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;))
        }
    })
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;newRows&lt;/span&gt;
}

&lt;span style=&quot;color:#66d9ef&quot;&gt;export&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;default&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;useTable&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;) {
    &lt;span style=&quot;color:#66d9ef&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;expandRows&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;computed&lt;/span&gt;(() =&amp;gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;makeRows&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;list&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;expanded&lt;/span&gt;, &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
    })
    &lt;span style=&quot;color:#66d9ef&quot;&gt;return&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;expandRows&lt;/span&gt;,
    }
}
&lt;/pre&gt;
&lt;p&gt;
     然后在表格中添加对应的偏移即可, 需要注意的是表格对齐方向需要设置为 &lt;code&gt;left&lt;/code&gt; (&lt;b&gt;默认值&lt;/b&gt;)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;v-slot:body-cell-name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:props&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;:style&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&amp;#39;padding-left:&amp;#39; + ((props.row._indent || 0) + 1) + &amp;#39;rem&amp;#39;&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;q-btn&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;flat&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;round&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;dense&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xs&amp;#34;&lt;/span&gt;
           &lt;span style=&quot;color:#a6e22e&quot;&gt;:icon&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand ? &amp;#39;remove&amp;#39; : &amp;#39;add&amp;#39;&amp;#34;&lt;/span&gt;
           &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;click&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.expand = !props.expand&amp;#34;&lt;/span&gt;
           &lt;span style=&quot;color:#a6e22e&quot;&gt;v-if&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;props.row.children &amp;amp;&amp;amp; props.row.children.length &amp;gt; 0&amp;#34;&lt;/span&gt; /&amp;gt;
    {{ props.row.name }}
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;q-td&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;最终实现&lt;/h2&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/04/quasar-tree-table.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/04/quasar-tree-table.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;</content>
        <category term="Life/Coding"></category>
    </entry>
    <entry xml:lang="zh">
      <title>搭建Memos作为私人笔记</title>
      <link href="" rel="alternate"></link>
      <published>Fri, 10 Mar 2023 00:16:03 +0000</published>
      <updated>Thu, 06 Apr 2023 13:29:31 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/03/搭建Memos作为私人笔记.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/03/搭建Memos作为私人笔记.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
类似我之前实现的时间轴, 也是一个私人的说说或者是私人的微博，可以用来记录一些临时的想法或者分享某一时刻的精彩瞬间，毕竟数据在自己手上&lt;b&gt;相当酷不是&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;如何搭建&lt;/h2&gt;
&lt;p&gt;
   根据&lt;a href=&quot;https://github.com/usememos/memos&quot;&gt;memos文档&lt;/a&gt;, 搭建也非常简单, 直接使用 &lt;code&gt;docker&lt;/code&gt; 即可
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos neosmemo/memos:latest&lt;/pre&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;docker-compose&lt;/h2&gt;
&lt;p&gt;
   因为我需要和我之前的搭建好一些服务(&lt;b&gt;Blog&lt;/b&gt;, &lt;b&gt;DNS&lt;/b&gt;等)统一管理...&lt;/p&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;如何搭建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;docker-compose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;nginx和https配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;移动端支持&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;FAQ&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.1&quot;&gt;重置密码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
类似我之前实现的时间轴, 也是一个私人的说说或者是私人的微博，可以用来记录一些临时的想法或者分享某一时刻的精彩瞬间，毕竟数据在自己手上&lt;b&gt;相当酷不是&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;如何搭建&lt;/h2&gt;
&lt;p&gt;
   根据&lt;a href=&quot;https://github.com/usememos/memos&quot;&gt;memos文档&lt;/a&gt;, 搭建也非常简单, 直接使用 &lt;code&gt;docker&lt;/code&gt; 即可
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos neosmemo/memos:latest&lt;/pre&gt;
&lt;p&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;docker-compose&lt;/h2&gt;
&lt;p&gt;
   因为我需要和我之前的搭建好一些服务(&lt;b&gt;Blog&lt;/b&gt;, &lt;b&gt;DNS&lt;/b&gt;等)统一管理, 所以转成了 &lt;code&gt;docker-compose&lt;/code&gt; 配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;version&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;services&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;blog&lt;/span&gt;:
    ...
  &lt;span style=&quot;color:#66d9ef&quot;&gt;memos&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;image&lt;/span&gt;: neosmemo/memos:latest
    &lt;span style=&quot;color:#66d9ef&quot;&gt;container_name&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;memos&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;ports&lt;/span&gt;:
      - &lt;span style=&quot;color:#ae81ff&quot;&gt;127.0&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;.0&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;.1&lt;/span&gt;:&lt;span style=&quot;color:#ae81ff&quot;&gt;8005&lt;/span&gt;:&lt;span style=&quot;color:#ae81ff&quot;&gt;5230&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;volumes&lt;/span&gt;:
      - ./memos:/var/opt/memos
    &lt;span style=&quot;color:#66d9ef&quot;&gt;network_mode&lt;/span&gt;: bridge&lt;/pre&gt;
&lt;p&gt;
   需要注意的是 &lt;code&gt;./memos&lt;/code&gt; 目录用来作为数据持久化
&lt;/p&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;nginx和https配置&lt;/h2&gt;
&lt;p&gt;
   这也是和我之前的服务保持一致, 我的 &lt;code&gt;nginx&lt;/code&gt; 配置目录格式如下
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;/etc/nginx/
├── nginx.conf
├── conf.d
│   ├── default.conf
│   ├── upsteam.conf
│   ├── blog.conf
│   ├── cloud.conf
│   ├── ...
│   ├── memos.conf
│   └── ssl
│       ├── xxx.com.conf&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 使用 &lt;b&gt;HTTPS&lt;/b&gt; 连接
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;server&lt;/span&gt; {
    &lt;span style=&quot;color:#f92672&quot;&gt;listen&lt;/span&gt;       &lt;span style=&quot;color:#ae81ff&quot;&gt;80&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;listen&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;[::]:80&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;server_name&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;xxx.com&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;*.xxx.com&lt;/span&gt;;

    &lt;span style=&quot;color:#f92672&quot;&gt;location&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;/&lt;/span&gt; {
        &lt;span style=&quot;color:#f92672&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;301&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;https://&lt;/span&gt;$host$request_uri;
    }
    &lt;span style=&quot;color:#f92672&quot;&gt;location&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;^~&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;/.well-known/acme-challenge&lt;/span&gt; {
        &lt;span style=&quot;color:#f92672&quot;&gt;alias&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;/home/xxx/app/acme.sh/xxx.com/.well-known/acme-challenge&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;upstream&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;upstream&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;memos.xxx.com&lt;/span&gt; {
    &lt;span style=&quot;color:#f92672&quot;&gt;server&lt;/span&gt; 127.0.0.1:&lt;span style=&quot;color:#ae81ff&quot;&gt;8005&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;max_fails=3&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;fail_timeout=30s&lt;/span&gt;;
}&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 添加 &lt;code&gt;memos.conf&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;server&lt;/span&gt; {
    &lt;span style=&quot;color:#f92672&quot;&gt;listen&lt;/span&gt;       &lt;span style=&quot;color:#ae81ff&quot;&gt;443&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;ssl&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;listen&lt;/span&gt;       &lt;span style=&quot;color:#e6db74&quot;&gt;[::]:443&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;ssl&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;server_name&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;memos.xxx.com&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;include&lt;/span&gt;      &lt;span style=&quot;color:#e6db74&quot;&gt;/etc/nginx/conf.d/ssl/xxx.com.conf&lt;/span&gt;;

    &lt;span style=&quot;color:#f92672&quot;&gt;access_log&lt;/span&gt;  &lt;span style=&quot;color:#e6db74&quot;&gt;/home/xxx/app/logs/memos_nginx_access.log&lt;/span&gt;;
    &lt;span style=&quot;color:#f92672&quot;&gt;error_log&lt;/span&gt;   &lt;span style=&quot;color:#e6db74&quot;&gt;/home/xxx/app/logs/memos_nginx_error.log&lt;/span&gt;;

    &lt;span style=&quot;color:#f92672&quot;&gt;location&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;/&lt;/span&gt; {
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_pass&lt;/span&gt;       &lt;span style=&quot;color:#e6db74&quot;&gt;http://memos.xxx.com&lt;/span&gt;;
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_redirect&lt;/span&gt;   &lt;span style=&quot;color:#66d9ef&quot;&gt;off&lt;/span&gt;;
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;Host&lt;/span&gt; $host;
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;X-Real-IP&lt;/span&gt; $remote_addr;
        &lt;span style=&quot;color:#f92672&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;X-Forwarded-For&lt;/span&gt; $proxy_add_x_forwarded_for;
    }
}&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;添加DNS记录&lt;/b&gt;: 到 &lt;code&gt;CloudFlare&lt;/code&gt; 添加一个 &lt;code&gt;memos&lt;/code&gt; 的 &lt;b&gt;CNAME&lt;/b&gt; 记录到 &lt;code&gt;cname.xxx.com&lt;/code&gt;, 等待一分钟即可
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;b&gt;添加SSL证书&lt;/b&gt;: 如果使用了 &lt;code&gt;CloudFlare&lt;/code&gt;, 这一步可以忽略。 因为我很早就建好了一个 &lt;code&gt;acme.sh&lt;/code&gt; 服务，现在可以使用它来增加一个证书，首先需要重启 &lt;code&gt;nginx&lt;/code&gt;， 生成证书前也可以使用 &lt;b&gt;dig memos.xxx.com&lt;/b&gt; 验证 &lt;code&gt;DNS&lt;/code&gt; 是否生效, 我这里使用的是 &lt;code&gt;webroot&lt;/code&gt; 方式
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;docker exec acme.sh --issue -d xxx.com -d www.xxx.com,memos.xxx.com -w /acme.sh/xxx.com --preferred-chain &amp;#34;ISRG&amp;#34; --server  letsencrypt&lt;/pre&gt;
&lt;p&gt;
     然后重启nginx
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;移动端支持&lt;/h2&gt;
&lt;p&gt;
   既然要记录一些临时的想法，肯定不能只有web平台，否则有了新想法，等打开浏览器，登录，然后输入，这时候想法早没了，虽然 &lt;code&gt;Memos&lt;/code&gt; 本身自带的web界面在手机浏览器上也能渲染得很好，但是有一个手机APP还是会更方便一些，目前有一个 &lt;a href=&quot;https://memos.moe&quot;&gt;memos.moe&lt;/a&gt; 可供使用，我也安装使用过，确实流畅，但还有一些基础功能比如资源管理和系统管理没有实现，为此，我自己写了一个 &lt;b&gt;专属APP&lt;/b&gt;, 添加了这一部分的实现
&lt;/p&gt;

   &lt;div class=&quot;row&quot; style=&quot;margin-top:15px;&quot;&gt;
     &lt;div class=&quot;col-sm-3&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos-app-01.jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos-app-01.jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;

     &lt;div class=&quot;col-sm-3&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos-app-02.jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos-app-02.jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;

     &lt;div class=&quot;col-sm-3&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos-app-03.jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos-app-03.jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;

     &lt;div class=&quot;col-sm-3&quot;&gt;
       
&lt;a href=&quot;https://s.libforest.com/images/2023/03/memos-app-04.jpg-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/memos-app-04.jpg-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
     &lt;/div&gt;
   &lt;/div&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;FAQ&lt;/h2&gt;
&lt;h3 id=&quot;heading-5.1&quot;&gt;重置密码&lt;/h3&gt;
&lt;p&gt;
    升级到 &lt;code&gt;0.12.0&lt;/code&gt; 后无法登录，总是提示 &lt;code&gt;Incorrect login credentials&lt;/code&gt;, 因为使用的 &lt;code&gt;Docker&lt;/code&gt; 部署，找到挂载目录下的 &lt;code&gt;memos_prod.db&lt;/code&gt; 文件(&lt;b&gt;请先备份好&lt;/b&gt;), 我的机器上没有安装 &lt;code&gt;sqlite&lt;/code&gt;, 所以需要
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 拷贝到本地
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ scp xxx:~/app/memos/memos_prod.db ./&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 然后使用 &lt;code&gt;sqlite&lt;/code&gt; 打开文件并手动更新
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ sqlite3 memos_prod.db
SQLite version 3.32.2 2021-07-12 15:00:17
Enter &amp;#34;.help&amp;#34; for usage hints.
sqlite&amp;gt; select * from user;
...
sqlite&amp;gt; update user set password_hash=&amp;#34;$2a$14$ajq8Q7fbtFRQvXpdCq7Jcuy.Rx1h/L4J60Otx.gyNLbAYctGMJ9tK&amp;#34; where id=1;
sqlite&amp;gt; .quit&lt;/pre&gt;
&lt;p&gt;
      这时候密码会被设置成 &lt;b&gt;secret&lt;/b&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 覆盖原文件(需要先暂停服务)
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;└──╼ scp ./memos_prod.db xxx:~/app/memos/memos_prod.db&lt;/pre&gt;
&lt;p&gt;
      重启服务，重新登录后修改新密码即可
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
        <category term="Life"></category>
    </entry>
    <entry xml:lang="zh">
      <title>使用Github Actions自动打包Go项目</title>
      <link href="" rel="alternate"></link>
      <published>Mon, 06 Mar 2023 02:22:23 +0000</published>
      <updated>Mon, 06 Mar 2023 20:23:31 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/03/使用Github Actions自动打包Go项目.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/03/使用Github Actions自动打包Go项目.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   如果用过 &lt;b&gt;Gitlab Ci&lt;/b&gt;, 相信对此也非常熟悉，&lt;b&gt;GitHub Actions&lt;/b&gt; 是 &lt;b&gt;GitHub&lt;/b&gt; 推出的持续集成（Continuous Integration，简称 CI）服务，它提供了整套虚拟服务器环境，基于它可以进行构建、测试、打包、部署项目等等操作
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;快速开始(Quickstart)&lt;/h2&gt;
&lt;p&gt;
   在自己的 &lt;code&gt;Github&lt;/code&gt; 仓库中找到 &lt;code&gt;Actions&lt;/code&gt; 标签页
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/github-actions-01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/github-actions-01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   点击 &lt;code&gt;Configure&lt;/code&gt;, 此时会生成一个 &lt;code&gt;.github/workflow/go.yml&lt;/code&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# This...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;快速开始(Quickstart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;多平台编译(Cross Compile)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.1&quot;&gt;交叉编译&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.2&quot;&gt;跨平台编译&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;发布(Release)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;FAQ&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.1&quot;&gt;version `GLIBC_2.33&amp;#39; not found&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   如果用过 &lt;b&gt;Gitlab Ci&lt;/b&gt;, 相信对此也非常熟悉，&lt;b&gt;GitHub Actions&lt;/b&gt; 是 &lt;b&gt;GitHub&lt;/b&gt; 推出的持续集成（Continuous Integration，简称 CI）服务，它提供了整套虚拟服务器环境，基于它可以进行构建、测试、打包、部署项目等等操作
&lt;/p&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;快速开始(Quickstart)&lt;/h2&gt;
&lt;p&gt;
   在自己的 &lt;code&gt;Github&lt;/code&gt; 仓库中找到 &lt;code&gt;Actions&lt;/code&gt; 标签页
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/github-actions-01.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/github-actions-01.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   点击 &lt;code&gt;Configure&lt;/code&gt;, 此时会生成一个 &lt;code&gt;.github/workflow/go.yml&lt;/code&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;# This workflow will build a golang project&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Go

&lt;span style=&quot;color:#66d9ef&quot;&gt;on&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;push&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;branches&lt;/span&gt;: [ &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;master&amp;#34;&lt;/span&gt; ]
  &lt;span style=&quot;color:#66d9ef&quot;&gt;pull_request&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;branches&lt;/span&gt;: [ &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;master&amp;#34;&lt;/span&gt; ]

&lt;span style=&quot;color:#66d9ef&quot;&gt;jobs&lt;/span&gt;:

  &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;runs-on&lt;/span&gt;: ubuntu-latest
    &lt;span style=&quot;color:#66d9ef&quot;&gt;steps&lt;/span&gt;:
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/checkout@v3
        - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Set up Go
          &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/setup-go@v3
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;go-version&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1.19&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Build
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go build -v ./...
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Test
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go test -v ./...&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;多平台编译(Cross Compile)&lt;/h2&gt;
&lt;h3 id=&quot;heading-3.1&quot;&gt;交叉编译&lt;/h3&gt;
&lt;p&gt;
    对于非 &lt;code&gt;CGO&lt;/code&gt; 项目，&lt;code&gt;Go&lt;/code&gt; 提供了一种十分方便的方式来进行交叉编译，只需要指定 &lt;code&gt;GOOS&lt;/code&gt; 和 &lt;code&gt;GOARCH&lt;/code&gt; 环境变量
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
  Mac下编译Linux, Windows平台的64位可执行程序：
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ CGO_ENABLED&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; GOOS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;linux GOARCH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;amd64 go build .
$ CGO_ENABLED&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; GOOS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;windows GOARCH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;amd64 go build .&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 Linux下编译Mac, Windows平台的64位可执行程序：
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;$ CGO_ENABLED&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; GOOS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;darwin GOARCH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;amd64 go build .
$ CGO_ENABLED&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; GOOS&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;windows GOARCH&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;amd64 go build .&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    同样的，我们可以在 &lt;code&gt;Gtihub Actions&lt;/code&gt; 中设置环境变量来编译非 &lt;code&gt;CGO&lt;/code&gt; 项目，这里需要使用 &lt;code&gt;matrix&lt;/code&gt; 策略，让我们基于不同的参数创建并行的任务，比如编译Go时指定不同的环境变量
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 首先编写任务
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;jobs&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;strategy&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;matrix&lt;/span&gt;:
        &lt;span style=&quot;color:#66d9ef&quot;&gt;goos&lt;/span&gt;: [linux, darwin]
        &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: [amd64]

    &lt;span style=&quot;color:#66d9ef&quot;&gt;runs-on&lt;/span&gt;: ubuntu-latest

    &lt;span style=&quot;color:#66d9ef&quot;&gt;steps&lt;/span&gt;:
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Checkout
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/checkout@v3
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Set up Go
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/setup-go@v3
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;go-version&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1.19&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Download dependencies
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go mod download
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Build
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go build -v -o snow .
        &lt;span style=&quot;color:#75715e&quot;&gt;# 指定编译时的环境变量&lt;/span&gt;
        &lt;span style=&quot;color:#66d9ef&quot;&gt;env&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;GOOS&lt;/span&gt;: ${{ matrix.goos }}
          &lt;span style=&quot;color:#66d9ef&quot;&gt;GOARCH&lt;/span&gt;: ${{ matrix.goarch }}
          &lt;span style=&quot;color:#66d9ef&quot;&gt;CGO_ENABLED&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
      这样就创建了 &lt;code&gt;GOOS=linux GOARCH=amd64&lt;/code&gt; 和 &lt;code&gt;GOOS=darwin GOARCH=amd64&lt;/code&gt; 的两个任务, 当 &lt;code&gt;goarch&lt;/code&gt; 增加一个 &lt;code&gt;arm&lt;/code&gt; 的参数后，会组合成四个任务, 如果需要指定或者排除某个选项，可以使用 &lt;code&gt;include&lt;/code&gt; 或者 &lt;code&gt;exclude&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;matrix&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;goos&lt;/span&gt;: [linux, darwin]
  &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: [amd64, arm]
  &lt;span style=&quot;color:#75715e&quot;&gt;# 只包括linux编译选项&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;include&lt;/span&gt;:
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;goos&lt;/span&gt;: linux
      &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: amd64
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;goos&lt;/span&gt;: linux
      &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: arm
  &lt;span style=&quot;color:#75715e&quot;&gt;# 排除所有关于arm的编译选项&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;exclude&lt;/span&gt;:
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;goarch&lt;/span&gt;: arm&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 然后执行 &lt;code&gt;git push&lt;/code&gt;, 这样就能在 &lt;code&gt;Github&lt;/code&gt; 的 &lt;code&gt;Actions&lt;/code&gt; 标签页看到执行结果
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-3.2&quot;&gt;跨平台编译&lt;/h3&gt;
&lt;p&gt;
    如果是非 &lt;code&gt;CGO&lt;/code&gt; 项目，可以使用Go内置的交叉编译，但如果是 &lt;code&gt;CGO&lt;/code&gt; 项目，上述的交叉编译大概率会失败(相关问题:&lt;a href=&quot;https://github.com/wellington/go-libsass/issues/67&quot;&gt;go-libsass&lt;/a&gt;)， 所以我们需要基于不同的平台来进行编译，幸运的是，&lt;code&gt;Github Actions&lt;/code&gt; 对此支持的非常好,
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 编写新任务
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;jobs&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;strategy&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;matrix&lt;/span&gt;:
        &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: [macos, linux]
        &lt;span style=&quot;color:#66d9ef&quot;&gt;include&lt;/span&gt;:
          - &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: macos
            &lt;span style=&quot;color:#66d9ef&quot;&gt;os&lt;/span&gt;: macos-latest
          - &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: linux
            &lt;span style=&quot;color:#66d9ef&quot;&gt;os&lt;/span&gt;: ubuntu&lt;span style=&quot;color:#ae81ff&quot;&gt;-18.04&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;runs-on&lt;/span&gt;: ${{ matrix.os }}
    &lt;span style=&quot;color:#66d9ef&quot;&gt;steps&lt;/span&gt;:
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Checkout
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/checkout@v3
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Set up Go
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/setup-go@v3
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;go-version&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1.19&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Download dependencies
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go mod download
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Build
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: go build -v -o snow .
        &lt;span style=&quot;color:#66d9ef&quot;&gt;env&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;CGO_ENABLED&lt;/span&gt;: &lt;span style=&quot;color:#ae81ff&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
      注意 &lt;code&gt;runs-on&lt;/code&gt; 使用的 &lt;code&gt;matrix.os&lt;/code&gt; 变量, 它允许我们分别使用 &lt;code&gt;ubuntu-18.04&lt;/code&gt; 和 &lt;code&gt;macos-latest&lt;/code&gt; 两个平台进行编译，这时不用指定 &lt;code&gt;GOOS&lt;/code&gt; 和 &lt;code&gt;GOARCH&lt;/code&gt; 参数
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 执行 &lt;code&gt;git push&lt;/code&gt;, 可以看到执行结果
      
&lt;a href=&quot;https://s.libforest.com/images/2023/03/github-actions-02.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/github-actions-02.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-4&quot;&gt;发布(Release)&lt;/h2&gt;
&lt;p&gt;
   当编译好一个二进制文件后，需要发布到 &lt;code&gt;Github&lt;/code&gt; 的 &lt;code&gt;Release&lt;/code&gt; 页，这时就需要添加新的任务, 目前官方的&lt;a href=&quot;https://github.com/actions/create-release&quot;&gt;actions/create-release&lt;/a&gt;已经无人维护，所以此次选择另外一个&lt;a href=&quot;https://github.com/ncipollo/release-action&quot;&gt;ncipollo/release-action&lt;/a&gt;
&lt;/p&gt;

&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Release

&lt;span style=&quot;color:#66d9ef&quot;&gt;on&lt;/span&gt;:
  &lt;span style=&quot;color:#75715e&quot;&gt;# 只在预发布时才执行&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;release&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;types&lt;/span&gt;: [prereleased]

&lt;span style=&quot;color:#66d9ef&quot;&gt;jobs&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;strategy&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;matrix&lt;/span&gt;:
        &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: [macos, linux]
        &lt;span style=&quot;color:#66d9ef&quot;&gt;include&lt;/span&gt;:
          - &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: macos
            &lt;span style=&quot;color:#66d9ef&quot;&gt;os&lt;/span&gt;: macos-latest
            &lt;span style=&quot;color:#66d9ef&quot;&gt;archive-name&lt;/span&gt;: darwin.tar.gz
          - &lt;span style=&quot;color:#66d9ef&quot;&gt;build&lt;/span&gt;: linux
            &lt;span style=&quot;color:#66d9ef&quot;&gt;os&lt;/span&gt;: ubuntu-latest
            &lt;span style=&quot;color:#66d9ef&quot;&gt;archive-name&lt;/span&gt;: linux.tar.gz

    &lt;span style=&quot;color:#75715e&quot;&gt;# 需要设置写权限才能自动发布&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;permissions&lt;/span&gt;:
      &lt;span style=&quot;color:#66d9ef&quot;&gt;contents&lt;/span&gt;: write

    &lt;span style=&quot;color:#66d9ef&quot;&gt;steps&lt;/span&gt;:
      ...
      &lt;span style=&quot;color:#75715e&quot;&gt;# 把二进制文件打包成压缩文件&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Prepare Packaging
        &lt;span style=&quot;color:#66d9ef&quot;&gt;run&lt;/span&gt;: tar zcvf snow-${{ matrix.archive-name }}.tar.gz snow LICENSE

      &lt;span style=&quot;color:#75715e&quot;&gt;# 上传附件&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Upload Artifacts
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: actions/upload-artifact@v3
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: snow-${{ matrix.archive-name }}.tar.gz
          &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: snow-${{ matrix.archive-name }}.tar.gz

      &lt;span style=&quot;color:#75715e&quot;&gt;# 发布release版本&lt;/span&gt;
      - &lt;span style=&quot;color:#66d9ef&quot;&gt;name&lt;/span&gt;: Release version
        &lt;span style=&quot;color:#66d9ef&quot;&gt;uses&lt;/span&gt;: ncipollo/release-action@v1
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt;: github.event_name == &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;release&amp;#39;&lt;/span&gt;
        &lt;span style=&quot;color:#66d9ef&quot;&gt;with&lt;/span&gt;:
          &lt;span style=&quot;color:#66d9ef&quot;&gt;allowUpdates&lt;/span&gt;: &lt;span style=&quot;color:#66d9ef&quot;&gt;true&lt;/span&gt;
          &lt;span style=&quot;color:#66d9ef&quot;&gt;artifacts&lt;/span&gt;: snow-${{ matrix.archive-name }}.tar.gz
          &lt;span style=&quot;color:#66d9ef&quot;&gt;token&lt;/span&gt;: ${{ secrets.GITHUB_TOKEN }}&lt;/pre&gt;

&lt;p&gt;
   当 &lt;code&gt;Github Actions&lt;/code&gt; 执行完成后，就能在 &lt;code&gt;Release&lt;/code&gt; 页看到我们发布的 &lt;code&gt;Package&lt;/code&gt;
   
&lt;a href=&quot;https://s.libforest.com/images/2023/03/github-actions-03.png-show&quot; data-fancybox=&quot;image&quot;&gt;
  &lt;img data-src=&quot;https://s.libforest.com/images/2023/03/github-actions-03.png-thumb&quot; class=&quot;lazyload&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;FAQ&lt;/h2&gt;
&lt;h3 id=&quot;heading-5.1&quot;&gt;version `GLIBC_2.33&amp;#39; not found&lt;/h3&gt;
&lt;p&gt;
    使用 &lt;code&gt;Github Actions&lt;/code&gt; 发布一个新的版本，下载到本地执行时报错
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;./snow: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.33&amp;#39; not found (required by ./snow)
./snow: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34&amp;#39; not found (required by ./snow)
./snow: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32&amp;#39; not found (required by ./snow)
./snow: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.29&amp;#39; not found (required by ./snow)&lt;/pre&gt;
&lt;p&gt;
    这是由于使用的 &lt;code&gt;ubuntu&lt;/code&gt; 版本太高导致, 降低版本即可
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;include:
...
&lt;span style=&quot;color:#f92672&quot;&gt;-   os: ubuntu-latest
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+   os: ubuntu-18.04
&lt;/span&gt;&lt;/pre&gt;</content>
        <category term="Linux"></category>
    </entry>
    <entry xml:lang="zh">
      <title>Emacs笔记之修复yaml-mode的格式化问题</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 21 Feb 2023 17:18:40 +0000</published>
      <updated>Sun, 26 Feb 2023 01:28:12 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/02/Emacs笔记之修复yaml-mode的格式化问题.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/02/Emacs笔记之修复yaml-mode的格式化问题.html</id>
      <summary type="html">
&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;更新时间&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2023-02-26&lt;/td&gt;
&lt;td&gt;增加更多判断逻辑, 比如上一行是列表，当前行也是列表，则按正常缩进计算&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;
一直以来 &lt;b&gt;yaml-mode&lt;/b&gt; 都有一个问题，在使用 &lt;code&gt;(indent-region (point-min) (point-max))&lt;/code&gt; 时已经格式好的内容总是会得到错误的缩进，比如一个简单的配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">
&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;更新时间&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2023-02-26&lt;/td&gt;
&lt;td&gt;增加更多判断逻辑, 比如上一行是列表，当前行也是列表，则按正常缩进计算&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;
一直以来 &lt;b&gt;yaml-mode&lt;/b&gt; 都有一个问题，在使用 &lt;code&gt;(indent-region (point-min) (point-max))&lt;/code&gt; 时已经格式好的内容总是会得到错误的缩进，比如一个简单的配置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
在调用 &lt;code&gt;indent-regin&lt;/code&gt; 后就会变成
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;test1&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val&amp;#34;&lt;/span&gt;
&lt;span style=&quot;color:#66d9ef&quot;&gt;test2&lt;/span&gt;:
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val1&amp;#34;&lt;/span&gt;
  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;test3&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;test4&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val4&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
而我又总是手痒，写好的配置文件总是会忍不住 &lt;code&gt;indent-region&lt;/code&gt; 一番，结果本来正确的格式立马变得各种乱七八糟，当初为了解决这个问题，还专门为 &lt;b&gt;yaml-mode&lt;/b&gt; 激活了 &lt;b&gt;lsp-mode&lt;/b&gt;, 并且使用 &lt;code&gt;lsp-format-buffer&lt;/code&gt; 来进行处理。
&lt;/p&gt;

&lt;p&gt;
本来一切都还正常，但最近发现了另外一个问题，如果在 &lt;b&gt;org-mode&lt;/b&gt; 中插入 &lt;b&gt;yaml&lt;/b&gt; 的代码片段，调用 &lt;code&gt;indent-region&lt;/code&gt; 还是还有之前的问题, &lt;b&gt;org-mode&lt;/b&gt; 中又无法直接调用 &lt;code&gt;lsp-format-buffer&lt;/code&gt;, 所以专门研究了一下 &lt;b&gt;yaml-mode&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
发现 &lt;b&gt;yaml-mode&lt;/b&gt; 只是定义了 &lt;code&gt;indent-line-function&lt;/code&gt; 变量，没有定义 &lt;code&gt;indent-region-function&lt;/code&gt;, 导致调用 &lt;code&gt;indent-region&lt;/code&gt; 时其实是逐行调用 &lt;code&gt;yaml-indent-line&lt;/code&gt;, 这里面有一个计算当前缩进的 &lt;code&gt;yaml-compute-indentation&lt;/code&gt; 函数，计算方式有些简单粗暴，如果上一行是一个 &lt;b&gt;hash key&lt;/b&gt;, 当前行的缩进就是上一行的缩进加 &lt;code&gt;yaml-indent-offset&lt;/code&gt; 的值, 这里并没有判断当前行是新建行还是已经有相关内容，如果是新建行那么缩进就是对的，如果是已有的内容就是错的，所以我修改了这一部分逻辑，如果是 &lt;b&gt;已有内容并且当前行的缩进小于上一行&lt;/b&gt; 则不进行处理, 比如:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;  - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;val2&amp;#34;&lt;/span&gt;
test3:&lt;/pre&gt;
&lt;p&gt;
虽然增加的判断逻辑很简单，但至少在使用 &lt;code&gt;indent-region&lt;/code&gt; 时已经格式好的内容就不会出现混乱的情况了, 也不用专门为 &lt;b&gt;yaml&lt;/b&gt; 文件激活一个 &lt;b&gt;lsp&lt;/b&gt; 进程。
&lt;/p&gt;

&lt;p&gt;
目前处理的方式还是采用 advice + letf 形式，否则需要修改很多内容，有兴趣的同道可以参考一下
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;(defun maple/yaml-compute-indentation()
  (let ((ci (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-indentation&lt;/span&gt;))
        (cm (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-hash-key-re))
        (cl (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;^&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;+.*$&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
    (save-excursion
      (&lt;span style=&quot;color:#a6e22e&quot;&gt;beginning-of-line&lt;/span&gt;)
      (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-document-delimiter-re) &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;-1&lt;/span&gt;)
        (while (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-blank-line-re)
                    (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;gt;&lt;/span&gt; (&lt;span style=&quot;color:#a6e22e&quot;&gt;point&lt;/span&gt;) (&lt;span style=&quot;color:#a6e22e&quot;&gt;point-min&lt;/span&gt;)))
          (&lt;span style=&quot;color:#a6e22e&quot;&gt;forward-line&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;-1&lt;/span&gt;))
        (let ((li (&lt;span style=&quot;color:#a6e22e&quot;&gt;current-indentation&lt;/span&gt;))
              (ll (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;^&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;*-&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;\s&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;+.*$&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;&lt;/span&gt;)))
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进大于当前行, 上一行是列表，当前行也是是列表 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进大于当前行, 上一行和当前行有一个不是列表 - 原有缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进等于当前行, 上一行是字典，当前行是列表 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进等于当前行, 上一行是字典，当前行是不是列表 - 原有缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进小于当前行, 上一行是字典 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进小于当前行, 上一行是列表，当前行也是列表 - 正常缩进&lt;/span&gt;
          &lt;span style=&quot;color:#75715e&quot;&gt;;; 如果上一行的缩进小于当前行, 上一行是列表，当前行是字典 - 错误/正常缩进&lt;/span&gt;
          (if (or (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;&amp;gt;&lt;/span&gt; li ci) (or (not cl) (not ll))) (and (&lt;span style=&quot;color:#a6e22e&quot;&gt;=&lt;/span&gt; li ci) cm (not ll))) ci
            (&lt;span style=&quot;color:#a6e22e&quot;&gt;+&lt;/span&gt; li
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-nested-map-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-nested-sequence-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;)
               (if (&lt;span style=&quot;color:#a6e22e&quot;&gt;looking-at&lt;/span&gt; yaml-block-literal-re) yaml-indent-offset &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt;))))))))

(defun maple/yaml-indent-region(func &lt;span style=&quot;color:#66d9ef&quot;&gt;&amp;amp;rest&lt;/span&gt; args)
  (if (derived-mode-p &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;yaml-mode&lt;/span&gt;)
      (letf (((&lt;span style=&quot;color:#a6e22e&quot;&gt;symbol-function&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;yaml-compute-indentation&lt;/span&gt;) &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple/yaml-compute-indentation&lt;/span&gt;))
        (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; func args))
    (&lt;span style=&quot;color:#a6e22e&quot;&gt;apply&lt;/span&gt; func args)))

(advice-add &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;indent-region&lt;/span&gt; :around &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#39;maple/yaml-indent-region&lt;/span&gt;)&lt;/pre&gt;</content>
        <category term="Linux/Emacs"></category>
    </entry>
    <entry xml:lang="zh">
      <title>博客系统从Pelican迁移至Snow</title>
      <link href="" rel="alternate"></link>
      <published>Sun, 19 Feb 2023 20:00:10 +0000</published>
      <updated>Mon, 05 Jun 2023 22:49:48 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/02/博客系统从Pelican迁移至Snow.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/02/博客系统从Pelican迁移至Snow.html</id>
      <summary type="html">
&lt;blockquote&gt;
&lt;p&gt;
上一次迁移博客系统还是在上一次。。。
哈哈，不开玩笑，上次迁移大概还是在七年前(2015.10), 不知不觉我的博客也建立快八年时间，如果算上动态博客可能都快十年了，虽然也没写多少篇(其实本地草稿都攒了快200篇了, 也没好好整理), 但好歹可以记录自己的生活和想法，之前使用的博客系统是基于 &lt;code&gt;Python&lt;/code&gt; 的 &lt;code&gt;Pelican&lt;/code&gt;, 此次将博客迁移至 &lt;a href=&quot;https://github.com/honmaple.com/snow&quot;&gt;snow&lt;/a&gt; —— &lt;b&gt;一个轻量，简洁的基于Go开发的静态博客生成器&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;迁移列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 内容文件(.md、.org、.html)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 静态文件(.css、.js、.scss等)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 配置文件(pelicanconf.py -&amp;gt;...&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;迁移列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;内容文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;文件头&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.1&quot;&gt;&lt;code&gt;.md&lt;/code&gt; 和 &lt;code&gt;.org&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1.2&quot;&gt;&lt;code&gt;.html&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;忽略文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;静态文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.1&quot;&gt;favicon.ico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3.2&quot;&gt;scss/css/js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;配置文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;主题文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.1&quot;&gt;分类功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.2&quot;&gt;子分类功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.3&quot;&gt;搜索功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-5.4&quot;&gt;加密功能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
上一次迁移博客系统还是在上一次。。。
哈哈，不开玩笑，上次迁移大概还是在七年前(2015.10), 不知不觉我的博客也建立快八年时间，如果算上动态博客可能都快十年了，虽然也没写多少篇(其实本地草稿都攒了快200篇了, 也没好好整理), 但好歹可以记录自己的生活和想法，之前使用的博客系统是基于 &lt;code&gt;Python&lt;/code&gt; 的 &lt;code&gt;Pelican&lt;/code&gt;, 此次将博客迁移至 &lt;a href=&quot;https://github.com/honmaple.com/snow&quot;&gt;snow&lt;/a&gt; —— &lt;b&gt;一个轻量，简洁的基于Go开发的静态博客生成器&lt;/b&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;迁移列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 内容文件(.md、.org、.html)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 静态文件(.css、.js、.scss等)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 配置文件(pelicanconf.py -&amp;gt; config.yaml)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 主题文件
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 分类功能(子分类)
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 搜索功能
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[X]&lt;/code&gt;
 加密功能
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;内容文件&lt;/h2&gt;
&lt;p&gt;
   由于 &lt;code&gt;Snow&lt;/code&gt; 是我自己开发的, 功能上的实现本身就基于我原有的文件内容, 比如 &lt;code&gt;markdown&lt;/code&gt; 和 &lt;code&gt;orgmode&lt;/code&gt; 的支持，所以迁移上也很简单，有的甚至不用修改原有的内容
&lt;/p&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;文件头&lt;/h3&gt;
&lt;p&gt;
    原来的 &lt;code&gt;Pelican&lt;/code&gt; 使用三种文件头形式:
&lt;/p&gt;
&lt;h4 id=&quot;heading-2.1.1&quot;&gt;&lt;code&gt;.md&lt;/code&gt; 和 &lt;code&gt;.org&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;.md&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;Title: 使用pelican搭建个人博客
Author: honmaple
Date: 2015-12-22
Category: Python
Tags: python,pelican
Slug: 使用pelican搭建个人博客

## pelican介绍&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;.org&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;#+TITLE&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: 私人密码库Bitwarden搭建&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+AUTHOR&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: honmaple&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+DATE&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: 2022-05-29 16:21:15&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+CATEGORY&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: Linux&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+PROPERTY&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: MODIFIED 2022-05-29 16:27:05&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+PROPERTY&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: TAGS linux,bitwarden&lt;/span&gt;
&lt;span style=&quot;color:#75715e&quot;&gt;#+PROPERTY&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;: SLUG 私人密码库Bitwarden搭建&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
     在 &lt;code&gt;Pelican&lt;/code&gt; 中的 &lt;code&gt;Author&lt;/code&gt; 和 &lt;code&gt;Category&lt;/code&gt; 是固定字段，如果需要指定多个可以使用英文逗号分隔，而在 &lt;code&gt;Snow&lt;/code&gt; 中这两个字段是可选或者说是可配置的，无法知道指定的字段是一个列表还是一个完整的单词，所以这里需要修改为
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- Category: Linux
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ categories: [Linux]
&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
     或者
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- #+PROPERTY: TAGS linux,bitwarden
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ #+PROPERTY: TAGS [linux,bitwarden]
&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
     而在 &lt;code&gt;markdown&lt;/code&gt; 中，因为 &lt;code&gt;Snow&lt;/code&gt; 支持类似 &lt;code&gt;Hugo&lt;/code&gt; 的文件头，如果想要一次性修改好，可以直接改成 &lt;code&gt;yaml&lt;/code&gt; 或者 &lt;code&gt;toml&lt;/code&gt; 格式
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;yaml&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;---
categories:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;-&lt;/span&gt; Linux
...
---&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;toml&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;+++
categories = [&amp;#34;Linux&amp;#34;]
...
+++&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
     除了修改原来的文件外，我还在 &lt;code&gt;Snow&lt;/code&gt; 中内置了一个 &lt;code&gt;pelican&lt;/code&gt; 插件，只要在配置里添加
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;hooks&lt;/span&gt;:
  - pelican
...&lt;/pre&gt;
&lt;p&gt;
     就能将 &lt;code&gt;Category&lt;/code&gt; 字段转成 &lt;code&gt;categories&lt;/code&gt; 列表, &lt;code&gt;Author&lt;/code&gt; 转成 &lt;code&gt;authors&lt;/code&gt; 列表, &lt;code&gt;Tags&lt;/code&gt; 转成 &lt;code&gt;tags&lt;/code&gt; 列表, 这样就不用修改原来的文件
&lt;/p&gt;

&lt;h4 id=&quot;heading-2.1.2&quot;&gt;&lt;code&gt;.html&lt;/code&gt;&lt;/h4&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;html&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;head&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;title&lt;/span&gt;&amp;gt;Project&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;title&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;随意写写&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;2015-12-22&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;category&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;Life&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;authors&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;honmaple&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;slug&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;project&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;custom_css&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;/static/css/project.css&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;custom_js&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://cdn.bootcss.com/geopattern/1.2.3/js/geopattern.min.js&amp;#34;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;custom_js&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;/static/js/project.js&amp;#34;&lt;/span&gt; /&amp;gt;
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;head&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;body&lt;/span&gt;&amp;gt;
    ...
  &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;p&gt;
     在 &lt;code&gt;html&lt;/code&gt; 文件中，原来的 &lt;code&gt;custom_css&lt;/code&gt; 和 &lt;code&gt;custom_js&lt;/code&gt; 两个字段主要用于自定义css和js，也是利用我开发的一个pelican插件，把多条记录合并成一个列表，在 &lt;code&gt;Snow&lt;/code&gt; 中，不用开发新的插件，但需要修改原来的内容
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- &amp;lt;meta name=&amp;#34;custom_css&amp;#34; content=&amp;#34;/static/css/project.css&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- &amp;lt;meta name=&amp;#34;custom_js&amp;#34; content=&amp;#34;https://cdn.bootcss.com/geopattern/1.2.3/js/geopattern.min.js&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;- &amp;lt;meta name=&amp;#34;custom_js&amp;#34; content=&amp;#34;/static/js/project.js&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ &amp;lt;link type=&amp;#34;text/css&amp;#34; href=&amp;#34;/static/css/project.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://cdn.bootcss.com/geopattern/1.2.3/js/geopattern.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;+ &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;/static/js/project.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
     这样就能得到两个类型为列表的变量 &lt;code&gt;custom_css&lt;/code&gt; 和 &lt;code&gt;custom_js&lt;/code&gt;
&lt;/p&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;忽略文件&lt;/h3&gt;
&lt;p&gt;
    &lt;code&gt;Pelican&lt;/code&gt; 可以单独指定 &lt;code&gt;content/posts&lt;/code&gt; 和 &lt;code&gt;content/pages&lt;/code&gt;, 而在 &lt;code&gt;Snow&lt;/code&gt; 中 无法指定 &lt;code&gt;content&lt;/code&gt; 目录下的部分目录，但可以设置忽略文件, 这有两种方式
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 在需要忽略的目录下新建一个 &lt;code&gt;_index.md&lt;/code&gt;, 并指定 &lt;code&gt;ingore_files&lt;/code&gt; 字段
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;---
# 忽略整个目录
ignore_files: [&amp;#34;*&amp;#34;]
# 忽略目录下的README.md和所有js文件
ignore_files:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;-&lt;/span&gt; README.md
  &lt;span style=&quot;color:#66d9ef&quot;&gt;-&lt;/span&gt; *.js
---&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 在配置里设置 &lt;code&gt;sections.{目录名}.ignore_files&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;sections&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;drafts&lt;/span&gt;:
    &lt;span style=&quot;color:#75715e&quot;&gt;# 忽略{content_dir}/drafts目录&lt;/span&gt;
    &lt;span style=&quot;color:#66d9ef&quot;&gt;ignore_files&lt;/span&gt;: [&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;]&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;heading-3&quot;&gt;静态文件&lt;/h2&gt;
&lt;h3 id=&quot;heading-3.1&quot;&gt;favicon.ico&lt;/h3&gt;
&lt;p&gt;
    在 &lt;code&gt;Pelican&lt;/code&gt; 中，类似 &lt;code&gt;favicon.ico&lt;/code&gt;、&lt;code&gt;robots.txt&lt;/code&gt;、&lt;code&gt;CNAME&lt;/code&gt; 这些不需要修改的文件我原来是放到 &lt;code&gt;content/extra&lt;/code&gt; 目录，但在 &lt;code&gt;Snow&lt;/code&gt; 中，&lt;code&gt;content&lt;/code&gt; 目录下的所有文件都会视为页面文件或者页面的资源文件, 所以需要把extra目录下的文件移动到static目录下，并设置
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;statics&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;static&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;ignore_files&lt;/span&gt;:
      &lt;span style=&quot;color:#75715e&quot;&gt;# 排除所有static下的文件，不包括子目录的文件&lt;/span&gt;
      - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;^[^/]+$&amp;#34;&lt;/span&gt;
      - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;^images/&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;static/CNAME&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;CNAME&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;static/robots.txt&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;robots.txt&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;static/favicon.ico&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;favicon.ico&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;static/README.md&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;README.md&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;content/pages/css&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/css&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;h3 id=&quot;heading-3.2&quot;&gt;scss/css/js&lt;/h3&gt;
&lt;p&gt;
    在 Python 中有一个专门处理静态文件的 &lt;a href=&quot;https://webassets.readthedocs.io/en/latest/&quot;&gt;webassets&lt;/a&gt;，在 Pelican 中也有一个插件&lt;a href=&quot;https://github.com/pelican-plugins/webassets&quot;&gt;https://github.com/pelican-plugins/webassets&lt;/a&gt;, 而在 &lt;code&gt;Snow&lt;/code&gt; 中同样支持静态文件的处理, 比如编译并压缩scss文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;params.assets.css&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;files&lt;/span&gt;:
    - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/common.scss&amp;#34;&lt;/span&gt;
    - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/entry.scss&amp;#34;&lt;/span&gt;
    - &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;@theme/static/scss/entry-tree.scss&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;filters&lt;/span&gt;:
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;libscss&lt;/span&gt;:
        &lt;span style=&quot;color:#66d9ef&quot;&gt;path&lt;/span&gt;: [&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;themes/snow/static/scss/&amp;#34;&lt;/span&gt;]
    - &lt;span style=&quot;color:#66d9ef&quot;&gt;cssmin&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;output&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;static/lib/css/style.min.css&amp;#34;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;
    其中 &lt;code&gt;filters&lt;/code&gt; 支持 libscss,cssmin,jsmin(&lt;del&gt;js处理有些问题，不要使用&lt;/del&gt;, 可以使用)
&lt;/p&gt;

&lt;p&gt;
    然后就可以在模版里使用
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{%- assets &amp;#34;css&amp;#34; %}
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;link&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ config.site.url }}/{{ asset_url }}&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;rel&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt;&amp;gt;
{%- endassets %}&lt;/pre&gt;

&lt;h2 id=&quot;heading-4&quot;&gt;配置文件&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Pelican&lt;/code&gt; 使用 &lt;code&gt;pelicanconf.py&lt;/code&gt;, 而 &lt;code&gt;Snow&lt;/code&gt; 使用 &lt;code&gt;config.yaml&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;site&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;url&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;http://127.0.0.1:8000&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;title&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;紅楓吟&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;subtitle&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;风落花语风落天，花落风雨花落田.&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;language&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;zh&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;author&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;honmaple&amp;#34;&lt;/span&gt;
  &lt;span style=&quot;color:#66d9ef&quot;&gt;logo_name&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;楓&amp;#34;&lt;/span&gt;

&lt;span style=&quot;color:#66d9ef&quot;&gt;mode.publish&lt;/span&gt;:
  &lt;span style=&quot;color:#66d9ef&quot;&gt;site&lt;/span&gt;:
    &lt;span style=&quot;color:#66d9ef&quot;&gt;url&lt;/span&gt;: &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;https://honmaple.me&amp;#34;&lt;/span&gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-5&quot;&gt;主题文件&lt;/h2&gt;
&lt;p&gt;
   &lt;code&gt;Snow&lt;/code&gt; 的模版系统使用的是 &lt;a href=&quot;https://github.com/flosch/pongo2&quot;&gt;https://github.com/flosch/pongo2&lt;/a&gt;, 从 &lt;code&gt;Pelican&lt;/code&gt; 使用的 &lt;code&gt;jinja2&lt;/code&gt; 迁移到 &lt;code&gt;pongo2&lt;/code&gt; 除了相关变量的修改和各种大写外，还有部分区别
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 loop: pongo2 使用的是 &lt;code&gt;forloop&lt;/code&gt;, 计数使用的 &lt;code&gt;forloop.Counter&lt;/code&gt;, 从1开始
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 marco: pongo2 想要加载并调用文件内的函数，需要添加 &lt;code&gt;export&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{%- macro archive_list(pages) export %}
...&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 super: pongo2 使用的是 &lt;code&gt;block.Super&lt;/code&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-5.1&quot;&gt;分类功能&lt;/h3&gt;
&lt;p&gt;
    在 &lt;code&gt;Pelican&lt;/code&gt; 中，可以使用 &lt;code&gt;page.tags[0].url&lt;/code&gt; 获取标签路径，而在 &lt;code&gt;Snow&lt;/code&gt; 中想要获取标签路径, 需要使用 &lt;code&gt;get_taxonomy_url&lt;/code&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{%- for name in page.Meta.Get(&amp;#34;tags&amp;#34;) %}
&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ get_taxonomy_url(&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;tags&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#960050;background-color:#1e0010&quot;&gt;&amp;#34;&lt;/span&gt;&amp;gt;{{ name }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt;&amp;gt;
{%- endfor %}&lt;/pre&gt;

&lt;h3 id=&quot;heading-5.2&quot;&gt;子分类功能&lt;/h3&gt;
&lt;p&gt;
    原来的子分类是用我写的一个插件实现的，使用的是 &lt;code&gt;.&lt;/code&gt; 作为分隔，如 &lt;code&gt;Category: Life.Coding&lt;/code&gt;, 在 &lt;code&gt;Snow&lt;/code&gt; 中原生支持子分类, 只需要把 &lt;code&gt;.&lt;/code&gt; 改成 &lt;code&gt;/&lt;/code&gt;, 比如 &lt;code&gt;Python/Flask&lt;/code&gt; 和 &lt;code&gt;Python/Ansible/Jinja2&lt;/code&gt; 会创建如下分类系统
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;- Categories
  - Python
    - Flask
    - Ansible
      - Jinja2&lt;/pre&gt;
&lt;p&gt;
    我的博客导航栏的实现就是基于该功能
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{%- set categories = get_taxonomy(&amp;#34;categories&amp;#34;) %}
{%- if categories %}
  {%- for term in categories.Terms %}
    {%- if term.Children %}
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;dropdown&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ term.Permalink }}&amp;#34;&lt;/span&gt;&amp;gt;{{ _(term.Name) }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;ul&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;dropdown-menu&amp;#34;&lt;/span&gt;&amp;gt;
          {%- for child in term.Children %}
            &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ child.Permalink }}&amp;#34;&lt;/span&gt;&amp;gt;{{ _(child.Name) }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;
          {%- endfor %}
        &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;ul&lt;/span&gt;&amp;gt;
      &amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;
    {%- else %}
      &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;{{ term.Permalink }}&amp;#34;&lt;/span&gt;&amp;gt;{{ _(term.Name) }}&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;li&lt;/span&gt;&amp;gt;
    {%- endif %}
  {%- endfor %}
{%- endif %}&lt;/pre&gt;

&lt;h3 id=&quot;heading-5.3&quot;&gt;搜索功能&lt;/h3&gt;
&lt;p&gt;
    &lt;code&gt;Snow&lt;/code&gt; 本身没有自带搜索，但可以输出 json 文件
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;search.md&lt;/code&gt;
      首先在 &lt;code&gt;{content_dir}&lt;/code&gt; 目录下新建 &lt;code&gt;search.md&lt;/code&gt; 文件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;---
title: Search
path: search.html
template: search.html
filter: type=&amp;#34;posts&amp;#34;
paginate: 0
section: true
formats:
  json:
    path: &amp;#34;index.json&amp;#34;
    template: &amp;#34;search.json&amp;#34;
---&lt;/pre&gt;
&lt;p&gt;
      然后在字段 &lt;code&gt;formats&lt;/code&gt; 指定格式，路径和模版
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 &lt;code&gt;search.json&lt;/code&gt;
      在 &lt;code&gt;{theme}/templates&lt;/code&gt; 目录下或者 &lt;code&gt;templates&lt;/code&gt; (配置文件同级目录下) 建立
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{- scratch.Set(&amp;#34;newjson&amp;#34;, slice()) | slient }}
{%- for page in pages %}
{{- scratch.Add(&amp;#34;newjson&amp;#34;, dict(&amp;#34;index&amp;#34;, forloop.Counter - 1, &amp;#34;permalink&amp;#34;, page.Permalink, &amp;#34;summary&amp;#34;, page.Summary, &amp;#34;title&amp;#34;, page.Title, &amp;#34;content&amp;#34;, page.Content | striptags)) | slient }}
{%- endfor %}
{{- scratch.JSON(&amp;#34;newjson&amp;#34;) | safe }}&lt;/pre&gt;
&lt;p&gt;
      当写入到 &lt;code&gt;/index.json&lt;/code&gt; 后就可以利用其它的搜索库比如 &lt;code&gt;lunr&lt;/code&gt; 来进行搜索
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-5.4&quot;&gt;加密功能&lt;/h3&gt;
&lt;p&gt;
    文章加密也是我不用 &lt;code&gt;Hugo&lt;/code&gt; 的一个重要原因，我不希望使用 &lt;code&gt;snow build&lt;/code&gt; 之前还需要使用另外的程序对内容进行一个预处理，所以在 &lt;code&gt;Snow&lt;/code&gt; 中，我内置了一个名为 &lt;code&gt;encrypt&lt;/code&gt; 的插件
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;hooks&lt;/span&gt;:
  - encrypt
...&lt;/pre&gt;
&lt;p&gt;
    注册插件后就可以在内容文件里使用 &lt;code&gt;encrypt&lt;/code&gt; 的 shortcode代码，或者在模版里使用 &lt;code&gt;encrypt&lt;/code&gt; 函数
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 全局加密:
      只要在文件头添加 &lt;code&gt;passowd: xxx,hello world&lt;/code&gt;, 其中 &lt;code&gt;xxx&lt;/code&gt; 是输入的密码，&lt;code&gt;hello world&lt;/code&gt; 是显示的描述信息
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 局部加密:
      使用 shortcode 进行加密
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;encrypt&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;password&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;description&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;&amp;gt;
...
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 模版加密:
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;
  {{ page.Content | encrypt:&amp;#34;xxx&amp;#34; }}
&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    示例：&lt;a href=&quot;https://honmaple.me/articles/2018/03/%E4%B8%BApelican%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86%E5%8A%9F%E8%83%BD.html&quot;&gt;为pelican添加文章加密功能&lt;/a&gt;
&lt;/p&gt;</content>
        <category term="Life"></category>
    </entry>
    <entry xml:lang="zh">
      <title>静态博客中的shortcode实现</title>
      <link href="" rel="alternate"></link>
      <published>Tue, 07 Feb 2023 15:57:51 +0000</published>
      <updated>Sun, 05 Mar 2023 11:28:44 +0000</updated>
      <author>
        <name>honmaple</name>
      </author>
      <link rel="alternate" href="https://honmaple.me/articles/2023/02/静态博客中的shortcode实现.html" type="text/html"/>
      <id>https://honmaple.me/articles/2023/02/静态博客中的shortcode实现.html</id>
      <summary type="html">
&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;b&gt;shortcode&lt;/b&gt;,直译过来就是 &lt;b&gt;短代码&lt;/b&gt;。 使用过 &lt;b&gt;hugo&lt;/b&gt; 的人对此也一定有所了解，&lt;b&gt;shortcode&lt;/b&gt; 允许用户使用部分关键参数就可以在文章内部插入设置好的HTML模版内容，而不用写大段的HTML代码，比如插入指定视频或者音乐,使用 &lt;b&gt;shortcode&lt;/b&gt; 之前需要使用 &lt;b&gt;iframe&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;frameborder&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;marginwidth&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;marginheight&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0...&lt;/span&gt;&lt;/pre&gt;</summary>
      <content type="html">&lt;div id=&quot;table-of-contents&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;div id=&quot;text-table-of-contents&quot;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;实现方式&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.1&quot;&gt;Markdown渲染&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.2&quot;&gt;查找HTML标签&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-2.3&quot;&gt;替换HTML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;结尾&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heading-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;
   &lt;b&gt;shortcode&lt;/b&gt;,直译过来就是 &lt;b&gt;短代码&lt;/b&gt;。 使用过 &lt;b&gt;hugo&lt;/b&gt; 的人对此也一定有所了解，&lt;b&gt;shortcode&lt;/b&gt; 允许用户使用部分关键参数就可以在文章内部插入设置好的HTML模版内容，而不用写大段的HTML代码，比如插入指定视频或者音乐,使用 &lt;b&gt;shortcode&lt;/b&gt; 之前需要使用 &lt;b&gt;iframe&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;frameborder&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;marginwidth&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;marginheight&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;330&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;86&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=xxx&amp;amp;auto=0&amp;amp;height=66&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;p&gt;
   而使用 &lt;b&gt;shortcode&lt;/b&gt; 后就可以只用指定关键的 &lt;b&gt;id&lt;/b&gt; 参数
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;163music&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;xxx&lt;/span&gt;&amp;gt;}}&lt;/pre&gt;
&lt;p&gt;
   当网易云音乐的分享代码更新后，可以直接更新 &lt;b&gt;shortcode&lt;/b&gt; 代码, 而不是搜索替换每一篇包括该iframe代码的文章, 同时 &lt;b&gt;shortcode&lt;/b&gt; 也可以扩展 &lt;b&gt;Markdown&lt;/b&gt; 的功能，比如文本的居中，居左，居右
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;{{&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;align&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;left&lt;/span&gt;&amp;gt;}}
  文本内容
  {{&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;align&lt;/span&gt;&amp;gt;}}&lt;/pre&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;实现方式&lt;/h2&gt;
&lt;p&gt;
   而想要在静态博客中实现 &lt;b&gt;shortcode&lt;/b&gt; 功能, 目前有两种方式
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
 方式一: 修改 &lt;b&gt;Markdown&lt;/b&gt; 解析器, 在静态生成器解析文章内容时就可以对 &lt;b&gt;shortcode&lt;/b&gt; 进行解析，并将 &lt;b&gt;shortcode&lt;/b&gt; 替换成写好的模版，至少，我看到 &lt;b&gt;hugo&lt;/b&gt; 就是这么实现的
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
 方式二: 如果不想修改 &lt;b&gt;Markdown&lt;/b&gt; 解析器，还可以直接修改生成好的 &lt;b&gt;HTML&lt;/b&gt; 内容，这种方式实现原理很简单，&lt;b&gt;Markdown允许插入HTML代码&lt;/b&gt;, 那么我们就可以直接在文章中写一个
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;163music&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/pre&gt;
&lt;p&gt;
     然后在现有的 &lt;b&gt;Markdown&lt;/b&gt; 解析库解析文章并生成 &lt;b&gt;HTML&lt;/b&gt; 后再次对HTML内容进行解析，目前主流语言都有现成的库很方便地解析HTML内容, 下面以 &lt;b&gt;Go&lt;/b&gt; 为例
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;heading-2.1&quot;&gt;Markdown渲染&lt;/h3&gt;
&lt;p&gt;
    比如有一篇文章，我想要添加网易云音乐的某首歌到文章内部，当使用现有的Markdown库对内容进行渲染
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;github.com/russross/blackfriday/v2&amp;#34;&lt;/span&gt;
)

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;() {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;# Hello World
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;lt;shortcode _name=&amp;#34;163music&amp;#34; id=&amp;#34;xxx&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;This is one of my favorite **music**.
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;d&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;blackfriday&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Run&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;content&lt;/span&gt;)
    &lt;span style=&quot;color:#a6e22e&quot;&gt;fmt&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Println&lt;/span&gt;(string(&lt;span style=&quot;color:#a6e22e&quot;&gt;d&lt;/span&gt;))
}&lt;/pre&gt;

&lt;p&gt;
    输出结果
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;Hello World&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;shortcode&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_name&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;163music&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt; /&amp;gt;
  This is one of my favorite &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;music&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.2&quot;&gt;查找HTML标签&lt;/h3&gt;
&lt;p&gt;
    可以使用 &lt;code&gt;golang.org/x/net/html&lt;/code&gt; 对HTML内容进行解析, 并查找到 &lt;b&gt;shortcode&lt;/b&gt;
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#f92672&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#f92672&quot;&gt;import&lt;/span&gt; (
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;bytes&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;github.com/russross/blackfriday/v2&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;golang.org/x/net/html&amp;#34;&lt;/span&gt;
    &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;text/template&amp;#34;&lt;/span&gt;
)

&lt;span style=&quot;color:#66d9ef&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;main&lt;/span&gt;() {
    &lt;span style=&quot;color:#75715e&quot;&gt;// ...
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;var&lt;/span&gt; (
        &lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Buffer&lt;/span&gt;
        &lt;span style=&quot;color:#a6e22e&quot;&gt;z&lt;/span&gt; = &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;NewTokenizer&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;NewReader&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;d&lt;/span&gt;))
    )
    &lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; {
        &lt;span style=&quot;color:#a6e22e&quot;&gt;next&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;z&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Next&lt;/span&gt;()
        &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;next&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;ErrorToken&lt;/span&gt; {
            &lt;span style=&quot;color:#66d9ef&quot;&gt;break&lt;/span&gt;
        }

        &lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;z&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Token&lt;/span&gt;()
        &lt;span style=&quot;color:#66d9ef&quot;&gt;switch&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;next&lt;/span&gt; {
        &lt;span style=&quot;color:#66d9ef&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;StartTagToken&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;html&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;SelfClosingTagToken&lt;/span&gt;:
            &lt;span style=&quot;color:#75715e&quot;&gt;// 找到shortcode标签
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;            &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Data&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;shortcode&amp;#34;&lt;/span&gt; {

            }
        }
        &lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;WriteString&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;String&lt;/span&gt;())
    }
    &lt;span style=&quot;color:#a6e22e&quot;&gt;fmt&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Println&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;String&lt;/span&gt;())
}&lt;/pre&gt;

&lt;h3 id=&quot;heading-2.3&quot;&gt;替换HTML&lt;/h3&gt;
&lt;p&gt;
    首先把需要替换的 &lt;b&gt;iframe&lt;/b&gt; 转换成模版
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;replace&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;lt;iframe
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;frameborder=&amp;#34;no&amp;#34; border=&amp;#34;0&amp;#34;
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;marginwidth=&amp;#34;0&amp;#34; marginheight=&amp;#34;0&amp;#34;
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;width=330 height=86
&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;src=&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;{{&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;.id&lt;/span&gt; &lt;span style=&quot;color:#75715e&quot;&gt;}}&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;amp;auto=0&amp;amp;height=66&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;`&lt;/span&gt;

&lt;span style=&quot;color:#a6e22e&quot;&gt;tmpl&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;template&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;New&lt;/span&gt;(&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;).&lt;span style=&quot;color:#a6e22e&quot;&gt;Parse&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;replace&lt;/span&gt;)
&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; {
    panic(&lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt;)
}&lt;/pre&gt;

&lt;p&gt;
    然后根据标签参数替换原来的HTML
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&lt;span style=&quot;color:#75715e&quot;&gt;// 获取该标签的参数
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; make(&lt;span style=&quot;color:#66d9ef&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#66d9ef&quot;&gt;string&lt;/span&gt;)
&lt;span style=&quot;color:#66d9ef&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;_&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;attr&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;range&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;token&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Attr&lt;/span&gt; {
    &lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt;[&lt;span style=&quot;color:#a6e22e&quot;&gt;attr&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Key&lt;/span&gt;] = &lt;span style=&quot;color:#a6e22e&quot;&gt;attr&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Val&lt;/span&gt;
}
&lt;span style=&quot;color:#75715e&quot;&gt;// 确认是163music
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt;[&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;_name&amp;#34;&lt;/span&gt;] &lt;span style=&quot;color:#f92672&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;163music&amp;#34;&lt;/span&gt; {
    &lt;span style=&quot;color:#75715e&quot;&gt;// 获取替换的内容
&lt;/span&gt;&lt;span style=&quot;color:#75715e&quot;&gt;&lt;/span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;buf&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Buffer&lt;/span&gt;
    &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;tmpl&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;Execute&lt;/span&gt;(&lt;span style=&quot;color:#f92672&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e&quot;&gt;buf&lt;/span&gt;, &lt;span style=&quot;color:#a6e22e&quot;&gt;attrs&lt;/span&gt;)
    &lt;span style=&quot;color:#66d9ef&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;nil&lt;/span&gt; {
        panic(&lt;span style=&quot;color:#a6e22e&quot;&gt;err&lt;/span&gt;)
    }
    &lt;span style=&quot;color:#a6e22e&quot;&gt;w&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;WriteString&lt;/span&gt;(&lt;span style=&quot;color:#a6e22e&quot;&gt;buf&lt;/span&gt;.&lt;span style=&quot;color:#a6e22e&quot;&gt;String&lt;/span&gt;())
    &lt;span style=&quot;color:#66d9ef&quot;&gt;continue&lt;/span&gt;
}&lt;/pre&gt;

&lt;p&gt;
    最后的输出结果
&lt;/p&gt;
&lt;pre style=&quot;color:#f8f8f2;background-color:#272822&quot;&gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;Hello World&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;h1&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;frameborder&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;marginwidth&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;marginheight&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;330&lt;/span&gt; &lt;span style=&quot;color:#a6e22e&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;86&lt;/span&gt;
     &lt;span style=&quot;color:#a6e22e&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#e6db74&quot;&gt;&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=xxx&amp;amp;auto=0&amp;amp;height=66&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;iframe&lt;/span&gt;&amp;gt;
  This is one of my favorite &amp;lt;&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;music&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;strong&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span style=&quot;color:#f92672&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;

&lt;h2 id=&quot;heading-3&quot;&gt;结尾&lt;/h2&gt;
&lt;p&gt;
   目前&lt;a href=&quot;https://github.com/honmaple/snow&quot;&gt;snow&lt;/a&gt;的 &lt;b&gt;shortcode&lt;/b&gt; 功能就是根据第二种方式实现的，具体可以参考 &lt;a href=&quot;https://github.com/honmaple/snow/blob/master/builder/hook/shortcode/shortcode.go&quot;&gt;hooks/shortcode/shortcode.go&lt;/a&gt;, 利用此特性甚至还可以实现类似 &lt;b&gt;Hugo&lt;/b&gt; 中的 &lt;b&gt;Markdown Render Hook&lt;/b&gt; 功能,用于自定义 &lt;code&gt;img&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt; 等标签
&lt;/p&gt;</content>
        <category term="Linux"></category>
    </entry>
</feed>